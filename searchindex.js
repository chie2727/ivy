Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/container/MultiDevContainer", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_docstrings", "deep_dive/11_docstring_examples", "deep_dive/12_array_api_tests", "deep_dive/13_ivy_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_arguments", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/tril", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/DevClonedItem", "functional/ivy/device/DevClonedIter", "functional/ivy/device/DevClonedNest", "functional/ivy/device/DevDistItem", "functional/ivy/device/DevDistIter", "functional/ivy/device/DevDistNest", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/device/DevMapper", "functional/ivy/device/DevMapperMultiProc", "functional/ivy/device/MultiDev:\n    def __init__", "functional/ivy/device/MultiDevItem", "functional/ivy/device/MultiDevIter", "functional/ivy/device/MultiDevNest", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_clone", "functional/ivy/device/dev_clone_array", "functional/ivy/device/dev_clone_iter", "functional/ivy/device/dev_clone_nest", "functional/ivy/device/dev_dist", "functional/ivy/device/dev_dist_array", "functional/ivy/device/dev_dist_iter", "functional/ivy/device/dev_dist_nest", "functional/ivy/device/dev_unify", "functional/ivy/device/dev_unify_array", "functional/ivy/device/dev_unify_iter", "functional/ivy/device/dev_unify_nest", "functional/ivy/device/dev_util", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_to_tuple", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_list", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/container/MultiDevContainer.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_docstrings.rst", "deep_dive/11_docstring_examples.rst", "deep_dive/12_array_api_tests.rst", "deep_dive/13_ivy_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_arguments.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/DevClonedItem.rst", "functional/ivy/device/DevClonedIter.rst", "functional/ivy/device/DevClonedNest.rst", "functional/ivy/device/DevDistItem.rst", "functional/ivy/device/DevDistIter.rst", "functional/ivy/device/DevDistNest.rst", "functional/ivy/device/DevManager:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/device/DevMapper.rst", "functional/ivy/device/DevMapperMultiProc.rst", "functional/ivy/device/MultiDev:\n    def __init__.rst", "functional/ivy/device/MultiDevItem.rst", "functional/ivy/device/MultiDevIter.rst", "functional/ivy/device/MultiDevNest.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_clone.rst", "functional/ivy/device/dev_clone_array.rst", "functional/ivy/device/dev_clone_iter.rst", "functional/ivy/device/dev_clone_nest.rst", "functional/ivy/device/dev_dist.rst", "functional/ivy/device/dev_dist_array.rst", "functional/ivy/device/dev_dist_iter.rst", "functional/ivy/device/dev_dist_nest.rst", "functional/ivy/device/dev_unify.rst", "functional/ivy/device/dev_unify_array.rst", "functional/ivy/device/dev_unify_iter.rst", "functional/ivy/device/dev_unify_nest.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_to_tuple.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "MultiDevContainer", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Arguments", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.empty_like", "eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.full_like", "linspace", "logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.meshgrid", "native_array", "ivy.Array.native_array", "ivy.native_array", "ones", "ones_like", "ivy.Array.ones_like", "ivy.ones_like", "tril", "ivy.Array.tril", "ivy.tril", "triu", "ivy.Array.triu", "ivy.triu", "zeros", "zeros_like", "ivy.Array.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "invalid_dtype", "is_float_dtype", "is_int_dtype", "promote_types", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "DevClonedItem", "DevClonedIter", "DevClonedNest", "DevDistItem", "DevDistIter", "DevDistNest", "&lt;no title&gt;", "DevMapper", "DevMapperMultiProc", "&lt;no title&gt;", "MultiDevItem", "MultiDevIter", "MultiDevNest", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_clone", "dev_clone_array", "dev_clone_iter", "dev_clone_nest", "dev_dist", "dev_dist_array", "dev_dist_iter", "dev_dist_nest", "dev_unify", "dev_unify_array", "dev_unify_iter", "dev_unify_nest", "dev_util", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_min_base", "get_min_denominator", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_min_base", "set_min_denominator", "set_queue_timeout", "set_tmp_dir", "shape", "shape_to_tuple", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_list", "to_numpy", "to_scalar", "try_else_none", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.cholesky", "cross", "ivy.Array.cross", "ivy.cross", "det", "ivy.Array.det", "ivy.det", "diagonal", "ivy.Array.diagonal", "ivy.diagonal", "eigh", "ivy.Array.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.matrix_norm", "matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.matrix_transpose", "outer", "ivy.Array.outer", "ivy.outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.qr", "slogdet", "solve", "ivy.Array.solve", "ivy.solve", "svd", "ivy.Array.svd", "ivy.svd", "svdvals", "ivy.Array.svdvals", "ivy.svdvals", "tensordot", "ivy.Array.tensordot", "ivy.tensordot", "trace", "ivy.Array.trace", "ivy.trace", "vecdot", "ivy.Array.vecdot", "ivy.vecdot", "vector_norm", "ivy.Array.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 124, 125, 126, 127, 129, 131, 132, 134, 135, 136, 146, 147, 148, 213, 236, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 538, 545, 582, 588, 607, 612, 614, 616, 618, 648, 813, 815, 825, 848, 851, 915, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "ivi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 184, 187, 188, 191, 192, 193, 196, 199, 200, 203, 206, 209, 210, 213, 217, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 306, 310, 314, 319, 323, 327, 331, 335, 339, 343, 347, 351, 355, 359, 363, 367, 371, 375, 380, 384, 388, 392, 396, 400, 404, 408, 412, 416, 420, 424, 428, 432, 436, 440, 444, 448, 452, 456, 460, 464, 468, 469, 470, 475, 479, 483, 487, 491, 495, 499, 503, 507, 511, 515, 519, 524, 529, 534, 538, 539, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 619, 623, 624, 628, 632, 636, 640, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 670, 673, 676, 679, 682, 685, 689, 692, 693, 696, 699, 702, 705, 708, 709, 712, 715, 718, 721, 724, 727, 730, 733, 734, 739, 744, 749, 750, 755, 759, 763, 767, 771, 775, 779, 783, 788, 789, 793, 797, 801, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 836, 837, 838, 841, 842, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 860, 861, 862, 863, 868, 873, 874, 878, 882, 886, 890, 894, 898, 902, 906, 907, 911, 915, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963], "backend_handl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 915], "contextmanag": [0, 1], "modul": [0, 4, 5, 16, 18, 21, 67, 68, 72, 73, 74, 75, 76, 113, 114, 120, 121, 122, 124, 128, 131, 132, 134, 136, 147, 148, 538, 589, 836, 837, 841, 915, 923, 924, 925, 926, 927, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 951, 952, 959, 960], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 125, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 918, 919, 920, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963], "base": [0, 19, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 123, 125, 131, 147, 174, 192, 213, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 300, 388, 391, 432, 435, 436, 439, 440, 443, 444, 447, 487, 490, 538, 573, 596, 603, 612, 853, 854, 855, 859, 861, 873, 874, 877, 923, 924, 925, 928, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "object": [0, 23, 69, 72, 73, 74, 75, 76, 133, 136, 174, 184, 186, 213, 233, 250, 295, 612, 813, 816, 818, 820, 821, 822, 827, 828, 829, 830, 836, 847, 928, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 949, 950], "__init__": [0, 1, 4, 5, 72, 73, 74, 75, 76, 116, 122, 126, 131, 133, 134, 135, 136, 213, 214, 215, 216, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265, 612, 613, 836, 837, 841, 915, 923, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "choose_random_backend": 0, "exclud": [0, 2, 118, 131, 174, 175, 836, 842, 844], "none": [0, 2, 5, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 121, 125, 126, 127, 128, 129, 131, 133, 135, 136, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 224, 226, 228, 229, 230, 233, 236, 250, 259, 260, 268, 269, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 576, 578, 579, 583, 589, 591, 594, 595, 596, 597, 602, 603, 609, 612, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 819, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 855, 856, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 926, 927, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "clear_backend_stack": 0, "current_backend": [0, 74, 75, 116, 121], "arg": [0, 4, 21, 23, 26, 27, 28, 69, 72, 73, 131, 133, 135, 250, 259, 274, 278, 282, 294, 538, 595, 926, 927, 949, 950], "kwarg": [0, 4, 23, 26, 27, 28, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 131, 133, 135, 250, 259, 274, 278, 282, 538, 588, 926, 927, 949, 950], "return": [0, 4, 5, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 249, 250, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 594, 595, 596, 597, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 826, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 918, 920, 926, 927, 937, 946, 947, 953, 957], "current": [0, 4, 5, 12, 16, 18, 19, 20, 21, 72, 73, 74, 75, 76, 121, 127, 131, 136, 147, 148, 213, 234, 235, 237, 249, 250, 259, 283, 284, 288, 290, 538, 572, 579, 583, 590, 592, 813, 814, 823, 824, 915], "prioriti": [0, 4, 19, 72, 73, 128], "global_backend": [0, 4], "argument": [0, 4, 5, 14, 20, 26, 27, 28, 29, 30, 69, 72, 73, 74, 75, 76, 115, 116, 117, 118, 120, 121, 122, 124, 125, 131, 133, 134, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 241, 250, 259, 260, 274, 278, 282, 300, 301, 304, 314, 317, 319, 322, 363, 366, 396, 399, 479, 482, 511, 514, 515, 518, 524, 528, 538, 544, 545, 549, 559, 566, 588, 595, 650, 653, 662, 663, 673, 675, 749, 783, 786, 813, 819, 831, 832, 835, 853, 855, 859, 873, 878, 881, 898, 901, 906, 907, 910, 918, 920, 926, 927, 949, 950], "s": [0, 4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 26, 29, 30, 69, 72, 73, 115, 117, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 173, 174, 193, 195, 203, 205, 206, 208, 213, 234, 235, 250, 269, 293, 300, 491, 494, 538, 547, 612, 619, 621, 624, 626, 632, 634, 640, 642, 663, 712, 714, 715, 717, 813, 819, 825, 873, 894, 897, 902, 905, 915, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "paramet": [0, 4, 5, 26, 27, 28, 29, 30, 67, 68, 72, 73, 74, 75, 76, 113, 114, 116, 117, 120, 133, 134, 147, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 259, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 542, 544, 545, 546, 547, 548, 549, 550, 551, 553, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 614, 617, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 918, 920, 926, 927, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "from": [0, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 67, 68, 69, 72, 73, 74, 75, 76, 113, 114, 115, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 174, 175, 176, 178, 180, 182, 184, 186, 187, 188, 190, 193, 195, 196, 198, 200, 202, 210, 212, 213, 222, 225, 241, 250, 259, 260, 269, 284, 288, 293, 294, 300, 404, 407, 511, 514, 538, 559, 566, 567, 570, 606, 612, 619, 621, 632, 634, 650, 658, 661, 663, 673, 675, 712, 714, 724, 726, 749, 767, 770, 779, 782, 789, 792, 809, 810, 811, 812, 813, 815, 825, 826, 836, 837, 838, 839, 841, 842, 844, 848, 852, 853, 854, 860, 873, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 921, 926, 927, 937, 945, 948, 953, 957], "which": [0, 4, 5, 14, 15, 16, 18, 19, 20, 21, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 159, 164, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 227, 231, 233, 236, 237, 249, 250, 259, 260, 270, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 290, 292, 293, 294, 300, 491, 494, 538, 544, 556, 557, 559, 566, 567, 570, 572, 578, 582, 590, 591, 592, 594, 595, 610, 612, 619, 621, 623, 624, 626, 632, 634, 636, 638, 640, 642, 645, 647, 648, 650, 661, 663, 667, 669, 673, 675, 689, 691, 709, 711, 712, 714, 724, 726, 727, 729, 733, 739, 742, 744, 747, 749, 755, 758, 767, 770, 775, 778, 783, 786, 788, 793, 796, 813, 818, 819, 820, 821, 826, 827, 828, 829, 830, 836, 837, 838, 839, 842, 844, 848, 849, 850, 851, 852, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 918, 920, 926, 927, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "try": [0, 4, 13, 15, 16, 18, 19, 20, 21, 72, 73, 124, 125, 133, 148, 538, 609, 915], "infer": [0, 4, 115, 122, 126, 127, 131, 136, 171, 172, 174, 175, 176, 178, 180, 182, 187, 188, 190, 196, 198, 200, 202, 210, 212, 300, 404, 407, 538, 575, 600, 749, 779, 782], "when": [0, 4, 14, 15, 18, 19, 20, 23, 69, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 148, 213, 219, 250, 300, 314, 317, 392, 395, 487, 490, 538, 549, 582, 603, 733, 734, 737, 739, 742, 744, 747, 813, 824, 848, 849, 850, 852, 873, 878, 881, 886, 889, 894, 897, 902, 905, 915, 949, 950], "global": [0, 4, 5, 6, 12, 72, 73, 74, 75, 76, 121, 122, 126, 127, 131, 213, 228, 229, 230, 250, 259, 260, 292, 293, 294, 538, 573, 574, 593, 596, 597, 598, 602, 603, 831, 832, 835, 951, 952], "set": [0, 4, 5, 6, 12, 14, 17, 19, 26, 29, 30, 60, 69, 72, 73, 106, 115, 116, 121, 123, 124, 125, 126, 127, 128, 131, 133, 134, 250, 269, 279, 280, 291, 292, 293, 294, 300, 331, 334, 538, 539, 542, 596, 597, 598, 599, 612, 619, 621, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 663, 667, 669, 689, 691, 693, 695, 702, 704, 709, 711, 813, 814, 823, 824, 825, 829, 830, 836, 846, 848, 849, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 894, 897, 902, 905, 937, 946, 953, 954, 955, 956, 957, 958], "ret": [0, 4, 5, 12, 26, 27, 28, 29, 30, 72, 73, 116, 117, 131, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 225, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 250, 259, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 542, 544, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 594, 595, 600, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 617, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 918, 920, 926, 927, 953, 957], "exampl": [0, 4, 5, 6, 12, 16, 18, 19, 20, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 67, 68, 69, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 147, 148, 159, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 187, 188, 190, 193, 195, 199, 200, 202, 209, 210, 212, 213, 219, 222, 223, 224, 225, 226, 234, 235, 250, 269, 270, 272, 284, 285, 286, 287, 288, 291, 293, 295, 297, 298, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 335, 338, 339, 342, 343, 346, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 388, 391, 396, 397, 398, 399, 404, 407, 408, 411, 424, 427, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 546, 547, 555, 556, 563, 566, 567, 568, 569, 570, 571, 574, 585, 600, 601, 606, 607, 608, 612, 614, 615, 616, 617, 618, 650, 651, 653, 655, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 682, 684, 693, 695, 699, 701, 712, 714, 718, 720, 721, 723, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 796, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 894, 897, 898, 901, 906, 907, 910, 915], "If": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 23, 26, 29, 30, 69, 72, 73, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 148, 174, 175, 179, 180, 182, 183, 187, 188, 190, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 241, 250, 269, 293, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 432, 435, 436, 439, 444, 447, 448, 451, 456, 459, 460, 463, 470, 473, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 538, 582, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 663, 664, 666, 667, 669, 689, 691, 693, 695, 702, 704, 705, 707, 709, 711, 712, 714, 724, 726, 727, 729, 733, 734, 737, 739, 742, 744, 747, 749, 763, 766, 767, 770, 783, 786, 788, 789, 792, 793, 796, 809, 810, 811, 813, 825, 826, 836, 841, 842, 844, 848, 849, 850, 851, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915], "import": [0, 4, 15, 20, 67, 68, 113, 114, 116, 117, 118, 122, 124, 125, 126, 127, 128, 131, 133, 134, 136, 148, 250, 291, 915, 921], "numpi": [0, 4, 5, 6, 14, 15, 19, 20, 72, 73, 120, 122, 126, 127, 128, 129, 131, 133, 136, 538, 607, 873, 874, 877, 915], "np": [0, 4, 124, 126, 127, 128, 129, 133, 134, 136, 915], "x": [0, 4, 12, 21, 26, 29, 30, 33, 34, 37, 38, 39, 40, 51, 52, 59, 60, 70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 107, 108, 116, 117, 118, 121, 122, 125, 128, 129, 131, 133, 134, 135, 136, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 176, 178, 180, 182, 184, 186, 188, 190, 193, 195, 196, 198, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 222, 223, 224, 225, 226, 231, 250, 269, 270, 271, 272, 275, 276, 284, 288, 293, 295, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 316, 317, 318, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 384, 387, 388, 391, 392, 395, 396, 397, 398, 399, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 456, 459, 468, 469, 475, 478, 483, 486, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 546, 547, 548, 550, 551, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 577, 578, 580, 581, 582, 584, 585, 586, 587, 591, 600, 601, 604, 606, 607, 608, 610, 611, 612, 623, 628, 630, 631, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 689, 691, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 712, 714, 715, 717, 718, 720, 721, 723, 727, 729, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 795, 796, 797, 800, 801, 804, 805, 808, 813, 814, 819, 823, 824, 825, 831, 832, 835, 836, 838, 839, 840, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 866, 867, 868, 871, 872, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 937, 948], "arrai": [0, 4, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 148, 149, 157, 159, 160, 161, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 222, 224, 225, 226, 231, 233, 236, 238, 239, 241, 245, 250, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 290, 294, 295, 300, 301, 303, 304, 305, 306, 309, 310, 313, 314, 316, 317, 318, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 365, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 398, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 537, 538, 539, 541, 542, 543, 546, 547, 548, 550, 551, 553, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 575, 577, 578, 579, 580, 581, 582, 584, 585, 587, 590, 591, 592, 594, 595, 600, 601, 604, 606, 607, 608, 610, 611, 612, 614, 616, 617, 618, 619, 621, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 752, 753, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 785, 786, 787, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 815, 825, 826, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 918, 920, 937, 945, 948], "2": [0, 4, 18, 19, 21, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 59, 60, 69, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 118, 122, 125, 129, 130, 131, 133, 134, 135, 136, 148, 159, 161, 162, 163, 164, 170, 173, 174, 187, 188, 190, 193, 195, 199, 200, 202, 210, 212, 213, 219, 222, 223, 224, 225, 226, 250, 269, 270, 272, 284, 286, 288, 295, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 327, 330, 331, 334, 339, 342, 343, 346, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 388, 391, 396, 397, 398, 399, 404, 407, 408, 411, 424, 427, 428, 431, 444, 447, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 546, 547, 550, 551, 553, 556, 563, 566, 567, 568, 569, 570, 571, 585, 600, 601, 606, 612, 614, 615, 616, 617, 618, 650, 653, 654, 655, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 674, 675, 682, 684, 685, 688, 689, 691, 693, 695, 699, 701, 702, 704, 705, 707, 712, 714, 718, 719, 720, 721, 723, 727, 728, 729, 733, 734, 737, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 906, 907, 910, 915], "0": [0, 4, 19, 31, 32, 37, 38, 39, 40, 41, 42, 47, 48, 51, 52, 53, 54, 59, 60, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 131, 133, 134, 135, 136, 159, 161, 162, 163, 164, 165, 168, 170, 174, 175, 183, 191, 192, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 219, 222, 224, 225, 226, 233, 250, 252, 255, 259, 262, 266, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 291, 293, 294, 298, 300, 301, 302, 304, 305, 306, 309, 310, 313, 314, 317, 318, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 347, 350, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 397, 398, 399, 408, 411, 428, 431, 432, 435, 436, 439, 444, 447, 468, 469, 470, 473, 475, 478, 479, 482, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 546, 547, 550, 551, 553, 555, 556, 557, 563, 566, 567, 570, 571, 576, 585, 591, 594, 595, 600, 606, 607, 608, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 636, 637, 638, 639, 650, 651, 653, 655, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 674, 675, 682, 684, 712, 714, 718, 720, 721, 722, 723, 727, 729, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 771, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 795, 796, 797, 800, 805, 807, 813, 825, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 866, 873, 874, 877, 878, 881, 882, 885, 894, 895, 896, 897, 898, 901, 902, 903, 904, 905, 906, 907, 910, 915, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960], "print": [0, 4, 5, 6, 12, 18, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 67, 68, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 113, 114, 118, 125, 131, 133, 134, 135, 159, 161, 162, 163, 164, 165, 168, 170, 174, 187, 188, 190, 193, 195, 199, 200, 202, 209, 210, 212, 213, 219, 222, 223, 224, 225, 226, 234, 235, 250, 270, 284, 285, 286, 287, 288, 290, 293, 297, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 335, 338, 339, 342, 343, 346, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 388, 391, 396, 397, 398, 399, 404, 407, 408, 411, 424, 427, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 546, 547, 555, 556, 563, 566, 567, 568, 569, 570, 571, 574, 592, 600, 601, 606, 607, 608, 612, 614, 615, 617, 618, 650, 651, 653, 655, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 682, 684, 699, 701, 712, 714, 718, 720, 721, 723, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 753, 754, 763, 766, 767, 770, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 894, 897, 898, 901, 906, 907, 910, 915], "function": [0, 4, 5, 6, 14, 19, 21, 24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 67, 68, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 128, 130, 132, 133, 134, 135, 146, 147, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 316, 317, 318, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 918, 920, 923, 924, 925, 953, 956, 958], "py": [0, 4, 5, 19, 116, 117, 121, 122, 126, 127, 129, 131, 133, 135, 136, 836, 837, 841], "noqa": [0, 4, 5, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 339, 342, 359, 362, 363, 366, 371, 374, 428, 431, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 873, 878, 881], "The": [0, 4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 26, 27, 28, 29, 30, 69, 72, 73, 74, 75, 76, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 147, 159, 160, 161, 164, 170, 171, 172, 174, 175, 184, 186, 192, 203, 205, 206, 208, 213, 217, 218, 219, 227, 232, 234, 235, 237, 240, 245, 249, 250, 259, 260, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 538, 544, 546, 549, 550, 558, 559, 565, 567, 570, 580, 581, 582, 584, 585, 586, 587, 589, 594, 595, 596, 597, 598, 601, 602, 603, 611, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 645, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 733, 734, 737, 739, 742, 744, 747, 749, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 788, 801, 804, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 841, 848, 849, 850, 851, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 926, 927, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957], "set_backend": [0, 4, 5, 12, 121, 122, 123, 126, 213, 234, 235, 250, 291, 538, 600, 915], "ha": [0, 4, 5, 14, 15, 16, 19, 69, 72, 73, 117, 118, 121, 122, 123, 126, 127, 131, 133, 135, 136, 147, 148, 174, 193, 195, 250, 269, 300, 301, 304, 470, 473, 487, 490, 663, 685, 688, 708, 709, 711, 712, 714, 721, 723, 749, 763, 766, 789, 792, 853, 854, 855, 859, 861, 873, 882, 885, 890, 893, 894, 897, 898, 901, 902, 905], "over": [0, 4, 14, 16, 18, 67, 68, 69, 72, 73, 113, 114, 117, 118, 122, 128, 133, 148, 663, 689, 691, 718, 720, 724, 726, 727, 729, 831, 832, 835, 836, 842, 844, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 951, 952], "ani": [0, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 65, 66, 67, 68, 72, 73, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 250, 295, 300, 301, 304, 314, 317, 319, 322, 363, 366, 380, 383, 396, 399, 408, 411, 428, 431, 479, 482, 511, 514, 515, 518, 524, 528, 538, 539, 542, 559, 560, 561, 562, 563, 566, 577, 584, 585, 586, 587, 602, 603, 612, 623, 650, 653, 660, 662, 663, 673, 675, 749, 783, 786, 809, 810, 811, 812, 813, 819, 823, 831, 832, 835, 836, 842, 844, 853, 855, 859, 873, 878, 881, 906, 907, 910, 915], "pass": [0, 4, 20, 67, 68, 72, 73, 74, 75, 76, 113, 114, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 133, 148, 213, 227, 250, 259, 294, 300, 331, 334, 538, 549, 582, 612, 648, 809, 810, 811, 926, 927, 949, 950, 953, 957, 959, 960], "jax": [0, 4, 5, 6, 15, 16, 19, 20, 122, 126, 127, 128, 129, 131, 133, 136, 148, 612, 628, 630, 853, 854, 855, 859, 861, 915], "get_backend": [0, 121, 122], "specifi": [0, 5, 69, 72, 73, 115, 120, 121, 126, 127, 128, 129, 131, 134, 135, 136, 174, 175, 179, 187, 191, 192, 199, 203, 205, 206, 208, 209, 213, 219, 221, 250, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 288, 290, 293, 294, 295, 300, 491, 494, 538, 544, 556, 566, 567, 570, 577, 610, 663, 673, 675, 689, 691, 718, 720, 721, 723, 724, 726, 727, 729, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 767, 770, 783, 786, 789, 792, 793, 796, 805, 808, 813, 818, 820, 821, 827, 828, 829, 830, 848, 849, 850, 853, 854, 855, 859, 861, 862, 863, 866, 873, 874, 877, 890, 893, 898, 901, 906, 907, 910, 911, 914], "isn": [0, 5, 19, 134, 148], "t": [0, 5, 15, 16, 18, 19, 20, 21, 67, 68, 113, 114, 118, 126, 131, 133, 134, 135, 136, 148, 538, 547, 650, 659, 660], "associ": [0, 5, 19, 121, 123, 148, 300, 314, 317, 470, 473, 663, 693, 695, 702, 704, 730, 732], "option": [0, 5, 18, 19, 26, 27, 28, 29, 30, 67, 68, 72, 73, 74, 75, 113, 114, 116, 117, 118, 121, 125, 126, 127, 128, 129, 131, 136, 148, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 227, 228, 229, 230, 237, 249, 250, 269, 293, 294, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 544, 550, 551, 553, 556, 557, 558, 560, 561, 562, 564, 566, 567, 570, 578, 589, 591, 594, 595, 602, 603, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 819, 824, 825, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 850, 852, 853, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "str": [0, 5, 23, 26, 27, 28, 69, 72, 73, 126, 127, 171, 172, 174, 193, 195, 213, 217, 227, 228, 229, 232, 233, 236, 237, 238, 239, 242, 243, 244, 249, 250, 266, 269, 270, 272, 275, 276, 277, 278, 294, 538, 544, 558, 560, 561, 562, 589, 594, 595, 650, 651, 653, 655, 656, 657, 663, 705, 707, 809, 810, 811, 812, 813, 819, 873, 874, 877], "we": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 67, 68, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 147, 148, 612, 623, 915, 921], "want": [0, 5, 15, 17, 18, 19, 67, 68, 113, 114, 120, 134, 135, 136, 148], "retriev": [0, 5, 19, 538, 544], "i": [0, 5, 19, 21, 115, 131, 134, 136, 174, 175, 193, 195, 300, 301, 304, 331, 334, 347, 350, 355, 358, 363, 366, 396, 399, 400, 403, 412, 415, 468, 469, 475, 478, 487, 490, 491, 494, 538, 546, 547, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 663, 667, 669, 685, 688, 693, 695, 702, 704, 709, 711, 712, 714, 721, 723, 727, 729, 749, 793, 796, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905], "e": [0, 5, 15, 16, 17, 19, 21, 69, 115, 125, 134, 148, 173, 174, 193, 195, 213, 218, 241, 250, 266, 300, 301, 304, 331, 334, 347, 350, 355, 358, 363, 366, 388, 391, 396, 399, 400, 403, 412, 415, 432, 435, 440, 443, 468, 469, 475, 478, 487, 490, 491, 494, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 663, 667, 669, 685, 688, 693, 695, 702, 704, 709, 711, 712, 714, 727, 729, 749, 793, 796, 836, 841, 842, 844, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905], "one": [0, 5, 15, 16, 18, 19, 69, 72, 73, 83, 84, 85, 86, 97, 98, 101, 102, 118, 121, 124, 125, 126, 128, 129, 130, 133, 134, 136, 148, 174, 175, 193, 195, 213, 220, 222, 225, 250, 279, 280, 281, 282, 294, 301, 305, 314, 318, 538, 539, 541, 542, 543, 567, 571, 588, 591, 594, 595, 663, 685, 688, 689, 691, 699, 701, 705, 707, 724, 726, 727, 729, 749, 750, 754, 763, 766, 767, 770, 783, 786, 787, 789, 792, 838, 840, 848, 849, 851, 853, 854, 855, 859, 860, 861, 873, 874, 877, 915], "default": [0, 5, 19, 23, 26, 27, 28, 29, 30, 67, 68, 69, 72, 73, 74, 75, 76, 113, 114, 117, 118, 121, 122, 125, 126, 127, 129, 135, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 228, 229, 230, 231, 250, 259, 260, 269, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 542, 544, 550, 551, 553, 556, 557, 560, 561, 562, 564, 565, 566, 567, 570, 575, 576, 577, 578, 579, 582, 583, 584, 585, 587, 588, 589, 591, 593, 594, 595, 598, 600, 602, 603, 610, 611, 612, 614, 617, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 826, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 926, 927, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "torch": [0, 5, 12, 19, 116, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 171, 172, 213, 234, 235, 250, 291, 538, 600, 749, 763, 766, 915], "tensorflow": [0, 5, 12, 15, 16, 19, 20, 126, 127, 128, 129, 131, 136, 148, 915], "mxnet": [0, 5, 15, 20, 126, 127, 128, 131, 136, 915], "either": [0, 5, 12, 18, 19, 21, 69, 72, 73, 117, 118, 121, 122, 125, 126, 127, 131, 133, 134, 148, 174, 184, 186, 300, 314, 317, 331, 334, 416, 419, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 491, 494, 499, 502, 503, 506, 524, 528, 538, 559, 584, 588, 589, 663, 685, 688, 809, 810, 811, 812, 873, 890, 893, 898, 901, 937, 948, 949, 950], "doesn": [0, 5, 18, 21, 118, 126, 131, 148], "matter": [0, 5, 14, 118], "been": [0, 5, 19, 117, 121, 122, 125, 126, 127, 129, 131, 147, 148, 250, 269, 538, 560, 561, 562, 836, 837], "ivy_np": [0, 5], "us": [0, 5, 12, 15, 16, 17, 19, 20, 23, 37, 38, 67, 68, 69, 72, 73, 74, 75, 76, 83, 84, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 147, 148, 159, 161, 162, 163, 164, 165, 168, 170, 173, 213, 232, 250, 259, 260, 285, 289, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 319, 322, 339, 342, 359, 362, 371, 374, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 538, 566, 573, 574, 588, 594, 595, 596, 597, 602, 603, 612, 614, 617, 619, 621, 632, 634, 636, 638, 650, 656, 658, 659, 661, 662, 663, 670, 672, 673, 675, 689, 691, 733, 734, 737, 749, 763, 766, 767, 770, 775, 778, 783, 786, 797, 800, 809, 810, 811, 812, 813, 814, 816, 822, 823, 824, 826, 831, 832, 835, 848, 849, 850, 851, 853, 854, 873, 874, 877, 906, 907, 910, 915, 937, 945, 948, 949, 950, 951, 952, 953, 955, 956], "ivy_jax": [0, 5], "subsequ": [0, 6, 18, 118, 120, 121, 124, 128, 129, 135], "call": [0, 6, 12, 15, 21, 23, 69, 74, 75, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 250, 294, 538, 593, 598, 609, 612, 623, 813, 814, 819, 823, 824, 937, 948, 949, 950, 953, 957], "nativ": [0, 6, 26, 28, 29, 30, 72, 73, 126, 128, 133, 134, 174, 196, 198, 213, 217, 218, 227, 250, 266, 267, 268, 269, 270, 289, 296, 299, 538, 582, 584, 587, 926, 927], "native_arrai": [0, 6, 12, 31, 32, 39, 40, 74, 75, 85, 86, 159, 161, 162, 163, 164, 165, 168, 170, 174, 193, 195, 213, 222, 225, 250, 272, 288, 300, 301, 304, 319, 322, 339, 342, 359, 362, 363, 366, 396, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 511, 514, 515, 518, 529, 533, 538, 539, 540, 541, 542, 543, 547, 555, 556, 563, 566, 567, 570, 601, 606, 607, 608, 612, 614, 617, 650, 653, 656, 657, 662, 663, 667, 669, 670, 672, 673, 675, 718, 720, 733, 734, 737, 744, 747, 749, 750, 753, 763, 766, 767, 770, 775, 778, 788, 797, 800, 831, 832, 835, 836, 837, 848, 849, 850, 851, 852, 853, 854, 855, 859, 873, 874, 877, 878, 881, 906, 907, 910], "1": [0, 6, 12, 15, 16, 21, 33, 34, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 69, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 118, 121, 125, 128, 129, 130, 131, 133, 134, 135, 136, 148, 159, 161, 162, 163, 164, 170, 174, 175, 188, 190, 191, 192, 193, 195, 199, 200, 202, 210, 212, 213, 219, 222, 223, 224, 225, 226, 233, 250, 254, 257, 259, 264, 269, 270, 272, 274, 278, 282, 284, 287, 288, 295, 300, 301, 302, 303, 304, 306, 309, 310, 313, 314, 315, 316, 317, 318, 319, 322, 331, 334, 339, 342, 343, 346, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 397, 398, 399, 404, 407, 408, 411, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 468, 469, 475, 478, 479, 482, 487, 490, 495, 498, 499, 502, 503, 506, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 546, 547, 555, 556, 563, 566, 567, 568, 569, 570, 571, 585, 591, 594, 595, 600, 601, 603, 606, 607, 608, 610, 612, 614, 615, 616, 617, 618, 650, 651, 652, 653, 654, 655, 656, 657, 658, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 682, 684, 693, 695, 699, 701, 709, 711, 712, 714, 718, 720, 721, 723, 724, 725, 726, 727, 729, 733, 734, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 796, 797, 800, 813, 825, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 877, 878, 881, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "type": [0, 6, 12, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 129, 131, 133, 134, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 249, 250, 266, 267, 268, 269, 270, 272, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 546, 547, 549, 550, 551, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 577, 578, 580, 581, 582, 584, 585, 586, 587, 591, 594, 595, 596, 597, 600, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 624, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 647, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948], "ndarrai": [0, 6, 124, 126, 127, 128, 129, 133, 174, 176, 178, 196, 198, 538, 607], "Or": [0, 6, 134], "jaxlib": [0, 6, 18, 126, 127, 129, 133], "xla_extens": [0, 6, 126, 127, 129, 133], "devicearrai": [0, 6, 133], "try_import_ivy_jax": 0, "warn": [0, 7, 8, 9, 10, 11], "fals": [0, 7, 8, 9, 10, 11, 23, 26, 27, 28, 29, 30, 39, 40, 47, 48, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 125, 128, 134, 135, 136, 165, 167, 169, 213, 219, 222, 224, 225, 226, 231, 250, 269, 270, 281, 285, 286, 289, 294, 297, 299, 300, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 342, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 459, 460, 462, 463, 464, 466, 470, 472, 474, 475, 477, 479, 481, 482, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 538, 539, 540, 541, 542, 543, 546, 547, 551, 552, 556, 559, 563, 565, 567, 569, 571, 575, 582, 584, 585, 587, 588, 600, 610, 612, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 663, 664, 665, 666, 685, 687, 689, 690, 691, 712, 714, 727, 728, 729, 734, 736, 738, 739, 741, 743, 744, 746, 748, 749, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 788, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 826, 832, 834, 836, 837, 842, 843, 845, 848, 849, 850, 852, 853, 854, 855, 856, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 926, 927, 949, 950, 953, 954, 955, 956, 957, 958], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 122], "unset": [0, 12, 122, 131, 133], "adjust": [0, 12, 873, 894, 897, 902, 905], "dict": [0, 12, 26, 27, 28, 29, 30, 69, 72, 73, 74, 75, 76, 125, 134, 135, 250, 259, 260, 269, 272, 275, 276, 277, 278, 538, 544, 560, 561, 562, 813, 815, 816, 819, 822, 825, 826], "previous": [0, 12, 18, 21, 120, 121, 131, 538, 549], "otherwis": [0, 12, 23, 26, 27, 28, 29, 30, 69, 72, 73, 124, 126, 127, 129, 131, 133, 174, 175, 213, 219, 222, 225, 228, 229, 230, 250, 269, 300, 412, 415, 416, 419, 420, 423, 538, 548, 609, 612, 628, 630, 645, 663, 664, 666, 670, 672, 724, 726, 727, 729, 809, 810, 811, 813, 826, 848, 849, 850, 852, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "implement": [0, 12, 20, 23, 69, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 213, 219, 241, 250, 295, 300, 301, 304, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 331, 334, 367, 370, 371, 374, 388, 391, 392, 395, 432, 435, 436, 439, 440, 443, 444, 447, 470, 473, 487, 490, 491, 494, 503, 506, 507, 510, 524, 528, 529, 533, 663, 676, 678, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 915], "wa": [0, 12, 15, 72, 73, 118, 131, 133, 538, 609, 813, 826, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "last": [0, 12, 16, 19, 69, 72, 73, 118, 122, 148, 159, 164, 250, 269, 650, 660, 663, 667, 669, 673, 675, 689, 691, 721, 723, 724, 726, 733, 739, 742, 744, 747, 749, 767, 770, 783, 786, 788, 793, 796, 862, 863, 866, 868, 871, 906, 907, 910, 911, 914, 937, 947], "henc": [0, 12, 853, 854, 855, 859, 861], "here": [0, 12, 18, 19, 20, 116, 118, 125, 129, 131, 132, 133, 134, 135, 136, 147, 148], "tensor": [0, 12, 14, 72, 73, 116, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 174, 191, 192, 213, 231, 300, 339, 342, 468, 469, 538, 591, 594, 595, 650, 658, 660, 663, 718, 720, 749, 763, 766, 779, 782, 788, 836, 837, 848, 851, 915, 937, 945, 947], "howev": [0, 12, 15, 18, 20, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 148], "befor": [0, 12, 18, 19, 20, 72, 73, 117, 120, 124, 126, 127, 128, 131, 134, 148, 250, 294, 300, 534, 537, 650, 661, 662, 809, 810, 811, 813, 825, 853, 854, 855, 859, 861, 873, 890, 893, 898, 901], "becom": [0, 12, 14, 16, 19, 118, 125, 131, 136, 148, 749, 750, 753], "swap": [0, 12, 749, 797, 800], "python": [0, 12, 13, 14, 15, 18, 19, 21, 131, 133, 134, 148, 174, 175, 250, 289, 299, 300, 491, 494, 915, 921], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 71, 72, 73, 75, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 115, 119, 121, 122, 123, 124, 127, 129, 130, 133, 136, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 919, 920, 921, 924, 925, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963], "op": [0, 12, 116, 131, 148], "eagertensor": [0, 12], "def": [1, 20, 116, 118, 121, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 214, 215, 216, 251, 258, 261, 613, 915, 929, 932, 935], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 71, 72, 73, 75, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 919, 920, 921, 924, 925, 927, 929, 930, 931, 932, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963], "backend": [4, 5, 6, 12, 14, 19, 20, 26, 28, 30, 72, 73, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 136, 213, 234, 235, 237, 249, 250, 285, 287, 297, 538, 579, 582, 583, 589, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 648, 915, 921, 926, 927, 953, 954, 955, 956, 957, 958], "ml": [13, 15, 16, 17, 130, 131, 132, 134, 135, 136, 147, 915, 921], "explos": [13, 15, 915], "A": [13, 14, 15, 16, 21, 72, 73, 74, 75, 76, 115, 120, 121, 125, 126, 127, 131, 134, 148, 174, 183, 196, 198, 250, 259, 260, 294, 300, 483, 486, 538, 574, 606, 663, 699, 701, 708, 709, 711, 712, 714, 749, 788, 793, 796, 813, 814, 816, 818, 820, 821, 822, 823, 824, 827, 828, 829, 830, 873, 874, 877, 906, 907, 910, 911, 914, 915, 959, 960], "huge": [13, 15, 134, 915], "number": [13, 14, 18, 72, 73, 74, 75, 76, 118, 125, 127, 128, 131, 134, 136, 171, 172, 173, 174, 175, 176, 178, 183, 191, 192, 193, 195, 196, 198, 213, 220, 232, 233, 236, 238, 239, 241, 250, 286, 287, 288, 300, 314, 317, 331, 334, 363, 366, 396, 399, 400, 403, 468, 469, 470, 473, 487, 490, 491, 494, 495, 498, 499, 502, 534, 537, 538, 539, 542, 565, 574, 575, 590, 608, 611, 650, 661, 663, 673, 675, 676, 678, 693, 695, 708, 712, 714, 724, 726, 749, 750, 753, 759, 762, 771, 774, 775, 778, 783, 786, 788, 793, 796, 801, 804, 805, 808, 809, 810, 811, 812, 836, 837, 846, 848, 851, 853, 854, 855, 859, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948], "tool": [13, 16, 19, 132, 136, 147, 148, 915], "have": [13, 14, 15, 16, 18, 19, 20, 21, 72, 73, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 147, 148, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 233, 250, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 560, 561, 562, 564, 567, 570, 578, 591, 594, 595, 612, 628, 630, 645, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915], "explod": [13, 14, 915], "onto": [13, 14, 250, 279, 280, 813, 819, 825, 915], "scene": [13, 14, 115, 130, 132, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 915], "b": [13, 16, 17, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 115, 118, 121, 122, 125, 130, 131, 132, 134, 135, 136, 146, 213, 222, 224, 225, 226, 250, 272, 300, 301, 303, 304, 305, 314, 316, 317, 318, 319, 322, 339, 342, 359, 362, 363, 365, 366, 371, 374, 396, 398, 399, 408, 411, 428, 431, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 527, 528, 529, 530, 532, 533, 538, 539, 541, 542, 543, 546, 547, 555, 556, 563, 566, 567, 569, 570, 571, 608, 612, 614, 616, 617, 618, 650, 653, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 699, 701, 709, 711, 718, 720, 730, 732, 733, 734, 737, 749, 750, 752, 753, 754, 763, 766, 767, 770, 775, 778, 783, 785, 786, 787, 793, 796, 797, 800, 831, 832, 835, 836, 838, 840, 841, 842, 844, 848, 850, 851, 852, 853, 855, 856, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 906, 907, 910, 915, 921], "why": [13, 15, 19, 125, 128, 129, 133, 915], "unifi": [13, 15, 72, 73, 124, 131, 148, 250, 279, 280, 281, 282, 294, 915], "should": [13, 15, 18, 19, 20, 21, 23, 69, 72, 73, 74, 75, 76, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 171, 172, 174, 193, 195, 203, 205, 206, 208, 213, 221, 250, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 388, 391, 392, 395, 396, 399, 412, 415, 416, 419, 420, 423, 424, 427, 432, 435, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 549, 582, 591, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 682, 684, 685, 688, 693, 695, 699, 701, 702, 704, 705, 707, 709, 711, 712, 714, 718, 720, 721, 723, 724, 726, 727, 729, 749, 779, 782, 836, 847, 848, 849, 850, 853, 854, 855, 859, 861, 873, 874, 877, 878, 881, 882, 885, 890, 893, 894, 897, 898, 901, 902, 905, 915], "them": [13, 14, 15, 16, 120, 122, 124, 125, 131, 133, 134, 135, 148, 915], "c": [13, 15, 16, 17, 101, 102, 115, 118, 121, 125, 130, 131, 132, 134, 148, 300, 479, 482, 538, 546, 547, 555, 608, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 656, 749, 793, 796, 838, 840, 848, 851, 873, 874, 877, 894, 897, 902, 905, 915, 921], "standard": [13, 23, 115, 116, 117, 119, 120, 124, 128, 129, 148, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 233, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 428, 431, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 836, 841, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 894, 897, 902, 905, 906, 907, 910, 915, 921, 951, 952], "re": [13, 14, 15, 17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 136, 148, 250, 294, 538, 560, 663, 718, 720, 749, 783, 786, 848, 852, 915], "collabor": [13, 14, 15, 915], "consortium": [13, 15, 915, 921], "data": [13, 15, 72, 73, 74, 75, 76, 115, 116, 117, 121, 123, 125, 127, 128, 129, 133, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 217, 218, 219, 221, 222, 225, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 249, 250, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 546, 547, 584, 585, 587, 604, 612, 628, 630, 648, 650, 659, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 709, 711, 712, 714, 718, 720, 721, 723, 724, 726, 727, 729, 749, 763, 766, 767, 770, 771, 774, 779, 782, 783, 786, 789, 792, 793, 796, 836, 842, 844, 847, 848, 849, 850, 851, 862, 863, 866, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 921, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948], "api": [13, 14, 18, 19, 115, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 130, 132, 134, 148, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 428, 431, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910, 915, 921], "open": [14, 15, 16, 17, 18, 21, 117, 147, 174, 175, 836, 838, 839, 842, 844, 915], "project": [14, 15, 16, 18, 19, 21, 116, 122, 133, 135, 147, 148, 836, 837, 841], "grown": 14, "consider": [14, 118, 129], "recent": [14, 15, 18, 19], "year": [14, 16, 148, 915], "especi": [14, 18], "deep": [14, 17, 19, 20, 72, 73, 130, 134, 915], "learn": [14, 15, 18, 20, 115, 121, 130, 136, 147, 300, 404, 407, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 809, 810, 811, 812, 915, 953, 954, 955, 956, 957, 958], "can": [14, 15, 16, 17, 18, 19, 23, 69, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 174, 176, 178, 196, 198, 213, 222, 225, 250, 292, 293, 294, 663, 682, 684, 749, 779, 782, 836, 838, 839, 915, 921], "seen": [14, 15, 118, 133, 134], "rapidli": 14, "increas": [14, 250, 274, 278, 282, 749, 759, 762, 805, 808, 813, 825], "github": [14, 19, 20, 117, 120], "repo": [14, 15, 16, 18, 19, 119, 131, 133, 134, 135, 136, 147, 915, 921], "contain": [14, 18, 19, 20, 21, 26, 29, 30, 39, 40, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 126, 128, 129, 130, 131, 132, 135, 136, 148, 159, 162, 163, 165, 168, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 250, 271, 272, 275, 284, 288, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 540, 542, 544, 547, 550, 551, 553, 555, 556, 563, 566, 567, 570, 577, 586, 606, 607, 608, 612, 614, 617, 619, 624, 628, 632, 636, 640, 650, 653, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 759, 763, 766, 767, 770, 771, 774, 775, 778, 779, 783, 786, 788, 789, 793, 797, 800, 801, 805, 809, 810, 811, 812, 813, 826, 831, 832, 835, 836, 837, 838, 841, 842, 844, 848, 849, 850, 851, 852, 853, 854, 855, 859, 861, 862, 863, 866, 868, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 953, 957, 959, 960], "term": [14, 19, 125, 650, 660, 937, 947], "time": [14, 15, 16, 18, 19, 20, 120, 121, 125, 126, 129, 131, 134, 136, 148, 612, 619, 621, 632, 634, 650, 660, 749, 801, 804, 809, 810, 811, 812, 848, 849, 850, 853, 854, 855, 859, 937, 948, 949, 950], "These": [14, 15, 16, 19, 117, 118, 120, 121, 125, 126, 128, 129, 131, 132, 134, 135, 136, 148, 663, 676, 678, 915, 921], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 69, 72, 73, 74, 75, 76, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 148, 149, 157, 174, 175, 250, 259, 260, 284, 288, 290, 294, 300, 367, 370, 456, 459, 460, 463, 495, 498, 503, 506, 524, 528, 538, 539, 542, 546, 547, 548, 572, 578, 579, 583, 590, 592, 604, 650, 659, 663, 667, 669, 685, 688, 689, 691, 693, 695, 702, 704, 712, 714, 715, 717, 724, 726, 749, 750, 753, 767, 770, 783, 786, 813, 815, 819, 825, 836, 841, 842, 844, 848, 849, 850, 851, 853, 854, 915, 959, 960], "written": [14, 18, 116, 117, 124, 128, 129, 131, 133, 136, 148], "mani": [14, 15, 16, 18, 19, 20, 72, 73, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 148, 749, 788], "differ": [14, 15, 16, 18, 19, 72, 73, 74, 75, 76, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 148, 213, 233, 250, 271, 272, 275, 276, 300, 314, 317, 470, 473, 519, 523, 650, 659, 749, 793, 796, 873, 890, 893, 898, 901, 915], "while": [14, 15, 18, 19, 72, 73, 74, 75, 76, 118, 122, 128, 135, 136, 148, 300, 456, 459, 460, 463, 853, 854, 873, 882, 885], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 148, 165, 166, 167, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 226, 250, 274, 278, 282, 289, 294, 299, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 339, 342, 355, 358, 359, 362, 363, 364, 365, 366, 371, 374, 392, 395, 396, 397, 398, 399, 428, 431, 456, 459, 460, 463, 479, 482, 491, 494, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 543, 565, 566, 567, 568, 569, 571, 582, 593, 598, 612, 614, 615, 616, 618, 619, 621, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 648, 650, 653, 659, 662, 663, 670, 672, 673, 675, 689, 691, 708, 749, 750, 751, 752, 754, 763, 766, 767, 770, 779, 782, 783, 784, 785, 786, 787, 793, 796, 813, 819, 825, 826, 831, 832, 835, 838, 840, 848, 849, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 866, 873, 878, 881, 882, 885, 894, 897, 902, 905, 906, 907, 910, 915, 921, 949, 950, 953, 954, 955, 956, 957, 958], "wonder": [14, 16, 133], "thing": [14, 15, 16, 18, 19, 20, 122, 133, 134], "research": [14, 147], "develop": [14, 15, 16, 17, 18, 19, 20, 147, 148, 915], "also": [14, 15, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 165, 166, 167, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 226, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 339, 342, 359, 362, 363, 364, 365, 366, 371, 374, 396, 397, 398, 399, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 543, 566, 567, 568, 569, 571, 582, 612, 614, 615, 616, 618, 619, 621, 650, 653, 659, 662, 663, 670, 672, 673, 675, 749, 750, 751, 752, 754, 763, 766, 767, 770, 783, 784, 785, 786, 787, 809, 810, 811, 812, 813, 814, 815, 823, 824, 825, 831, 832, 835, 838, 840, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910, 937, 947], "consid": [14, 15, 72, 73, 116, 121, 132, 133, 134, 300, 456, 459, 460, 463, 853, 854, 855, 859, 861], "speed": 14, "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 72, 73, 74, 75, 76, 87, 88, 115, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 148, 159, 161, 162, 163, 164, 165, 168, 170, 250, 272, 295, 300, 359, 362, 515, 518, 612, 614, 616, 617, 618, 650, 656, 657, 853, 854, 855, 859, 862, 863, 866, 873, 874, 877, 915, 921], "significantli": 14, "hinder": [14, 129], "librari": [14, 15, 16, 131, 136, 146, 148, 250, 295, 300, 392, 395, 456, 459, 460, 463, 663, 676, 678, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 915], "outdat": 14, "month": 14, "rigor": 14, "maintain": [14, 19, 862, 863, 866, 868, 871], "against": [14, 72, 73, 120, 148, 213, 220, 663, 685, 688, 689, 691, 693, 695, 702, 704, 848, 849], "newest": 14, "version": [14, 15, 16, 18, 117, 131, 133, 663, 676, 678, 915], "For": [14, 15, 16, 18, 19, 20, 21, 69, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 174, 175, 193, 195, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 612, 628, 630, 648, 663, 712, 714, 721, 723, 749, 750, 753, 793, 796, 853, 854, 855, 859, 861, 873, 878, 881, 886, 889, 898, 901, 926, 927], "softwar": [14, 15, 18, 19], "pipelin": [14, 124, 136], "where": [14, 15, 16, 17, 18, 19, 20, 21, 72, 73, 74, 75, 117, 121, 122, 124, 125, 126, 127, 128, 131, 134, 135, 136, 148, 174, 187, 188, 190, 193, 195, 300, 331, 334, 388, 391, 440, 443, 470, 473, 487, 490, 538, 578, 582, 591, 663, 676, 678, 693, 695, 702, 704, 705, 707, 712, 714, 715, 717, 721, 723, 724, 726, 749, 750, 753, 759, 762, 763, 766, 771, 774, 793, 796, 805, 808, 813, 814, 824, 836, 837, 848, 851, 873, 894, 897, 902, 905, 906, 907, 910, 911, 914, 915], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 136], "signific": [14, 15, 148], "bottleneck": 14, "As": [14, 19, 67, 68, 113, 114, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 148, 853, 854, 855, 859, 861], "new": [14, 15, 16, 17, 18, 19, 20, 21, 23, 69, 72, 73, 115, 116, 117, 118, 120, 123, 125, 126, 128, 130, 133, 136, 147, 174, 179, 184, 186, 187, 188, 190, 199, 200, 202, 209, 210, 212, 213, 245, 300, 335, 338, 440, 443, 483, 486, 538, 560, 561, 562, 565, 566, 567, 570, 594, 595, 596, 597, 602, 603, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 749, 763, 766, 779, 782, 793, 796, 813, 818, 829, 830, 831, 832, 835, 915, 926, 927, 937, 947, 951, 952, 953, 954, 955, 956, 957, 958], "futur": [14, 16, 18, 19, 133, 148, 663, 676, 678], "avail": [14, 18, 19, 72, 73, 117, 127, 148, 250, 269, 285, 286, 287, 297, 538, 561], "specif": [14, 20, 72, 73, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 147, 148, 213, 241, 250, 292, 295, 300, 456, 459, 460, 463, 538, 560, 561, 562, 589, 663, 676, 678, 718, 720, 749, 793, 796, 809, 810, 811, 812, 836, 837, 873, 878, 881, 882, 885, 886, 889, 915, 918, 920, 921, 949, 950], "quickli": [14, 16, 18, 19, 134, 135], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 115, 120, 122, 125, 128, 130, 148, 937, 948, 949, 950], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 67, 68, 113, 114, 118, 125, 130, 133, 134, 135, 136, 148, 915], "desir": [14, 72, 73, 213, 219, 222, 225, 250, 295, 538, 578, 836, 842, 844, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948], "provid": [14, 18, 19, 23, 69, 72, 73, 117, 118, 121, 124, 125, 126, 127, 128, 129, 131, 135, 147, 148, 171, 172, 174, 193, 195, 213, 228, 229, 230, 237, 241, 249, 250, 269, 538, 559, 591, 595, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 663, 724, 726, 749, 767, 770, 793, 796, 848, 849, 873, 894, 897, 902, 905, 906, 907, 910, 911, 914, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 953, 954, 955, 956, 957, 958], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 65, 66, 67, 68, 69, 72, 73, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 149, 157, 171, 172, 174, 175, 203, 205, 206, 208, 250, 259, 284, 290, 538, 539, 542, 546, 547, 572, 592, 607, 650, 660, 663, 709, 711, 718, 720, 727, 729, 749, 767, 770, 783, 786, 809, 810, 811, 812, 813, 814, 815, 824, 825, 826, 836, 837, 842, 844, 906, 915, 918, 920], "modern": [14, 15], "simpl": [14, 18, 19, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 131, 133, 135, 136, 148, 538, 563], "scalabl": [14, 131], "manner": [14, 26, 29, 30, 72, 73, 116, 117, 127, 134, 147, 148, 813, 825], "must": [14, 16, 18, 19, 20, 72, 73, 74, 75, 76, 116, 117, 118, 121, 124, 125, 126, 127, 129, 131, 135, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 250, 279, 280, 281, 282, 294, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 560, 561, 562, 564, 567, 570, 578, 591, 594, 595, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 953, 957], "determin": [14, 72, 73, 117, 121, 125, 126, 127, 213, 222, 225, 227, 232, 237, 238, 239, 249, 250, 285, 286, 287, 297, 300, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 367, 370, 371, 374, 375, 378, 388, 391, 392, 395, 412, 415, 416, 419, 420, 423, 432, 435, 436, 439, 444, 447, 448, 451, 464, 467, 470, 473, 487, 490, 491, 494, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 538, 539, 542, 546, 547, 577, 579, 583, 584, 585, 586, 587, 604, 611, 612, 628, 630, 650, 661, 663, 664, 666, 667, 669, 670, 672, 673, 675, 682, 684, 685, 688, 693, 695, 699, 701, 702, 704, 708, 709, 711, 721, 723, 724, 726, 727, 729, 809, 810, 811, 812, 853, 854, 855, 859, 861, 906, 907, 910, 911, 914], "exactli": [14, 16, 118, 125, 127, 915, 921], "common": [14, 20, 72, 73, 118, 121, 123, 125, 127, 148], "ground": [14, 120], "li": 14, "between": [14, 72, 73, 74, 75, 76, 118, 120, 121, 124, 125, 129, 130, 132, 133, 134, 136, 147, 174, 175, 213, 233, 300, 331, 334, 487, 490, 733, 734, 737, 739, 742, 744, 747, 749, 763, 766, 793, 796, 813, 819, 836, 838, 839, 853, 854, 855, 859, 861, 915, 953, 955], "find": [14, 18, 19, 72, 73, 131, 134, 853, 854, 855, 859, 861, 915], "exist": [14, 15, 18, 20, 21, 72, 73, 74, 75, 117, 118, 119, 120, 121, 122, 123, 128, 131, 148, 538, 559, 953, 957], "essenti": [14, 15, 20, 118, 121, 127], "order": [14, 18, 19, 21, 69, 72, 73, 74, 75, 76, 117, 118, 122, 124, 125, 126, 127, 129, 133, 134, 136, 148, 300, 331, 334, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 663, 676, 678, 689, 691, 712, 714, 715, 717, 727, 729, 749, 767, 770, 809, 810, 811, 848, 851, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 959, 960], "design": [14, 15, 115, 128, 131, 133, 148], "univers": 14, "abstract": [14, 23, 69, 125, 135, 148, 250, 265, 953, 957], "In": [14, 16, 18, 19, 69, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 250, 289, 295, 296, 299, 300, 314, 317, 470, 473, 491, 494, 538, 544, 582, 749, 779, 782, 836, 842, 844, 915], "search": [14, 18, 26, 29, 30, 58, 72, 73, 104, 116, 118, 120, 849, 850, 851, 852], "languag": [14, 16, 131], "first": [14, 15, 18, 19, 21, 69, 118, 121, 124, 125, 129, 131, 133, 134, 136, 171, 172, 174, 191, 192, 213, 240, 245, 250, 269, 281, 300, 314, 317, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 380, 383, 400, 403, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 519, 523, 538, 546, 612, 623, 663, 667, 669, 673, 675, 676, 678, 685, 688, 699, 701, 705, 707, 712, 714, 718, 720, 724, 726, 749, 755, 758, 783, 786, 793, 796, 797, 800, 809, 810, 811, 812, 813, 814, 823, 824, 836, 847, 848, 849, 850, 853, 854, 855, 859, 937, 948, 949, 950, 953, 957], "see": [14, 17, 18, 19, 20, 23, 69, 119, 121, 125, 127, 129, 133, 134, 147, 148, 174, 175, 184, 186, 191, 192, 213, 221, 241, 300, 314, 317, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 392, 395, 424, 427, 448, 451, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 519, 523, 663, 693, 695, 702, 704, 709, 711, 724, 726, 727, 729, 848, 850, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915], "clear": [14, 15, 16, 19, 20, 69, 118, 120, 126, 127, 131, 133, 250, 268], "front": [14, 130, 131, 134, 915, 921], "runner": 14, "look": [14, 18, 19, 21, 116, 118, 121, 122, 125, 126, 127, 129, 131, 133, 135, 136, 915], "littl": [14, 133], "deeper": [14, 19, 115, 130, 250, 274, 278, 282, 813, 824, 825], "follow": [14, 15, 18, 19, 20, 21, 69, 72, 73, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 148, 213, 236, 250, 294, 300, 491, 494, 538, 580, 581, 582, 602, 603, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 661, 662, 663, 705, 707, 727, 729, 813, 819, 825, 853, 854, 855, 859, 861, 915, 937, 947, 953, 957], "same": [14, 16, 18, 19, 21, 26, 27, 28, 72, 73, 116, 118, 120, 121, 124, 125, 127, 128, 129, 131, 133, 135, 136, 174, 175, 180, 182, 188, 190, 193, 195, 200, 202, 203, 205, 206, 208, 210, 212, 213, 219, 220, 221, 250, 259, 260, 294, 300, 301, 304, 314, 317, 343, 346, 363, 366, 396, 399, 470, 473, 491, 494, 495, 498, 499, 502, 534, 537, 538, 564, 566, 567, 570, 591, 594, 595, 612, 628, 630, 645, 650, 651, 652, 653, 654, 655, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 696, 698, 702, 704, 705, 707, 709, 711, 712, 714, 721, 723, 724, 726, 749, 755, 758, 767, 770, 771, 774, 783, 786, 789, 792, 793, 796, 809, 810, 811, 813, 826, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 898, 901, 902, 905, 915, 937, 938, 939, 940, 941, 942, 943, 944], "core": [14, 18, 20, 127, 131, 136, 250, 286, 915], "principl": 14, "oper": [14, 18, 20, 72, 73, 74, 75, 117, 118, 121, 124, 125, 127, 128, 134, 135, 174, 191, 192, 213, 241, 300, 314, 317, 355, 358, 359, 362, 408, 411, 475, 478, 479, 482, 491, 494, 515, 518, 538, 548, 560, 561, 562, 604, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 651, 652, 653, 654, 655, 656, 657, 659], "expos": [14, 131, 135, 538, 554], "almost": [14, 19, 125, 132, 134], "ident": [14, 16, 72, 73, 121, 123, 125, 133, 134, 148, 250, 284, 813, 826, 915], "uniqu": [14, 121, 125, 148, 250, 259, 260, 809, 810, 811, 812, 813, 819, 853, 854, 855, 859, 860, 861], "syntax": [14, 15], "There": [14, 18, 19, 118, 121, 124, 125, 126, 131, 134, 148], "onli": [14, 17, 18, 19, 72, 73, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 146, 148, 250, 290, 300, 456, 459, 460, 463, 663, 685, 688, 705, 707, 749, 767, 770, 813, 814, 815, 823, 824, 848, 849, 850, 873, 882, 885, 915, 953, 954, 955, 956, 957, 958], "so": [14, 15, 18, 19, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 116, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148, 149, 157, 165, 166, 167, 169, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 539, 540, 541, 543, 567, 568, 569, 571, 614, 615, 616, 618, 750, 751, 752, 754, 783, 784, 785, 787, 813, 814, 824, 838, 840, 855, 856, 857, 858, 915], "wai": [14, 15, 18, 23, 122, 128, 133, 134, 135, 136, 148], "manipul": [14, 52, 98, 116, 136, 147, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808], "unsurprisingli": [14, 118], "fundament": [14, 125, 131], "consist": [14, 72, 73, 124, 128, 250, 282, 663, 676, 678, 873, 874, 877, 949, 950], "each": [14, 15, 16, 19, 20, 72, 73, 74, 75, 76, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 147, 148, 159, 162, 163, 165, 168, 174, 193, 195, 213, 220, 250, 259, 260, 271, 272, 273, 274, 275, 276, 277, 281, 294, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 542, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 651, 652, 653, 654, 655, 656, 657, 658, 663, 664, 666, 667, 669, 670, 672, 676, 678, 685, 688, 693, 695, 696, 698, 702, 704, 709, 711, 712, 714, 749, 759, 762, 775, 778, 783, 786, 788, 793, 796, 801, 804, 805, 808, 813, 819, 826, 836, 837, 848, 851, 853, 854, 855, 859, 873, 874, 877, 915, 921, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "veri": [14, 15, 18, 19, 116, 118, 120, 121, 125, 127, 128, 129, 132, 134, 135, 136, 148, 915], "similar": [14, 116, 125, 126, 127, 134, 148, 300, 491, 494, 650, 661, 937, 948], "convent": [14, 147, 663, 685, 688, 873, 874, 877], "those": [14, 18, 19, 20, 72, 73, 125, 131, 136, 174, 175, 612, 648, 663, 705, 707, 712, 714, 749, 750, 753], "introduc": [14, 125, 134, 749, 783, 786, 853, 854], "2006": 14, "layer": [14, 46, 92, 116, 117, 131, 132, 135, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 831, 832, 835, 915, 928, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "therefor": [14, 19, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 135, 148, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 363, 366, 396, 399, 479, 482, 511, 514, 515, 518, 524, 528, 538, 566, 650, 653, 662, 663, 673, 675, 749, 783, 786, 831, 832, 835, 853, 855, 859, 873, 878, 881, 906, 907, 910], "present": [14, 19, 69, 72, 73, 119, 125, 126, 127, 128, 129, 131], "itself": [14, 18, 19, 125, 128, 129, 135, 147, 148, 538, 544, 813, 825], "cut": 14, "cloth": 14, "adher": [14, 15, 117, 119, 131, 136], "semant": [14, 131, 136, 300, 491, 494], "round": [14, 15, 16, 18, 19, 20, 21, 37, 38, 83, 84, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 300, 314, 317, 363, 366, 396, 399, 400, 403, 470, 473, 511, 514, 534, 537, 915], "up": [14, 15, 16, 17, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 147, 148], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147], "paint": [14, 131], "pictur": [14, 131], "how": [14, 16, 17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 147, 148, 915, 921, 937, 948, 949, 950], "pleas": [14, 15, 16, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 915], "check": [14, 15, 16, 18, 19, 26, 27, 28, 29, 30, 72, 73, 125, 130, 131, 133, 134, 135, 136, 147, 213, 227, 234, 235, 237, 249, 250, 289, 299, 538, 548, 563, 577, 584, 585, 586, 587, 604, 611, 612, 628, 630, 663, 676, 678, 813, 814, 823, 824, 825, 915], "out": [14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 31, 32, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 83, 84, 85, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 147, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 250, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 550, 551, 552, 553, 555, 556, 557, 560, 561, 562, 564, 566, 567, 568, 569, 570, 571, 578, 591, 594, 595, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 850, 852, 853, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 937, 945], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 915], "faq": [14, 15, 16, 131, 133, 134, 135, 136, 147], "reach": [14, 15, 16, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 250, 274, 278, 282, 813, 825], "discord": [14, 15, 16, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 915], "you": [14, 15, 16, 17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 915, 921], "question": [14, 15, 16, 18, 19, 118, 120, 131, 133, 134, 135, 136, 147, 148, 915], "With": [15, 16, 18, 39, 40, 41, 42, 59, 60, 72, 73, 74, 75, 83, 84, 85, 86, 97, 98, 101, 102, 105, 106, 118, 120, 131, 159, 161, 162, 163, 164, 165, 168, 170, 174, 193, 195, 213, 222, 225, 250, 272, 288, 300, 301, 304, 305, 314, 317, 318, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 528, 529, 530, 533, 538, 539, 540, 541, 542, 543, 547, 555, 556, 563, 566, 567, 570, 571, 601, 606, 607, 608, 612, 614, 615, 617, 650, 653, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 689, 691, 718, 720, 733, 734, 737, 744, 747, 749, 750, 753, 754, 763, 766, 767, 770, 775, 778, 783, 786, 787, 788, 797, 800, 831, 832, 835, 836, 837, 838, 840, 841, 842, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 906, 907, 910], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 72, 73, 118, 120, 123, 124, 125, 126, 127, 128, 129, 131, 134, 147, 148, 174, 175, 538, 593, 598, 853, 860, 915], "would": [15, 18, 19, 21, 115, 117, 118, 120, 122, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 148, 159, 164, 250, 295, 915], "entir": [15, 16, 19, 72, 73, 118, 119, 120, 124, 125, 128, 133, 134, 135, 136, 148, 250, 294, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 937, 946], "forgiven": 15, "rais": [15, 19, 69, 72, 73, 128, 131, 133, 213, 221, 300, 388, 391, 487, 490, 538, 548, 573, 582, 596, 603, 609, 663, 685, 688, 692, 724, 726, 749, 789, 792, 793, 796, 848, 851, 873, 878, 881, 886, 889, 906, 907, 910, 911, 914, 949, 950, 953, 957], "an": [15, 16, 18, 19, 20, 21, 23, 26, 29, 30, 67, 68, 69, 72, 73, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 159, 162, 163, 165, 168, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 222, 225, 233, 238, 239, 241, 250, 272, 276, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 549, 550, 551, 553, 555, 564, 565, 566, 578, 582, 584, 585, 586, 587, 607, 608, 609, 612, 628, 630, 645, 647, 648, 650, 653, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 692, 693, 695, 696, 698, 702, 704, 705, 707, 708, 709, 711, 712, 714, 721, 723, 724, 726, 727, 729, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 813, 819, 831, 832, 835, 836, 838, 839, 847, 848, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 926, 927, 949, 950, 953, 954, 955, 957], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 121, 126, 127, 128, 129, 131, 133, 136, 148, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 915, 953, 954, 955, 956, 957, 958], "other": [15, 18, 19, 72, 73, 74, 75, 116, 117, 118, 120, 121, 124, 125, 128, 131, 133, 135, 136, 146, 147, 148, 171, 172, 174, 175, 300, 392, 395, 538, 539, 542, 544, 612, 623, 836, 842, 844, 853, 860, 873, 894, 897, 902, 905, 915], "strong": [15, 148], "industri": 15, "back": [15, 124, 130, 131, 133, 148, 915, 921, 949, 950, 953, 957], "momentum": 15, "won": [15, 16, 19, 136], "ad": [15, 18, 19, 20, 113, 114, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 131, 135, 148, 538, 602, 603, 663, 676, 678, 749, 763, 766, 959, 960], "just": [15, 16, 18, 19, 117, 118, 120, 121, 128, 131, 133, 134, 148, 873, 874, 877, 937, 946], "make": [15, 16, 18, 19, 20, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 134, 136, 250], "problem": [15, 19, 124, 133], "even": [15, 16, 18, 19, 117, 121, 126, 127, 129, 133, 134, 135, 136, 148, 300, 487, 490, 495, 498], "wors": 15, "rather": [15, 72, 73, 116, 117, 120, 125, 136, 148, 174, 175, 250, 294, 538, 584, 585, 587, 612, 628, 630], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 121, 125], "feasibl": 15, "space": [15, 174, 175, 191, 192, 538, 565], "case": [15, 18, 19, 20, 26, 29, 30, 69, 72, 73, 74, 75, 76, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 148, 174, 193, 195, 250, 289, 296, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 359, 362, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 538, 582, 594, 595, 663, 689, 691, 749, 779, 782, 813, 816, 822, 873, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905, 937, 948, 949, 950, 953, 957], "unlik": [15, 118, 125, 250], "charger": 15, "charact": 15, "encod": [15, 134, 538, 565], "instant": [15, 915], "messag": [15, 19, 131, 133, 962, 963], "much": [15, 19, 116, 124, 125, 128, 131, 133, 134], "doe": [15, 19, 21, 23, 69, 72, 73, 115, 116, 117, 118, 120, 121, 122, 126, 128, 129, 131, 133, 134, 148, 300, 359, 362, 538, 582, 749, 788], "mandat": [15, 120, 128], "adopt": [15, 19, 124], "continu": [15, 16, 119, 120, 148], "own": [15, 16, 18, 117, 131, 148], "signatur": [15, 23, 69, 116, 117, 118, 125, 126, 127, 128, 129, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 663, 673, 675, 749, 763, 766, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881], "replac": [15, 19, 21, 72, 73, 118, 120, 123, 125, 126, 127, 131, 133, 136, 148, 538, 594, 595, 749, 750, 753, 836, 837], "your": [15, 16, 17, 18, 20, 21, 116, 117, 134, 135, 148, 915], "10": [15, 18, 21, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 125, 131, 133, 134, 174, 187, 192, 250, 300, 339, 342, 343, 346, 371, 374, 408, 411, 428, 431, 436, 439, 511, 514, 538, 556, 566, 593, 598, 612, 632, 633, 634, 635, 650, 656, 663, 670, 672, 673, 675, 699, 701, 718, 720, 749, 767, 770, 775, 778, 788, 831, 832, 835, 836, 837, 838, 839, 840, 848, 851, 853, 854, 873, 874, 877, 878, 881, 953, 955], "100": [15, 16, 101, 102, 134, 135, 136, 148, 300, 511, 514, 838, 840, 915], "despit": [15, 125, 127], "distinct": [15, 117, 125, 128, 130, 853, 854, 855, 859, 861, 915], "still": [15, 72, 73, 117, 120, 126, 133, 135, 148, 915], "believ": [15, 19], "share": [15, 72, 73, 118, 120, 121, 122, 125, 131, 213, 245], "bring": [15, 131, 132], "benefit": [15, 16, 18, 19, 124, 125, 128, 133, 134, 148], "unrel": [15, 19], "what": [15, 16, 19, 115, 117, 118, 123, 125, 129, 130, 131, 133, 134, 135, 136, 147, 148, 915], "again": [15, 16, 19, 116, 118, 125, 128, 134, 136, 148], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 134], "most": [15, 18, 19, 72, 73, 116, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 148, 663, 676, 678], "technolog": 15, "sector": [15, 300, 310, 313, 323, 326, 335, 338], "full": [15, 16, 19, 74, 75, 117, 126, 129, 131, 148, 174, 213, 233, 300, 408, 411, 428, 431, 650, 656, 663, 705, 707, 709, 711, 712, 714, 831, 832, 835], "success": 15, "reason": [15, 19, 116, 118, 121, 124, 125, 126, 128, 131, 133, 300, 491, 494], "build": [15, 17, 18, 121, 130, 132, 135, 136, 148, 853, 854, 855, 859, 861, 915, 937, 948, 949, 950], "custom": [15, 23, 69, 135], "comput": [15, 16, 18, 72, 73, 121, 125, 131, 134, 148, 250, 294, 300, 314, 317, 339, 342, 351, 354, 359, 362, 380, 383, 384, 387, 404, 407, 408, 411, 424, 427, 428, 431, 452, 455, 456, 459, 460, 463, 464, 467, 470, 473, 475, 478, 479, 482, 538, 550, 551, 553, 556, 557, 612, 614, 617, 619, 621, 623, 624, 626, 632, 634, 636, 638, 640, 642, 645, 647, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 663, 664, 666, 667, 669, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 705, 707, 708, 709, 711, 712, 714, 724, 726, 727, 729, 733, 734, 737, 739, 742, 744, 747, 813, 819, 853, 854, 855, 859, 861, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905], "thank": [15, 134], "interoper": 15, "compon": [15, 131], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 69, 72, 73, 74, 75, 76, 122, 126, 127, 250, 650, 660, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 953, 957], "pcie": 15, "interfac": [15, 136, 148], "motherboard": 15, "raid": 15, "storag": [15, 134], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 26, 27, 28, 29, 30, 72, 73, 121, 135, 136, 174, 176, 178, 196, 198, 203, 205, 206, 208, 538, 544, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 693, 695, 696, 698, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723, 813, 815, 825], "factor": [15, 250, 259, 292, 293, 294, 612, 614, 617, 619, 621, 632, 634, 636, 638, 650, 651, 652, 653, 654, 655, 656, 657, 663, 664, 666, 937, 938, 939, 940, 941, 942, 943, 944, 953, 954, 955, 956], "sata": 15, "connect": [15, 18, 135, 136, 937, 947, 948], "host": [15, 148], "bu": 15, "adapt": [15, 612, 636, 638, 953, 956], "devic": [15, 19, 31, 32, 36, 72, 73, 82, 101, 102, 115, 116, 121, 123, 126, 133, 134, 148, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 538, 566, 567, 570, 591, 594, 595, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 926, 927, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "html": [15, 21, 117, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 663, 673, 675, 749, 763, 766, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881], "enabl": [15, 18, 19, 72, 73, 74, 75, 76, 120, 121, 124, 125, 128, 130, 131, 132, 134, 136, 148], "anyon": [15, 17, 148], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 72, 73, 125, 813, 814, 823, 824], "commun": [15, 17, 19, 20, 148, 915, 921], "network": [15, 121, 125, 131, 135, 147, 650, 659, 915, 923, 937, 949, 950], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 117, 118, 120, 125, 126, 128, 131, 134, 147, 148, 538, 588, 606, 873, 878, 881, 886, 889], "send": 15, "gmail": 15, "outlook": 15, "pop": [15, 69], "email": 15, "ieee": [15, 173, 213, 233, 300, 314, 317, 392, 395, 470, 473, 491, 494, 511, 514], "754": [15, 173, 213, 233, 300, 314, 317, 392, 395, 470, 473, 491, 494, 511, 514], "allow": [15, 131, 148, 174, 191, 192, 538, 588, 949, 950], "calcul": [15, 72, 73, 74, 75, 76, 117, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 367, 370, 371, 374, 375, 378, 388, 391, 392, 395, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 470, 473, 487, 490, 503, 506, 507, 510, 511, 514, 519, 523, 524, 528, 529, 533, 733, 734, 737, 739, 742, 744, 747, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905], "live": [15, 16], "depend": [15, 18, 19, 117, 123, 125, 126, 131, 148, 213, 219, 300, 301, 304, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 331, 334, 367, 370, 371, 374, 388, 391, 392, 395, 432, 435, 436, 439, 440, 443, 444, 447, 487, 490, 503, 506, 507, 510, 524, 528, 529, 533, 663, 676, 678, 705, 707, 709, 711, 712, 714, 848, 852, 862, 863, 866, 868, 871], "did": [15, 20, 136], "aris": [15, 148], "until": [15, 19, 148, 915], "substanti": [15, 19, 120, 124], "innov": 15, "growth": 15, "usag": [15, 131, 250, 294], "relev": [15, 18, 20, 118, 125, 126, 134, 953, 954, 955, 956, 957, 958], "area": [15, 128, 146, 300, 310, 313, 323, 326, 335, 338, 915], "necess": 15, "parti": [15, 148], "could": [15, 16, 18, 19, 118, 120, 125, 126, 128, 131, 133, 134, 135, 853, 854, 855, 859, 861], "easili": [15, 19, 134, 135, 136, 148, 915], "engag": [15, 17, 18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "regard": [15, 125, 250], "effect": [15, 117, 124, 125, 129, 148, 174, 193, 195, 612, 640, 642, 873, 894, 897, 902, 905], "2015": 15, "sinc": [15, 18, 19, 148], "alongsid": 15, "machin": [15, 18, 121, 147, 213, 233, 236, 300, 404, 407, 663, 693, 695, 702, 704], "given": [15, 16, 18, 19, 20, 21, 69, 72, 73, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 135, 136, 147, 174, 175, 179, 191, 192, 250, 283, 289, 291, 292, 293, 294, 296, 299, 538, 556, 557, 567, 570, 594, 595, 610, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 651, 652, 653, 654, 655, 656, 657, 663, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 763, 766, 767, 770, 775, 778, 783, 786, 788, 801, 804, 813, 820, 821, 836, 838, 839, 841, 842, 844, 847, 862, 868, 871, 926, 927], "frame": [15, 147], "less": [15, 19, 37, 38, 72, 73, 83, 84, 118, 125, 129, 130, 131, 300, 306, 309, 310, 313, 319, 322, 331, 334, 363, 366, 432, 435, 436, 439, 444, 447, 487, 490, 491, 494, 499, 502, 511, 514, 663, 693, 695, 702, 704, 727, 729, 836, 842, 844, 873, 902, 905], "matur": [15, 148], "state": [15, 117, 129, 130, 131, 132, 134, 147, 300, 470, 473, 650, 660, 915, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "than": [15, 19, 72, 73, 116, 118, 120, 125, 128, 131, 134, 135, 136, 148, 174, 175, 213, 233, 250, 294, 300, 306, 309, 310, 313, 319, 322, 331, 334, 347, 350, 355, 358, 363, 366, 396, 399, 400, 403, 432, 435, 436, 439, 444, 447, 468, 487, 490, 491, 494, 499, 502, 511, 514, 534, 537, 538, 584, 585, 587, 612, 628, 630, 663, 667, 669, 685, 688, 693, 695, 702, 704, 727, 729, 749, 750, 753, 767, 770, 789, 792, 836, 842, 844, 853, 854, 855, 859, 861, 873, 890, 893, 894, 897, 898, 901, 902, 905], "preced": [15, 135], "mention": [15, 18, 19, 118, 121, 128, 129], "aros": 15, "70": [15, 663, 699, 701, 873, 874, 877], "80": [15, 663, 699, 701, 873, 874, 877], "90": [15, 101, 102, 300, 359, 362, 495, 498, 663, 699, 701, 838, 840, 873, 874, 877], "effort": [15, 17, 148], "stage": [15, 17, 19, 21, 115, 915], "complet": [15, 19, 20, 72, 73, 124, 125, 133, 134, 663, 705, 707], "natur": [15, 118, 124, 125, 147, 300, 388, 391, 432, 435, 440, 443, 663, 708], "like": [15, 18, 19, 21, 69, 115, 116, 117, 118, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 147, 148, 612, 628, 630, 836, 842, 844, 915], "certainli": 15, "mission": [15, 915], "creat": [15, 17, 18, 19, 21, 23, 69, 72, 73, 126, 127, 128, 131, 132, 135, 146, 147, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 196, 198, 199, 200, 202, 209, 210, 212, 250, 259, 260, 538, 566, 567, 570, 591, 594, 595, 606, 612, 647, 836, 837, 838, 839, 842, 844, 915, 921, 926, 927, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "At": [15, 20], "process": [15, 16, 17, 18, 19, 21, 121, 125, 131, 136, 250, 259, 260, 289, 299], "ourselv": 15, "lead": [15, 16, 72, 73, 74, 75, 76, 148, 663, 705, 707, 712, 714], "quansight": 15, "compani": 15, "made": [15, 19, 20, 125, 128, 131, 133], "organ": [15, 116, 121, 124, 125], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": [15, 853, 854, 855, 859, 861], "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 131, 136], "sympi": 15, "rai": [15, 300, 331, 334], "modin": 15, "spyder": 15, "includ": [15, 19, 20, 72, 73, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 147, 148, 174, 175, 176, 178, 196, 198, 538, 577, 611, 663, 727, 729, 813, 814, 836, 842, 844, 848, 850, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 918, 920, 937, 947, 948, 951, 952], "member": [15, 19], "googl": [15, 915], "octoml": 15, "einop": [15, 72, 73, 538, 560, 561, 562], "further": [15, 16, 19, 21, 118, 124, 130, 134, 135, 915], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 69, 101, 102, 115, 125, 134, 538, 547, 555, 650, 651, 652, 653, 654, 655, 656, 657, 663, 673, 675, 699, 701, 838, 840, 915, 921], "shaw": 15, "co": [15, 37, 38, 83, 84, 131, 147, 300, 538, 565, 915], "intel": 15, "togeth": [15, 72, 73, 124, 125, 135, 136, 148, 959, 960], "major": [15, 126, 127, 148, 848, 851], "involv": [15, 17, 21, 115, 126, 136, 213, 241, 300, 314, 317, 470, 473, 915, 921], "anoth": [15, 18, 19, 72, 73, 121, 125, 126, 133, 136, 174, 184, 186, 213, 220, 222, 225], "promis": 15, "sign": [15, 18, 37, 38, 83, 84, 132, 136, 174, 175, 300, 301, 304, 314, 317, 331, 334, 355, 358, 470, 473, 491, 494, 663, 708, 853, 854, 855, 859, 861, 873, 890, 893, 898, 901], "pursuit": 15, "unif": [15, 17, 133, 915, 921], "clearli": [15, 20, 118], "lot": [15, 16, 123, 133, 148], "thought": [15, 18, 19, 129], "care": [15, 19, 136], "attent": [15, 19, 124, 125, 650, 661, 662, 937, 948], "gone": [15, 130], "simplifi": [15, 131, 132, 133, 135], "compat": [15, 129, 148, 213, 221, 300, 314, 317, 331, 334, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 380, 383, 400, 403, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 519, 523, 663, 693, 695, 702, 704, 709, 711, 718, 720, 724, 726, 727, 729, 749, 779, 782, 848, 850, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915], "excit": [15, 17, 115, 915], "complianc": 15, "hope": [15, 148], "due": [15, 18, 125, 128, 300, 470, 473], "suit": [15, 18, 115, 119, 120, 134, 147], "some": [15, 16, 18, 19, 20, 72, 73, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 147, 148, 300, 392, 395, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 648, 650, 658, 915, 937, 945], "motiv": [15, 133], "great": [15, 16, 120, 131, 133], "convinc": 15, "celebr": 15, "encourag": [15, 147, 148, 915, 921], "foundat": 15, "point": [16, 19, 117, 118, 124, 128, 129, 131, 133, 134, 147, 173, 174, 175, 179, 183, 187, 199, 209, 213, 219, 233, 238, 241, 300, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 388, 391, 392, 395, 396, 399, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 663, 664, 666, 670, 672, 676, 678, 679, 681, 682, 684, 693, 695, 702, 704, 705, 707, 709, 711, 712, 714, 727, 729, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905], "mai": [16, 18, 19, 23, 69, 125, 133, 135, 174, 175, 184, 186, 250, 295, 300, 380, 383, 408, 411, 428, 431, 456, 459, 460, 463, 538, 559, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889], "ask": [16, 131, 133, 148, 915], "perfectli": 16, "happi": [16, 18, 148], "abund": 16, "better": [16, 115, 130, 133, 134, 135], "ll": [16, 17, 19, 118, 125, 128, 134], "give": [16, 18, 19, 115, 117, 118, 122, 129, 133, 749, 779, 782], "two": [16, 69, 74, 75, 117, 118, 120, 124, 125, 130, 134, 136, 174, 175, 183, 193, 195, 203, 205, 206, 208, 213, 240, 245, 300, 355, 358, 495, 498, 538, 546, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 721, 723, 724, 726, 749, 797, 800, 853, 854, 855, 859, 860, 861, 915], "streamlin": 16, "workflow": [16, 19, 134, 146, 915], "save": [16, 72, 73, 148, 538, 599, 949, 950], "week": [16, 19, 20, 915], "let": [16, 117, 118, 125, 126, 127, 131, 133, 134, 135, 136, 873, 882, 885, 894, 897, 898, 901, 902, 905, 915], "sai": [16, 18, 123, 133], "deepmind": 16, "releas": [16, 18, 20, 915], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 128, 134, 873, 894, 897, 902, 905], "perceiverio": 16, "happen": [16, 18, 19, 134], "slew": 16, "rush": 16, "f": [16, 21, 69, 115, 125, 131, 134, 136, 300, 404, 407, 538, 579, 583], "g": [16, 115, 125, 148, 213, 218, 241, 250, 266, 836, 841, 842, 844, 853, 854, 855, 859, 861, 873, 878, 881, 886, 889, 890, 893, 898, 901], "inevit": 16, "deviat": [16, 831, 832, 835, 836, 841, 873, 894, 897, 951, 952], "origin": [16, 72, 73, 74, 75, 76, 122, 123, 126, 131, 133, 300, 331, 334, 663, 689, 691, 749, 779, 782, 783, 786], "often": [16, 121, 148], "erron": 16, "train": [16, 121, 125, 127, 134, 135, 136, 146, 147, 148, 612, 614, 617, 619, 621, 632, 634, 915], "poor": 16, "converg": 16, "perform": [16, 72, 73, 116, 118, 120, 121, 122, 124, 125, 127, 128, 129, 131, 134, 148, 159, 164, 174, 191, 192, 250, 538, 556, 560, 561, 562, 580, 581, 582, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 658, 660, 663, 712, 714, 809, 810, 811, 812, 813, 820, 821, 906, 907, 910, 911, 914], "issu": [16, 17, 20, 131, 133, 135, 148], "etc": [16, 18, 19, 20, 67, 68, 72, 73, 113, 114, 116, 118, 120, 124, 125, 126, 129, 131, 133, 134, 148, 174, 191, 192, 538, 566, 567, 570, 591, 594, 595, 836, 837, 838, 839, 842, 844, 853, 854, 855, 859, 861, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "publish": [16, 148], "manag": [16, 17, 128, 148, 250], "get": [16, 17, 18, 20, 69, 72, 73, 115, 121, 126, 127, 128, 131, 132, 133, 134, 135, 213, 231, 232, 233, 236, 250, 259, 260, 269, 270, 283, 284, 289, 293, 296, 299, 538, 545, 572, 573, 574, 593, 915, 921, 937, 946], "work": [16, 18, 19, 20, 115, 120, 125, 126, 127, 130, 131, 132, 133, 135, 136, 915, 921], "repositori": [16, 18, 19, 21, 119], "pull": [16, 17, 18, 21, 116, 148], "request": [16, 17, 116, 250, 286], "confus": [16, 128], "do": [16, 18, 19, 20, 72, 73, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 300, 491, 494, 538, 582, 612, 628, 630, 648, 813, 814, 823, 824, 825], "don": [16, 18, 19, 20, 67, 68, 113, 114, 126, 135, 148], "expect": [16, 148, 538, 545, 915], "codebas": [16, 17, 115, 116, 128, 130, 250, 292, 293, 915], "total": [16, 17, 19, 72, 73, 74, 75, 76, 118, 120, 127, 134, 135, 148, 250, 296, 848, 851, 873, 894, 897, 902, 905], "hour": 16, "spent": 16, "spin": 16, "off": [16, 130, 663, 673, 675, 721, 723], "test": [16, 18, 20, 115, 118, 148, 213, 238, 239, 300, 412, 415, 416, 419, 420, 423, 906, 907, 910, 911, 914], "error": [16, 18, 72, 73, 120, 124, 127, 129, 133, 148, 159, 160, 250, 300, 384, 387, 873, 878, 881, 886, 889, 949, 950, 953, 957], "iter": [16, 26, 27, 28, 29, 30, 67, 68, 69, 72, 73, 74, 75, 76, 113, 114, 125, 131, 134, 171, 172, 250, 272, 273, 275, 276, 277, 278, 281, 294, 538, 539, 542, 595, 600, 749, 759, 762, 775, 778, 788, 801, 804, 805, 808, 813, 814, 815, 819, 823, 824, 825], "address": [16, 19, 20, 124, 131], "sake": 16, "singl": [16, 19, 72, 73, 116, 118, 120, 121, 123, 125, 128, 129, 131, 134, 135, 136, 148, 250, 259, 260, 279, 280, 281, 282, 538, 608, 611, 836, 841, 842, 844, 853, 854], "multipl": [16, 19, 72, 73, 83, 84, 85, 86, 97, 98, 101, 102, 118, 121, 125, 148, 300, 314, 318, 470, 473, 538, 539, 541, 542, 543, 567, 571, 588, 663, 682, 684, 749, 750, 753, 754, 783, 786, 787, 788, 831, 832, 835, 838, 840, 848, 849, 850, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 937, 947], "line": [16, 18, 118, 124, 132, 133, 134, 135, 146, 915, 921], "convert": [16, 26, 27, 28, 29, 30, 72, 73, 124, 131, 148, 149, 157, 174, 176, 178, 196, 198, 213, 217, 218, 250, 266, 267, 268, 269, 289, 296, 299, 538, 601, 607, 608, 663, 730, 732, 813, 815, 825, 826, 927], "directli": [16, 19, 116, 117, 121, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 147, 148, 813, 825], "graph": [16, 121, 125, 132, 148, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 853, 854, 855, 859, 861, 949, 950], "guarante": [16, 124, 148, 853, 854], "turn": [16, 118, 125], "4": [16, 21, 37, 38, 51, 52, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 122, 125, 131, 133, 134, 135, 136, 159, 161, 162, 164, 174, 188, 190, 193, 195, 200, 202, 210, 212, 213, 222, 224, 225, 226, 250, 272, 288, 300, 301, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 331, 334, 339, 342, 359, 362, 363, 365, 366, 371, 374, 396, 398, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 527, 528, 529, 530, 532, 533, 538, 547, 556, 565, 566, 567, 569, 570, 571, 601, 606, 612, 614, 616, 617, 618, 650, 653, 654, 655, 657, 660, 662, 663, 667, 669, 670, 672, 673, 675, 682, 684, 693, 695, 699, 701, 718, 720, 721, 723, 733, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 785, 786, 787, 788, 797, 800, 831, 832, 835, 836, 837, 838, 840, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 906, 907, 910, 915, 953, 954, 955, 956, 958], "step": [16, 18, 19, 21, 41, 42, 72, 73, 87, 88, 118, 122, 124, 125, 126, 127, 131, 134, 135, 136, 147, 174, 175, 191, 192, 250, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 632, 633, 634, 635, 636, 638, 640, 642, 809, 810, 811, 812, 915, 953, 954, 955, 956, 957, 958], "take": [16, 17, 18, 19, 117, 118, 120, 125, 126, 127, 131, 133, 135, 136, 148, 300, 359, 362, 915, 921], "few": [16, 19, 20, 121, 125, 126, 127, 128, 132, 133, 134, 135, 146, 915, 921], "second": [16, 18, 118, 128, 133, 213, 240, 245, 250, 281, 300, 314, 317, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 380, 383, 400, 403, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 519, 523, 538, 546, 593, 598, 612, 614, 617, 619, 621, 632, 634, 663, 667, 669, 673, 675, 676, 678, 685, 688, 699, 701, 705, 707, 712, 714, 718, 720, 724, 726, 749, 793, 796, 797, 800, 809, 811, 853, 854, 855, 859, 953, 954, 955], "automat": [16, 18, 19, 121, 125, 129, 130, 131, 132, 135, 136, 915], "convers": [16, 27, 28, 29, 30, 72, 73, 130, 132, 136, 147, 148, 915, 921], "everyon": [16, 17, 19, 148], "regardless": [16, 17, 72, 73, 133, 136, 171, 172], "wouldn": 16, "nice": [16, 120], "write": [16, 19, 20, 21, 72, 73, 115, 116, 117, 118, 120, 121, 122, 128, 131, 133, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 250, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 557, 560, 561, 562, 564, 566, 567, 570, 578, 591, 594, 595, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 852, 853, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "onc": [16, 18, 19, 125, 126, 127, 131, 134, 148, 250, 294, 663, 682, 684, 712, 714, 836, 837], "know": [16, 19, 853, 854, 855, 859, 861], "among": [16, 72, 73, 120], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 121, 131], "understand": [16, 18, 19, 20, 21, 115, 117, 118, 119, 129, 130], "pattern": [16, 72, 73, 117, 126, 538, 560, 561, 562], "hasn": 16, "chang": [16, 18, 19, 20, 21, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 117, 119, 120, 125, 131, 135, 148, 165, 166, 167, 169, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 250, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 539, 540, 541, 543, 567, 568, 569, 571, 614, 615, 616, 618, 663, 667, 669, 749, 750, 751, 752, 754, 779, 782, 783, 784, 785, 787, 813, 815, 825, 838, 840, 855, 856, 857, 858, 915, 921], "now": [16, 18, 21, 72, 73, 116, 123, 125, 126, 129, 133, 134, 136, 147, 148, 937, 948, 949, 950], "spend": 16, "torchvis": 16, "probabl": [16, 650, 658, 836, 837, 937, 945], "sonnet": 16, "about": [16, 18, 19, 119, 130, 131, 135, 136, 148, 213, 233, 236], "next": [16, 18, 19, 20, 21, 117, 118, 122, 123, 133, 134, 213, 233, 915, 949, 950, 953, 954, 955, 956, 957, 958], "everyth": [16, 19, 20, 132, 148], "zero": [16, 72, 73, 74, 75, 118, 124, 125, 126, 127, 129, 131, 134, 135, 159, 161, 162, 174, 179, 183, 193, 195, 203, 205, 206, 208, 210, 212, 213, 219, 300, 314, 317, 319, 322, 347, 350, 371, 374, 392, 395, 396, 399, 456, 459, 460, 463, 468, 469, 470, 473, 475, 478, 479, 482, 487, 490, 491, 494, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 556, 591, 594, 595, 612, 614, 617, 619, 621, 632, 634, 636, 638, 650, 658, 663, 670, 672, 685, 688, 693, 695, 702, 704, 724, 726, 727, 729, 749, 763, 766, 767, 770, 775, 778, 783, 786, 805, 808, 831, 832, 835, 836, 838, 839, 848, 849, 850, 851, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 953, 954, 955, 956], "need": [16, 18, 19, 20, 21, 116, 117, 118, 119, 121, 124, 125, 128, 131, 133, 134, 147, 148, 538, 550, 551, 553, 749, 750, 753, 763, 766], "said": 16, "high": [16, 20, 72, 73, 101, 102, 134, 836, 838, 839, 840, 842, 843, 844, 845], "level": [16, 17, 20, 121, 130, 131, 134, 135, 136, 148], "optim": [16, 128, 132, 134, 136, 147, 250, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 809, 810, 811, 812, 915, 954, 955, 956, 958], "trainer": [16, 146, 148, 915], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 136], "flax": [16, 136, 148], "trax": [16, 136], "objax": [16, 136], "idea": [16, 147], "fulli": [16, 124, 125, 129, 131, 132, 133, 134, 135, 136, 148, 937, 947, 948], "offer": [16, 135], "strongli": [17, 18, 915, 921], "welcom": [17, 18, 19, 915, 921], "absolut": [17, 72, 73, 300, 301, 304, 663, 708], "skill": 17, "whether": [17, 18, 26, 27, 28, 29, 30, 72, 73, 74, 75, 76, 113, 114, 126, 128, 129, 159, 160, 171, 172, 213, 219, 231, 237, 238, 239, 249, 250, 269, 270, 281, 285, 286, 289, 290, 294, 297, 299, 300, 420, 423, 538, 539, 542, 546, 547, 556, 559, 563, 565, 575, 577, 579, 582, 583, 584, 585, 586, 587, 588, 600, 604, 610, 611, 612, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 645, 650, 658, 663, 676, 678, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 826, 836, 837, 906, 907, 910, 911, 914, 926, 927, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 72, 73, 115, 117, 118, 126, 130, 131, 133, 134, 135, 147, 148, 174, 175, 191, 192, 250, 265], "aspect": [17, 134, 915], "guid": [17, 18, 19, 120, 915], "through": [17, 19, 20, 115, 118, 121, 122, 125, 130, 131, 133, 134, 135, 136, 147, 300, 331, 334], "journei": [17, 915, 921], "inclusvi": 17, "big": [17, 148], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 130, 915], "split": [17, 19, 72, 73, 130, 131, 148, 250, 259, 275, 276, 277, 278, 292, 293, 294, 538, 588, 749, 915], "section": [17, 19, 20, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 853, 854, 855, 859, 861], "below": [17, 18, 20, 21, 115, 116, 118, 121, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 147, 174, 203, 205, 206, 208, 300, 339, 342, 359, 362, 371, 374, 495, 498, 529, 533, 663, 670, 672, 673, 675, 721, 723, 749, 763, 766, 767, 770, 853, 854, 862, 863, 866, 915], "best": [17, 18, 19, 20, 21, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 538, 588], "go": [17, 18, 19, 20, 115, 116, 118, 125, 130, 134, 148, 813, 824], "finish": [17, 18, 115, 915], "dive": [17, 19, 20, 130, 133, 134, 148, 915], "right": [17, 18, 19, 72, 73, 115, 118, 134, 300, 347, 350, 355, 358, 663, 712, 714], "environ": [17, 19, 21, 147], "basic": [17, 20, 21], "fork": [17, 18, 538, 589], "doc": [17, 20, 117, 129, 131, 134, 135, 915], "document": [17, 19, 132, 134, 136], "local": [17, 18, 21, 121], "task": [17, 19, 147, 809, 810, 811, 812, 915], "help": [17, 18, 23, 69, 118, 122, 124, 125, 133, 134, 135, 146, 538, 544, 873, 898, 901, 915], "video": [17, 19, 117, 118, 129], "realli": [18, 125, 148], "contribut": [18, 19, 20, 131, 921], "toward": [18, 131, 749, 783, 786, 915, 921], "page": [18, 19, 132, 136, 146, 915, 921], "explain": [18, 19, 20, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 915, 921], "main": [18, 21, 123, 125, 174, 183, 203, 205, 206, 208, 663, 673, 675, 721, 723], "prefer": [18, 125], "mode": [18, 47, 48, 72, 73, 118, 125, 148, 171, 172, 250, 279, 280, 281, 282, 294, 300, 314, 317, 470, 473, 663, 705, 706, 707], "git": [18, 19], "recurs": [18, 21, 26, 27, 28, 29, 30, 72, 73, 121, 125, 135, 148, 813, 814, 815, 823, 824, 825], "submodul": [18, 19, 20, 21, 119, 120, 121, 127, 130, 131, 135, 915, 951, 952, 959, 960], "com": 18, "unifyai": [18, 21], "http": [18, 117, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 612, 614, 617, 619, 621, 663, 673, 675, 749, 763, 766, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881], "gh": 18, "your_fold": 18, "id": [18, 124, 125, 250, 269, 949, 950], "cours": [18, 19, 118, 134, 148], "whatev": [18, 148], "integr": [18, 120, 213, 219], "familiar": [18, 20], "decid": [18, 72, 73, 813, 824], "sure": [18, 20, 119], "elig": 18, "free": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 147, 915], "student": 18, "licenc": 18, "peopl": [18, 19, 115], "seem": [18, 135, 148], "miss": [18, 118, 120, 124, 125, 953, 957], "add": [18, 19, 20, 37, 38, 67, 68, 72, 73, 74, 75, 83, 84, 85, 86, 113, 114, 115, 116, 117, 121, 122, 124, 125, 129, 131, 133, 148, 300, 301, 304, 318, 539, 543, 831, 832, 835, 915, 921, 951, 952], "explicit": [18, 21, 125, 126, 128, 131, 148], "remind": 18, "channel": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 538, 565, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947], "pace": 18, "updat": [18, 19, 20, 21, 69, 72, 73, 115, 118, 119, 123, 124, 125, 126, 129, 131, 133, 134, 136, 148, 250, 259, 538, 582, 594, 595, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 660, 809, 810, 811, 813, 820, 821, 829, 830, 926, 927, 953, 954, 955, 956, 957, 958], "suggest": [18, 19, 116], "latest": [18, 20, 21, 117, 148, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 663, 673, 675, 749, 763, 766, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 937, 946], "packag": [18, 21, 148], "ensur": [18, 19, 120, 124, 126, 129, 538, 582], "align": [18, 72, 73, 131, 133, 915, 921], "accord": [18, 21, 72, 73, 121, 126, 213, 222, 225, 233, 300, 314, 317, 355, 358, 470, 473, 538, 566, 594, 595, 663, 724, 726, 749, 759, 762, 805, 808, 873, 894, 897, 902, 905], "stabl": [18, 61, 62, 107, 108, 131, 148, 538, 573, 574, 596, 597, 602, 603, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "pypi": [18, 20, 148], "mayb": [18, 26, 29, 30, 131, 133], "person": [18, 19], "experi": [18, 132, 134, 148], "avoid": [18, 19, 120, 122, 123, 125, 133, 250, 300, 392, 395], "pip": [18, 147, 915], "instal": [18, 21, 147, 915], "abil": [18, 132, 148], "certain": [18, 72, 73, 148, 174, 175, 191, 192], "perhap": [18, 133, 134, 135, 148], "keep": [18, 19, 72, 73, 119, 125, 132, 134, 136, 538, 610], "track": [18, 19, 250, 813, 825, 949, 950], "termin": [18, 19, 21, 72, 73, 74, 75, 76, 125, 131, 134], "run": [18, 21, 119, 120, 122, 129, 131, 132, 133, 134, 135, 136, 147, 148, 250, 259, 612, 614, 617, 619, 621, 632, 634, 809, 810, 811, 812, 937, 948, 949, 950], "command": [18, 21, 915], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 23, 69, 117, 120, 131, 133, 134, 136, 171, 172, 538, 544, 663, 676, 678, 705, 707, 712, 714, 853, 854, 855, 859], "3": [18, 21, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 118, 122, 125, 131, 133, 134, 135, 136, 159, 161, 162, 163, 164, 173, 174, 188, 190, 193, 195, 200, 202, 209, 210, 212, 213, 222, 223, 224, 225, 226, 250, 269, 272, 288, 295, 300, 301, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 339, 342, 355, 358, 359, 362, 363, 365, 366, 371, 374, 388, 391, 396, 397, 398, 399, 404, 407, 408, 411, 424, 427, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 527, 528, 529, 530, 532, 533, 538, 539, 540, 541, 546, 547, 556, 563, 566, 567, 568, 569, 570, 571, 600, 601, 606, 608, 612, 614, 615, 616, 617, 618, 650, 651, 652, 653, 655, 656, 657, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 682, 684, 693, 695, 699, 701, 712, 714, 718, 720, 721, 723, 730, 732, 733, 734, 737, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 785, 786, 787, 788, 789, 792, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 898, 901, 906, 907, 910, 915], "8": [18, 21, 51, 52, 74, 75, 83, 84, 101, 102, 118, 125, 130, 134, 159, 163, 250, 272, 300, 314, 317, 318, 339, 342, 363, 366, 371, 374, 408, 411, 428, 431, 468, 469, 495, 498, 511, 514, 515, 518, 529, 533, 538, 547, 566, 612, 614, 617, 650, 657, 663, 667, 669, 670, 672, 673, 675, 699, 701, 718, 720, 733, 734, 737, 749, 750, 751, 753, 767, 770, 775, 778, 788, 836, 837, 838, 839, 840, 848, 852, 853, 854, 873, 874, 877, 915, 937, 948], "activ": [18, 19, 21, 25, 67, 68, 71, 113, 114, 116, 135, 160, 161, 162, 163, 164, 165, 168, 170, 915, 924, 925], "setup": 18, "click": [18, 19, 117, 915], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 136, 250, 295, 300, 456, 459, 460, 463, 848, 852, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889], "left": [18, 19, 72, 73, 118, 126, 300, 347, 350, 663, 676, 678, 689, 691, 712, 714, 848, 849, 915], "panel": 18, "select": [18, 19, 120, 131, 133, 136, 148], "drop": [18, 148], "down": [18, 133], "path": [18, 21], "manual": [18, 19, 120, 135, 813, 814, 823, 824], "builtin": [18, 21, 133, 135], "requir": [18, 21, 116, 117, 118, 120, 123, 124, 126, 127, 129, 133, 148, 171, 172, 300, 511, 514, 663, 676, 678, 749, 793, 796, 926, 927], "cmd": [18, 21], "directori": [18, 19, 21, 538, 599], "folder": [18, 19, 21, 116, 119, 120, 121], "file": [18, 19, 21, 72, 73, 116, 117, 121, 122, 124, 125, 131, 134, 538, 599, 949, 950], "abov": [18, 19, 21, 117, 118, 121, 122, 124, 125, 128, 129, 133, 134, 135, 136, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 470, 473, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 650, 653, 662, 663, 670, 672, 673, 675, 676, 678, 721, 723, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 836, 838, 839, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 890, 893, 894, 897, 898, 901, 906, 907, 910], "m": [18, 19, 21, 115, 131, 174, 193, 195, 203, 205, 206, 208, 538, 547, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723, 836, 841, 842, 844], "python3": [18, 21], "script": [18, 19, 21, 118, 131, 148], "bat": [18, 19, 21], "OR": [18, 19, 21, 300, 351, 354, 460, 463, 906, 911, 914], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 69, 72, 73, 74, 75, 76, 117, 124, 125, 250, 284], "os": 18, "note": [18, 19, 116, 117, 118, 125, 300, 491, 494, 663, 676, 678, 712, 714, 749, 793, 796, 853, 855, 859, 873, 882, 885], "tick": [18, 19], "abl": [18, 19, 72, 73, 121, 126, 128, 133, 136], "To": [18, 118, 121, 125, 134, 135, 136, 915], "ivy_test": [18, 19], "test_array_api": [18, 19, 119, 120], "cd": [18, 19, 21], "r": [18, 72, 73, 538, 547, 610, 663, 705, 707, 730, 732], "txt": 18, "visual": [18, 148], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 130, 300, 392, 395], "conflict": [18, 19, 134], "addit": [18, 19, 72, 73, 116, 117, 120, 125, 126, 133, 134, 136, 250, 295, 300, 314, 317, 538, 560, 561, 562, 831, 832, 835, 937, 947], "yet": [18, 20, 125], "particular": [18, 19, 116, 128, 300, 301, 304], "system": [18, 148, 663, 709, 711], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": 18, "link": 18, "imag": [18, 21, 44, 90, 116, 131, 132, 134, 136, 147, 650, 651, 652, 653, 654, 656, 657, 915], "profession": 18, "execut": [18, 21, 125, 128, 131, 133, 136, 148, 538, 609], "deploy": 18, "top": [18, 19, 120, 134, 135, 915], "press": [18, 134, 915], "ok": 18, "correctli": [18, 72, 73, 120, 125, 126, 129, 135, 148, 663, 689, 691, 848, 849], "caus": [18, 19, 118, 120, 125, 128, 148], "earlier": [18, 19], "might": [18, 19, 116, 120, 123, 131, 133, 134, 538, 559], "necessari": [18, 118, 122, 125, 128], "virtualis": 18, "detail": [18, 19, 20, 116, 119, 120, 121, 122, 123, 125, 129, 134, 135, 174, 184, 186, 853, 854, 855, 859, 861], "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 72, 73, 85, 86, 174, 193, 195, 538, 550, 551, 552, 553, 650, 658, 663, 689, 691, 727, 729, 937, 945], "keyr": 18, "fssl": 18, "download": [18, 120], "gpg": 18, "dearmor": 18, "o": [18, 131, 538, 547], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 136, 148], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 26, 27, 28, 29, 30, 31, 32, 67, 68, 69, 72, 73, 87, 88, 105, 106, 113, 114, 116, 118, 126, 127, 129, 131, 134, 135, 136, 148, 174, 175, 176, 178, 179, 193, 194, 195, 196, 198, 199, 209, 213, 220, 250, 259, 260, 269, 271, 272, 275, 276, 279, 280, 294, 538, 547, 601, 606, 610, 614, 616, 618, 650, 651, 652, 653, 654, 655, 656, 657, 663, 718, 720, 749, 755, 758, 767, 770, 788, 793, 796, 813, 814, 815, 819, 824, 825, 831, 832, 835, 848, 851, 853, 855, 856, 858, 859, 906, 907, 910, 911, 914, 915, 937, 938, 939, 940, 941, 942, 943, 944], "dev": [18, 72, 73, 74, 76, 121, 127, 131, 133, 135, 250, 259, 284], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 125, 148], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 147, 250], "post": [18, 136, 831, 832, 835, 915, 921], "It": [18, 19, 21, 23, 69, 115, 116, 117, 118, 122, 124, 125, 128, 131, 133, 134, 135, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 250, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 560, 561, 562, 564, 567, 570, 578, 591, 594, 595, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 852, 853, 861, 862, 863, 866, 868, 871, 906, 907, 910, 911, 914], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 117, 118, 120, 121, 125, 128, 129, 131, 133, 134, 148], "featur": [18, 116, 129, 134, 915], "vm": 18, "azur": 18, "cloud": [18, 147], "mean": [18, 19, 63, 64, 72, 73, 109, 110, 113, 114, 115, 118, 121, 125, 126, 127, 128, 131, 133, 134, 135, 136, 147, 148, 250, 279, 280, 281, 282, 294, 538, 561, 809, 810, 811, 812, 813, 819, 836, 841, 853, 854, 873, 915, 928], "configur": [18, 19, 21, 72, 73, 126, 250, 293, 813, 826], "defin": [18, 20, 116, 117, 126, 129, 133, 135, 148, 300, 470, 473, 491, 494, 538, 591, 663, 667, 669, 676, 678, 709, 711, 836, 838, 839, 873, 878, 881, 882, 885, 886, 889], "dockerfil": [18, 21], "longer": [18, 126, 128], "worri": 18, "platform": 18, "agnost": [18, 124, 129, 131, 133, 136, 148, 915], "usual": 18, "studio": 18, "favourit": 18, "extens": [18, 19, 117, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 428, 431, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910], "theme": 18, "too": [18, 19, 148, 300, 314, 317, 470, 473], "done": [18, 19, 118, 120, 134], "unsupport": [18, 126, 213, 234, 235], "old": [18, 72, 73, 128], "slow": 18, "ipad": 18, "long": [18, 19, 118, 650, 660], "browser": 18, "cool": [18, 116], "requisit": 18, "head": [18, 125, 650, 661, 915, 937, 948], "pane": [18, 19], "readi": [18, 20], "begin": [18, 813, 814, 824], "outlin": [18, 19, 20, 115, 117, 120, 121, 125, 128, 133], "green": [18, 19, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 962, 963], "dropdown": 18, "tab": [18, 134, 915], "master": [18, 19, 125], "vs": 18, "view": [18, 19, 69, 174, 184, 186, 650, 653, 657], "log": [18, 19, 37, 38, 83, 84, 121, 125, 128, 131, 134, 174, 192, 300, 440, 443, 448, 451, 663, 708, 915], "built": [18, 132, 174, 175, 250, 937, 948, 949, 950], "bottom": 18, "box": 18, "patient": 18, "upto": 18, "15": [18, 101, 102, 118, 300, 339, 342, 495, 498, 650, 653, 663, 673, 675, 699, 701, 718, 720, 749, 783, 786, 831, 832, 835, 836, 838, 839, 840, 848, 851, 853, 854, 873, 874, 877], "minut": 18, "launch": 18, "12": [18, 101, 102, 118, 125, 300, 339, 342, 359, 362, 371, 374, 495, 498, 538, 556, 574, 612, 614, 617, 663, 673, 675, 699, 701, 718, 720, 749, 767, 770, 775, 778, 783, 786, 831, 832, 835, 836, 838, 839, 840, 848, 852, 853, 854, 873, 874, 877], "output": [18, 72, 73, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 131, 133, 135, 136, 148, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 250, 259, 260, 294, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 549, 550, 551, 553, 556, 557, 560, 561, 562, 564, 566, 567, 570, 578, 591, 594, 595, 612, 623, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 813, 826, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 852, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948], "That": [18, 19, 133, 134, 135, 300, 491, 494], "alreadi": [18, 19, 72, 73, 122, 125, 129, 133, 148, 250, 300, 363, 366, 396, 399, 470, 473, 495, 498, 534, 537, 663, 699, 701, 915], "refer": [18, 19, 120, 121, 126, 129, 148, 174, 183, 300, 392, 395, 440, 443, 612, 614, 617, 619, 621, 663, 724, 726, 730, 732, 873, 894, 897, 902, 905, 906, 907, 910, 911, 914, 937, 947], "approach": [18, 19, 120, 121, 125, 133, 134, 148], "colour": 18, "applic": [18, 126, 127, 135, 650, 661, 662, 813, 819, 825], "good": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 135], "chanc": 18, "vscode": 18, "show": [18, 19, 72, 73, 118, 128, 147, 148, 915], "explor": [18, 132, 136, 147], "troubleshoot": 18, "sometim": [18, 19], "ever": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "64": [18, 134, 135, 300, 511, 514, 515, 518, 650, 656, 657, 663, 699, 701, 873, 874, 877, 915, 937, 948], "bit": [18, 118, 121, 125, 133, 213, 232, 233, 236, 300, 343, 346, 347, 350, 355, 358, 873, 890, 893, 898, 901], "usr": 18, "more": [18, 19, 20, 115, 116, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 148, 174, 175, 213, 220, 300, 392, 395, 663, 685, 688, 749, 767, 770, 853, 854, 855, 859, 861, 915], "nutshel": [18, 129], "hook": 18, "lint": 18, "accept": [18, 19, 26, 117, 118, 120, 121, 124, 125, 127, 128, 129, 133, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 456, 459, 460, 463, 479, 482, 491, 494, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 650, 653, 662, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 882, 885, 906, 907, 910, 915], "fix": [18, 19], "fail": [18, 20, 119, 120, 131, 133], "attempt": [18, 148], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 146, 148, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 213, 222, 223, 224, 226, 241, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 538, 539, 540, 541, 543, 560, 561, 562, 567, 568, 569, 571, 612, 614, 615, 616, 618, 632, 634, 636, 638, 650, 659, 661, 662, 663, 693, 695, 702, 704, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 754, 783, 784, 785, 787, 793, 796, 809, 810, 811, 813, 819, 822, 825, 826, 831, 832, 835, 838, 840, 855, 856, 857, 858, 915, 923, 924, 925, 951, 952], "proce": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "modifi": [18, 19, 117, 121, 126, 127, 131], "properli": [18, 115], "enter": [18, 19, 124, 126, 127, 129, 250], "unsur": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "feel": [18, 19, 20, 21, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 915], "server": [19, 915], "appropri": [19, 67, 68, 113, 114, 123, 300, 314, 317, 470, 473, 848, 849], "context": [19, 118, 125, 126, 127, 250, 538, 589, 650, 661, 937, 948], "suitabl": [19, 116, 125], "quick": [19, 115, 135], "alwai": [19, 20, 72, 73, 116, 117, 121, 122, 124, 125, 128, 129, 131, 133, 148, 213, 219, 300, 314, 317, 470, 473, 538, 582, 612, 628, 630, 645], "correct": [19, 20, 63, 64, 109, 110, 115, 121, 125, 126, 127, 129, 213, 245, 749, 750, 753, 873, 894, 895, 896, 897, 902, 903, 904, 905, 915], "tendenc": 19, "gener": [19, 20, 21, 40, 67, 68, 72, 73, 86, 113, 114, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 147, 148, 171, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 491, 494, 511, 514, 515, 518, 539, 542, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 628, 630, 663, 673, 675, 749, 763, 766, 783, 786, 836, 837, 838, 839, 842, 844, 846, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 915, 953, 957], "land": 19, "end": [19, 125, 128, 130, 147, 148, 174, 175, 300, 331, 334, 915, 921], "world": 19, "come": [19, 20, 135, 146, 915, 921], "fly": 19, "hard": [19, 133], "receiv": [19, 120, 126, 127, 250, 259, 260, 538, 545, 588, 937, 947], "respons": [19, 21], "internship": 19, "comment": 19, "trigger": 19, "unansw": 19, "label": [19, 131, 132, 136, 733, 734, 737, 739, 742, 744, 747], "respond": 19, "remov": [19, 20, 21, 69, 72, 73, 117, 120, 121, 126, 128, 136, 663, 673, 675, 685, 688, 721, 723, 749, 789, 792, 809, 810, 811], "someon": [19, 148], "els": [19, 20, 69, 116, 121, 122, 128, 131, 133, 135, 136, 148, 538, 548, 559, 563, 813, 823], "strive": [19, 148], "repli": 19, "newli": [19, 128, 171, 172, 213, 219, 538, 549], "place": [19, 72, 73, 115, 116, 117, 118, 120, 121, 125, 127, 129, 136, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 250, 295, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 580, 581, 582, 650, 653, 662, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910, 953, 954, 955, 956, 957, 958], "bug": [19, 120], "serv": [19, 120, 121, 124, 125, 129, 130, 915], "suspect": 19, "behaviour": [19, 117, 120, 124, 125, 128, 129, 133], "observ": 19, "confid": 19, "noth": [19, 23, 69, 72, 73], "wrong": 19, "someth": [19, 116, 134, 135, 148], "bet": 19, "act": [19, 118, 148], "placehold": [19, 124, 129, 813, 825], "sub": [19, 20, 72, 73, 115, 120, 125, 133, 134, 135, 250, 275, 276, 279, 280, 281, 282, 663, 673, 675, 749, 788, 809, 810, 811, 812, 915], "mark": [19, 120], "ii": [19, 873, 874, 877], "iii": 19, "titl": [19, 915], "issue_numb": 19, "delet": [19, 21, 69], "No": [19, 131], "wait": [19, 72, 73, 74, 75, 76], "progress": [19, 125, 132, 136], "pr": 19, "soon": [19, 125, 146, 148, 915, 921], "partial": [19, 72, 73, 949, 950], "solut": [19, 120, 125, 663, 709, 711], "review": [19, 116], "merg": 19, "everi": [19, 20, 21, 118, 119, 120, 121, 122, 123, 125, 128, 129, 131, 133, 135, 174, 187, 188, 190, 538, 539, 542], "shape": [19, 51, 52, 72, 73, 87, 88, 97, 98, 101, 102, 105, 106, 116, 117, 118, 126, 127, 128, 129, 131, 133, 134, 135, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 250, 262, 290, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 560, 561, 562, 564, 567, 570, 575, 578, 591, 594, 595, 601, 612, 614, 616, 618, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 780, 781, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 845, 847, 848, 849, 851, 852, 856, 858, 862, 863, 866, 868, 871, 873, 874, 877, 906, 907, 910, 911, 914, 915, 937, 939, 940, 941, 942, 943, 944, 951, 952], "move": [19, 72, 73, 116, 250, 295], "within": [19, 26, 29, 30, 120, 135, 148, 174, 175, 836, 842, 844], "7": [19, 21, 37, 38, 51, 52, 74, 75, 83, 84, 101, 102, 118, 121, 125, 128, 159, 161, 162, 250, 272, 300, 301, 304, 314, 315, 316, 317, 318, 339, 342, 343, 346, 359, 362, 363, 366, 371, 374, 388, 391, 396, 399, 408, 411, 428, 431, 468, 469, 495, 498, 511, 514, 524, 528, 529, 533, 538, 547, 556, 566, 612, 614, 617, 619, 621, 632, 634, 650, 656, 657, 662, 663, 667, 669, 670, 672, 673, 675, 699, 701, 718, 720, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 753, 763, 766, 767, 770, 775, 778, 788, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 848, 852, 853, 854, 873, 874, 877], "dai": 19, "close": [19, 117, 300, 392, 395, 495, 498, 663, 712, 714], "likewis": [19, 117, 121, 125, 126, 129, 134], "freed": 19, "flag": [19, 72, 73, 128, 133, 250, 269, 612, 628, 630], "purpos": [19, 21, 118, 120, 121, 123, 124, 125, 129, 130, 133, 300, 392, 395, 915], "remain": [19, 118, 148, 300, 314, 317, 470, 473, 491, 494, 749, 779, 782, 813, 819], "access": [19, 21, 72, 73, 126], "short": [19, 135, 650, 660], "basi": [19, 119, 134], "situat": [19, 136], "alloc": [19, 148, 174, 203, 205, 206, 208, 213, 219, 250], "upon": [19, 118, 120, 128, 148], "period": 19, "prevent": [19, 128, 133, 612, 614, 617, 619, 621, 632, 634, 873, 898, 901, 953, 954, 955], "unabl": 19, "obvious": 19, "never": [19, 125], "reflect": [19, 124], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 133, 136], "becaus": [19, 117, 120, 121, 122, 124, 126, 127, 128, 129, 131, 135, 136, 148], "inact": 19, "limit": [19, 72, 73, 74, 75, 76, 118, 120, 131, 134, 136, 148, 213, 233, 236, 538, 550, 551, 553, 749, 750, 753], "me": 19, "unfairli": 19, "definit": [19, 121, 126, 133, 663, 664, 666, 667, 669], "investig": 19, "Then": [19, 21, 133, 148], "practic": [19, 120], "separ": [19, 120, 124, 131, 133, 134], "branch": [19, 125, 148, 171, 172, 300, 331, 334], "simpli": [19, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 117, 118, 120, 121, 124, 125, 127, 128, 129, 131, 135, 136, 165, 166, 167, 169, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 300, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 392, 395, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 539, 540, 541, 543, 567, 568, 569, 571, 614, 615, 616, 618, 750, 751, 752, 754, 783, 784, 785, 787, 838, 840, 855, 856, 857, 858], "role": [19, 132], "kept": [19, 72, 73, 74, 75, 76, 128, 809, 810, 811], "date": 19, "upstream": [19, 119], "complic": [19, 131], "root": [19, 21, 134, 300, 511, 514, 836, 837, 841], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": [19, 873, 890, 893, 898, 901], "clone": [19, 21, 72, 73, 250, 271, 272, 273, 274], "push": [19, 119], "both": [19, 117, 118, 121, 125, 127, 128, 129, 131, 133, 134, 135, 136, 147, 148, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 240, 300, 301, 304, 314, 317, 319, 322, 363, 366, 396, 399, 479, 482, 487, 490, 511, 514, 515, 518, 524, 528, 538, 566, 612, 614, 617, 650, 653, 662, 663, 667, 669, 673, 675, 685, 688, 724, 726, 749, 783, 786, 831, 832, 835, 853, 855, 859, 873, 878, 881, 906, 907, 910], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 69, 72, 73, 74, 75, 117, 118, 119, 121, 124, 125, 126, 129, 213, 220, 300, 331, 334, 487, 490, 663, 667, 669, 676, 678, 709, 711, 749, 755, 758, 783, 786, 836, 837, 848, 849, 850, 853, 854, 855, 859, 861, 873, 890, 893, 894, 897, 898, 901, 902, 905], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 117, 125, 129, 133], "atlassian": 19, "tutori": 19, "wrote": 19, "piec": [19, 121, 123, 124, 131], "inform": [19, 213, 233, 236, 538, 544, 612, 645], "tag": 19, "usu": 19, "describ": [19, 132, 136, 873, 874, 877, 890, 893, 894, 897, 898, 901], "navig": [19, 115], "blame": 19, "revis": 19, "author": [19, 915], "eg": 19, "16": [19, 83, 84, 101, 102, 118, 134, 300, 524, 525, 527, 528, 650, 656, 663, 673, 675, 699, 701, 838, 840, 848, 852, 873, 874, 877], "5": [19, 21, 37, 38, 39, 40, 51, 52, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 118, 122, 129, 133, 134, 135, 159, 161, 162, 164, 174, 188, 190, 193, 195, 200, 202, 209, 210, 212, 213, 222, 224, 225, 226, 250, 272, 288, 300, 301, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 335, 338, 339, 342, 355, 358, 359, 362, 363, 364, 365, 366, 371, 374, 396, 397, 398, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 527, 528, 529, 530, 532, 533, 538, 539, 540, 547, 556, 566, 567, 570, 571, 601, 606, 612, 614, 616, 617, 618, 650, 653, 655, 656, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 682, 684, 699, 701, 718, 720, 721, 723, 733, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 785, 786, 787, 788, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 847, 848, 850, 851, 852, 853, 854, 855, 859, 862, 863, 866, 873, 874, 877, 878, 881, 906, 907, 910, 937, 948], "past": 19, "l": [19, 115, 663, 664, 666, 676, 678, 685, 688, 721, 723], "filepath": [19, 72, 73], "grep": 19, "v": [19, 69, 131, 134, 135, 136, 650, 662, 915, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 957, 959, 960], "commit_id": 19, "handi": 19, "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 118], "previou": [19, 120, 129, 136, 148, 612, 619, 621, 632, 634], "shown": [19, 67, 68, 72, 73, 113, 114, 118, 129, 131, 133, 148, 300, 339, 342, 359, 362, 371, 374, 495, 498, 529, 533, 663, 670, 672, 749, 763, 766, 767, 770, 853, 854, 862, 863, 866], "whenev": [19, 133, 134], "think": [19, 118], "interact": [19, 915], "gain": [19, 130, 135, 928], "quit": [19, 20, 117, 121, 123, 124], "repeat": [19, 51, 52, 72, 73, 97, 98, 117, 118, 122, 124, 125, 538, 562, 749, 801, 804], "yourself": [19, 20, 147], "simpler": [19, 133], "cannot": [19, 122, 126, 136], "least": [19, 118, 121, 124, 663, 685, 688], "final": [19, 117, 118, 121, 124, 126, 128, 131, 133, 134, 174, 191, 192, 538, 565, 937, 948], "tickbox": 19, "lower": [19, 72, 73, 118, 131, 148, 174, 183, 203, 205, 300, 468, 663, 664, 666, 836, 842, 844], "corner": 19, "without": [19, 72, 73, 116, 121, 124, 125, 127, 129, 131, 133, 134, 135, 147, 148, 538, 593, 598, 749, 779, 782, 813, 815, 853, 854, 855, 859, 861], "span": 19, "intent": [19, 128], "larg": [19, 134, 300, 314, 317, 470, 473], "discourag": 19, "philosophi": 19, "increment": [19, 538, 581], "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 23, 69, 915], "wast": 19, "spot": [19, 121], "mistak": 19, "propos": 19, "mountain": 19, "around": [19, 72, 73, 74, 75, 76, 121, 124, 129, 133, 148], "advoc": [19, 148], "individu": [19, 20, 121], "per": [19, 134, 250, 650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "style": [19, 848, 851], "ve": [19, 130, 133, 836, 837, 915], "were": [19, 72, 73, 116, 120, 125], "actual": [19, 115, 121, 128, 130, 133, 135, 148], "aim": [19, 130], "part": [19, 116, 119, 120, 121, 131, 132, 136, 147, 148, 174, 203, 205, 206, 208, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 949, 950], "subsect": 19, "session": [19, 915], "block": [19, 121, 130, 132, 136, 148, 250, 915], "smaller": [19, 131, 136, 749, 750, 753, 783, 786, 873, 890, 893, 898, 901], "edit": 19, "exact": [19, 72, 73, 131, 853, 854], "beauti": 19, "particularli": [19, 134, 148], "concern": [19, 115, 118, 125, 128, 130], "effici": [19, 120, 121, 125, 128, 129, 131, 134, 148], "difficult": [19, 120, 148, 853, 854, 855, 859, 861], "undo": 19, "stress": 19, "frequenc": [19, 538, 565], "pycharm": 19, "pytest": [19, 120], "button": 19, "declar": 19, "insid": [19, 21, 116, 126], "exec": 19, "rm": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "bash": [19, 21], "test_ivi": [19, 120], "test_funct": 19, "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "header": 19, "summari": [19, 72, 73, 213, 228, 229, 230, 242, 243, 244, 250, 263, 264, 538, 554, 558, 576, 612, 644, 649], "q": [19, 148, 650, 662, 663, 676, 678, 705, 707], "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "variou": [19, 117, 123, 129, 147], "valu": [19, 23, 51, 52, 59, 60, 69, 72, 73, 74, 75, 76, 97, 98, 118, 120, 121, 125, 126, 127, 128, 129, 131, 133, 136, 148, 174, 175, 183, 187, 188, 190, 191, 192, 213, 219, 228, 229, 230, 250, 262, 293, 294, 300, 301, 304, 306, 309, 314, 317, 319, 322, 327, 330, 363, 366, 380, 383, 384, 387, 396, 399, 400, 403, 404, 407, 408, 411, 424, 427, 428, 431, 468, 469, 470, 473, 479, 482, 483, 486, 487, 490, 495, 498, 529, 533, 534, 537, 538, 550, 551, 553, 554, 559, 565, 566, 567, 570, 576, 579, 583, 593, 594, 595, 596, 597, 598, 611, 612, 614, 617, 619, 621, 623, 632, 634, 645, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 693, 695, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 727, 729, 749, 750, 753, 759, 760, 761, 762, 775, 778, 779, 782, 805, 807, 808, 809, 810, 811, 813, 817, 818, 819, 820, 821, 826, 829, 830, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 846, 848, 849, 850, 852, 853, 854, 855, 857, 859, 860, 861, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 950, 951, 952, 953, 954, 955, 957], "cpu": [19, 72, 73, 127, 148, 174, 191, 192, 250, 269, 270, 272, 286, 289, 291, 295, 296, 298, 299, 538, 566, 567, 570, 591, 594, 595, 836, 837, 838, 839, 841, 842, 844, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "gpu": [19, 101, 102, 127, 133, 148, 250, 269, 272, 285, 287, 291, 293, 298, 836, 838, 839, 840], "combin": [19, 72, 73, 74, 75, 76, 118, 120, 121, 124, 125, 136, 663, 667, 669], "wherebi": [20, 125, 813, 825], "broad": 20, "distribut": [20, 72, 73, 127, 148, 250, 271, 275, 276, 277, 278, 650, 658, 733, 734, 737, 739, 742, 744, 747, 836, 837, 838, 839, 841, 842, 844, 937, 945, 949, 950], "across": [20, 72, 73, 118, 120, 121, 125, 126, 129, 250, 259, 260, 271, 272, 274, 275, 276, 277, 278, 282, 292, 293, 538, 546, 547, 813, 819, 848, 850], "todo": [20, 120], "commit": [20, 120], "NOT": [20, 300, 456, 459], "static": [20, 70, 71, 72, 73, 79, 80, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 113, 114, 117, 118, 121, 148, 165, 169, 171, 172, 222, 226, 301, 305, 314, 318, 524, 525, 529, 530, 539, 543, 567, 571, 750, 754, 783, 787, 838, 840, 855, 856], "method": [20, 23, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 113, 114, 116, 117, 118, 120, 121, 124, 129, 131, 132, 135, 136, 148, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 176, 177, 180, 181, 184, 185, 186, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 300, 301, 302, 303, 305, 314, 315, 316, 318, 319, 322, 339, 342, 359, 362, 363, 364, 365, 366, 371, 374, 396, 397, 398, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 529, 530, 531, 532, 533, 538, 539, 540, 541, 543, 554, 555, 566, 567, 568, 569, 571, 594, 595, 606, 608, 612, 614, 615, 616, 618, 632, 634, 636, 638, 650, 656, 662, 663, 664, 666, 667, 669, 670, 672, 733, 734, 737, 749, 750, 751, 752, 754, 763, 766, 767, 770, 775, 778, 783, 784, 785, 787, 788, 797, 800, 813, 814, 824, 825, 826, 831, 832, 835, 836, 838, 840, 841, 842, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 906, 907, 910, 915, 937, 948, 949, 950], "instanc": [20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 67, 68, 70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 105, 106, 113, 114, 117, 118, 120, 121, 124, 126, 128, 129, 134, 135, 136, 149, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 250, 259, 291, 300, 301, 302, 303, 304, 314, 315, 316, 317, 319, 322, 339, 342, 359, 362, 363, 364, 365, 366, 371, 374, 396, 397, 398, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 526, 527, 528, 529, 531, 532, 533, 538, 539, 540, 541, 555, 566, 567, 568, 569, 582, 606, 608, 614, 615, 616, 618, 650, 653, 656, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 733, 734, 737, 749, 750, 751, 752, 763, 766, 767, 770, 775, 778, 783, 784, 785, 786, 788, 797, 800, 831, 832, 835, 836, 841, 842, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 906, 907, 910, 926, 927], "revers": [20, 69, 74, 75, 117, 118, 136, 148, 538, 559, 749, 767, 770], "resourc": 20, "content": [20, 21, 72, 73, 128, 131, 134], "thei": [20, 72, 73, 115, 116, 118, 121, 123, 125, 126, 127, 128, 133, 134, 135, 136, 148, 213, 240, 809, 810, 811, 836, 837, 915, 959, 960], "hypothesi": 20, "cover": [20, 117, 118, 121, 123, 130], "lambda": [20, 131, 134, 953, 956, 958], "direct": [20, 135, 136, 147, 862, 868, 871], "bind": [20, 125], "special": [20, 74, 75, 116, 117, 118, 124, 129, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 359, 362, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 873, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905], "aforement": 20, "categori": [20, 116, 124, 125, 126, 130, 915], "parent": [20, 133], "arraywithelementwis": [20, 37, 124], "containerwithmanipul": [20, 74, 75, 97], "hint": [20, 116, 117, 121, 124, 128, 129, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 650, 653, 662, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910], "its": [20, 21, 117, 213, 220, 250, 294, 663, 685, 688, 749, 763, 766, 779, 782, 783, 786, 797, 800], "docstr": [20, 21, 24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 115, 116, 121, 125, 129, 165, 166, 167, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 223, 224, 225, 226, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 339, 342, 359, 362, 363, 364, 365, 366, 371, 374, 396, 397, 398, 399, 428, 431, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 543, 567, 568, 569, 571, 614, 615, 616, 618, 663, 670, 672, 673, 675, 749, 750, 751, 752, 754, 763, 766, 767, 770, 783, 784, 785, 786, 787, 838, 840, 853, 854, 855, 856, 857, 858, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910], "thorough": [20, 117, 120, 129], "transpil": [20, 130, 132, 915, 921], "builder": [21, 146, 148, 915], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 663, 673, 675, 693, 695, 702, 704, 721, 723, 749, 767, 770, 783, 786, 862, 863, 866, 868, 871, 915], "synchron": 21, "rest": [21, 132, 136], "remove_doc": 21, "_": [21, 117, 125, 128, 133, 134, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 612, 614, 617, 619, 621, 663, 673, 675, 730, 732, 749, 763, 766, 783, 786, 853, 854, 862, 863, 866, 873, 878, 881], "indic": [21, 39, 40, 72, 73, 85, 86, 132, 136, 159, 164, 300, 499, 502, 538, 566, 567, 568, 569, 570, 571, 578, 591, 594, 595, 650, 651, 652, 653, 654, 655, 656, 657, 663, 727, 729, 749, 783, 786, 813, 814, 816, 818, 820, 821, 822, 824, 827, 828, 829, 830, 831, 832, 835, 836, 837, 848, 849, 850, 851, 853, 854, 860, 862, 863, 866, 868, 871, 915, 918, 920, 937, 938, 939, 940, 941, 942, 943, 944, 949, 950], "privat": [21, 953, 957], "fulfil": [21, 130, 915], "autogenerated_sourc": 21, "format": [21, 72, 73, 117, 126, 127, 131, 133, 134, 213, 231, 250, 270, 873, 874, 877, 915], "png": [21, 134], "_imag": 21, "lastli": 21, "structur": [21, 72, 73, 74, 75, 76, 116, 121, 124, 125, 134, 135, 538, 554, 813, 826], "rst": 21, "skip": [21, 72, 73, 120, 813, 826], "read": [21, 72, 73, 915], "partial_sourc": 21, "conf": 21, "copi": [21, 31, 32, 72, 73, 117, 122, 126, 131, 133, 134, 147, 148, 174, 176, 177, 178, 184, 186, 213, 219, 250, 295, 538, 555, 607, 608, 749, 779, 782, 813, 815, 862, 868, 871], "create_rst_fil": 21, "filter": [21, 650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "repres": [21, 133, 174, 193, 195, 213, 232, 300, 310, 313, 314, 317, 323, 326, 335, 338, 371, 374, 470, 473, 507, 510, 529, 533, 650, 659, 663, 708, 709, 711], "overal": [21, 117, 125, 126, 127, 136], "markup": 21, "6": [21, 37, 38, 41, 42, 51, 52, 74, 75, 83, 84, 85, 86, 101, 102, 118, 122, 125, 133, 134, 135, 159, 161, 162, 164, 174, 188, 190, 250, 272, 288, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 339, 342, 343, 346, 359, 362, 363, 364, 365, 366, 371, 374, 396, 399, 408, 411, 428, 431, 468, 469, 475, 478, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 547, 556, 566, 567, 570, 571, 601, 606, 612, 614, 615, 617, 650, 653, 656, 657, 662, 663, 667, 669, 670, 672, 673, 675, 699, 701, 712, 714, 718, 720, 733, 734, 737, 744, 747, 749, 750, 751, 753, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 786, 788, 797, 800, 831, 832, 835, 836, 837, 838, 839, 840, 848, 849, 852, 853, 854, 855, 859, 873, 874, 877, 878, 881], "extract": [21, 116], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 148], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 72, 73, 120, 131, 134, 300, 347, 350, 663, 673, 675, 685, 688], "append_toctree_to_rst": 21, "9": [21, 37, 38, 41, 42, 51, 52, 74, 75, 83, 84, 87, 88, 101, 102, 118, 134, 135, 300, 314, 315, 316, 317, 318, 339, 342, 343, 346, 468, 469, 495, 498, 511, 514, 515, 518, 538, 566, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 650, 653, 656, 657, 663, 667, 669, 670, 672, 673, 675, 699, 701, 712, 714, 718, 720, 749, 750, 751, 753, 767, 770, 775, 778, 783, 786, 788, 836, 837, 838, 839, 840, 848, 852, 853, 854, 873, 874, 877, 953, 954, 955], "index": [21, 31, 32, 72, 73, 121, 125, 133, 173, 174, 183, 193, 194, 195, 250, 291, 538, 544, 566, 567, 570, 749, 793, 796, 813, 816, 817, 820, 821, 822, 827, 829, 848, 849, 850, 851, 853, 854, 855, 859, 862, 863, 866, 918, 920], "create_index_rst": 21, "14": [21, 101, 102, 118, 125, 300, 359, 362, 612, 614, 617, 650, 662, 663, 673, 675, 699, 701, 838, 840, 853, 854, 873, 874, 877], "\u03c0": [21, 300, 306, 309, 319, 322, 327, 330, 331, 334], "namespac": [21, 116, 126, 131, 136], "helper": [23, 69, 120, 134], "abc": [23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 133, 250, 259, 265, 538, 563, 949, 950, 953, 957], "inherit": [23, 124, 125, 133], "__delattr__": [23, 69], "self": [23, 69, 72, 73, 124, 125, 131, 133, 134, 135, 136, 165, 166, 167, 176, 177, 180, 181, 184, 185, 188, 189, 193, 194, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 250, 301, 302, 303, 306, 307, 308, 310, 311, 312, 314, 315, 316, 319, 320, 321, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 336, 337, 339, 340, 341, 343, 344, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 359, 360, 361, 363, 364, 365, 367, 368, 369, 371, 372, 373, 375, 376, 377, 380, 381, 382, 384, 385, 386, 388, 389, 390, 392, 393, 394, 396, 397, 398, 400, 401, 402, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 436, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 470, 471, 472, 475, 476, 477, 479, 480, 481, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 501, 503, 504, 505, 507, 508, 509, 511, 512, 513, 515, 516, 517, 519, 521, 522, 524, 526, 527, 529, 531, 532, 534, 535, 536, 539, 540, 541, 551, 552, 567, 568, 569, 614, 615, 616, 619, 620, 624, 625, 628, 629, 632, 633, 636, 637, 640, 641, 664, 665, 667, 668, 670, 671, 673, 674, 676, 677, 679, 680, 682, 683, 685, 686, 687, 689, 690, 693, 694, 696, 697, 699, 700, 702, 703, 705, 706, 709, 710, 712, 713, 715, 716, 718, 719, 721, 722, 724, 725, 727, 728, 730, 731, 734, 735, 736, 739, 740, 741, 744, 745, 746, 750, 751, 752, 755, 756, 757, 759, 760, 761, 763, 764, 765, 767, 768, 769, 771, 772, 773, 775, 776, 777, 779, 780, 781, 783, 784, 785, 789, 790, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 806, 807, 832, 833, 834, 842, 843, 855, 857, 858, 863, 864, 865, 868, 869, 870, 874, 875, 876, 878, 879, 880, 882, 883, 884, 886, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 900, 902, 903, 904, 907, 908, 909, 911, 912, 913, 915, 953, 957], "delattr": [23, 69], "__format__": [23, 69], "format_spec": [23, 69], "formatt": [23, 69], "__getattribute__": [23, 69], "getattr": [23, 69], "__init_subclass__": [23, 69], "subclass": [23, 69], "overridden": [23, 69], "extend": [23, 69, 117, 120, 122, 129], "__new__": [23, 69], "accur": [23, 69, 300, 392, 395], "__reduce__": [23, 69], "pickl": [23, 69, 72, 73, 125, 134], "__reduce_ex__": [23, 69], "protocol": [23, 69], "__setattr__": [23, 125], "setattr": 23, "__sizeof__": [23, 69], "size": [23, 69, 72, 73, 74, 75, 76, 133, 134, 174, 191, 192, 250, 292, 293, 294, 538, 594, 600, 650, 662, 663, 673, 675, 689, 691, 699, 701, 705, 707, 712, 714, 724, 726, 749, 763, 766, 783, 786, 788, 789, 792, 836, 837, 841, 842, 844, 848, 849, 851, 906, 907, 910, 911, 914, 937, 938, 939], "memori": [23, 69, 127, 128, 146, 148, 250, 268, 289, 294, 296, 299, 650, 660, 915], "byte": [23, 69], "__str__": [23, 69], "__subclasshook__": [23, 69], "overrid": [23, 69, 538, 591], "issubclass": [23, 69], "invok": [23, 69], "abcmeta": [23, 69], "__subclasscheck__": [23, 69], "true": [23, 33, 34, 39, 40, 47, 48, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 121, 125, 126, 128, 131, 133, 134, 135, 136, 159, 160, 165, 167, 169, 171, 172, 174, 191, 213, 219, 222, 223, 224, 225, 226, 250, 269, 286, 290, 291, 300, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 342, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 362, 363, 365, 367, 369, 371, 373, 375, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 422, 423, 424, 426, 427, 428, 430, 431, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 459, 460, 462, 463, 464, 466, 470, 472, 474, 475, 477, 479, 481, 482, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 551, 552, 556, 563, 565, 567, 569, 571, 577, 578, 585, 600, 606, 608, 611, 612, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 650, 658, 663, 664, 666, 685, 687, 689, 691, 712, 713, 714, 727, 729, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 788, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 810, 811, 812, 813, 814, 823, 824, 826, 832, 834, 836, 837, 842, 843, 845, 848, 849, 850, 852, 853, 854, 855, 856, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 876, 878, 880, 881, 882, 884, 885, 886, 888, 889, 890, 892, 893, 894, 896, 897, 898, 900, 901, 902, 904, 905, 906, 907, 909, 910, 911, 913, 914, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958], "notimpl": [23, 69], "normal": [23, 69, 134, 749, 793, 796, 831, 832, 835, 836, 841, 951, 952], "algorithm": [23, 69, 148, 650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "outcom": [23, 69], "cach": [23, 69, 120, 121, 250, 268, 538, 549], "arraywithactiv": 24, "softplu": [24, 25, 70, 71, 159, 169, 915], "variant": [24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 117, 118, 165, 166, 167, 169, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 539, 540, 541, 543, 567, 568, 569, 571, 614, 615, 616, 618, 750, 751, 752, 754, 783, 784, 785, 787, 838, 840, 855, 856, 857, 858], "wrap": [24, 25, 26, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 114, 115, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 136, 148, 149, 157, 165, 166, 167, 169, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 538, 539, 540, 541, 543, 549, 567, 568, 569, 571, 612, 614, 615, 616, 618, 648, 750, 751, 752, 754, 783, 784, 785, 787, 838, 840, 855, 856, 857, 858], "minim": [24, 25, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 51, 52, 59, 60, 70, 71, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 105, 106, 117, 128, 131, 165, 166, 167, 169, 176, 177, 180, 181, 184, 185, 188, 189, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 224, 226, 301, 302, 303, 305, 314, 315, 316, 318, 363, 364, 365, 396, 397, 398, 524, 525, 526, 527, 529, 530, 531, 532, 539, 540, 541, 543, 567, 568, 569, 571, 614, 615, 616, 618, 750, 751, 752, 754, 783, 784, 785, 787, 838, 840, 855, 856, 857, 858], "collect": [26, 72, 73, 120, 147, 159, 171, 250, 538, 612, 650, 733, 813, 826, 831, 836, 923, 937, 951, 953], "args_to_ivi": 26, "include_deriv": [26, 27, 28, 29, 30, 813, 815, 825], "keyword": [26, 27, 28, 69, 72, 73, 74, 75, 76, 116, 126, 127, 128, 129, 134, 174, 193, 195, 250, 259, 260, 274, 278, 282, 538, 545, 588, 813, 819, 873, 898, 901, 949, 950], "variabl": [26, 27, 28, 29, 30, 72, 73, 74, 75, 117, 122, 125, 126, 128, 129, 134, 135, 136, 148, 538, 548, 580, 581, 582, 583, 584, 585, 587, 604, 612, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 645, 648, 650, 661, 663, 709, 711, 809, 810, 811, 812, 831, 832, 835, 915, 926, 927, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "nest": [26, 27, 28, 29, 30, 72, 73, 74, 75, 76, 116, 121, 124, 125, 133, 134, 135, 148, 250, 274, 278, 282, 538, 606, 809, 810, 811, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 949, 950, 953, 954, 955, 956, 957, 958], "unchang": [26, 27, 28, 29, 30], "posit": [26, 27, 28, 37, 38, 83, 84, 129, 134, 147, 173, 174, 183, 213, 233, 250, 274, 278, 282, 300, 301, 304, 412, 415, 416, 419, 470, 473, 491, 494, 538, 565, 663, 664, 666, 749, 763, 766, 783, 786, 836, 846, 848, 851, 906, 907, 910, 911, 914, 926, 927], "bool": [26, 27, 28, 29, 30, 33, 34, 72, 73, 113, 114, 118, 125, 126, 128, 136, 171, 172, 174, 187, 213, 219, 222, 223, 225, 228, 229, 230, 231, 234, 237, 238, 239, 249, 250, 269, 270, 285, 294, 297, 300, 339, 342, 343, 346, 351, 354, 359, 362, 380, 383, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 452, 455, 456, 459, 460, 463, 479, 482, 538, 539, 542, 546, 547, 556, 559, 563, 565, 575, 577, 582, 584, 585, 586, 587, 600, 610, 611, 612, 645, 663, 664, 666, 689, 691, 712, 714, 727, 729, 749, 788, 809, 810, 811, 812, 813, 814, 815, 819, 823, 824, 825, 836, 837, 848, 849, 850, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "deriv": [26, 27, 28, 29, 30, 126, 127, 133, 135, 174, 180, 182, 188, 190, 200, 202, 210, 212, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 813, 815, 825, 949, 953, 957, 959], "tupl": [26, 27, 28, 29, 30, 47, 48, 59, 60, 69, 72, 73, 116, 125, 126, 127, 129, 133, 134, 135, 148, 174, 176, 178, 179, 187, 196, 198, 199, 209, 213, 221, 235, 250, 269, 538, 565, 601, 650, 653, 656, 657, 660, 663, 693, 695, 702, 704, 712, 713, 714, 718, 720, 727, 729, 749, 755, 758, 759, 762, 767, 770, 771, 774, 779, 782, 783, 786, 789, 792, 793, 796, 805, 808, 809, 810, 811, 812, 813, 815, 816, 818, 820, 821, 822, 824, 825, 827, 828, 829, 830, 836, 841, 842, 844, 848, 851, 853, 854, 855, 857, 859, 860, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "kei": [26, 27, 28, 69, 72, 73, 74, 75, 76, 125, 134, 250, 262, 538, 544, 554, 650, 661, 662, 809, 810, 811, 813, 816, 822, 826, 926, 927, 937, 948, 953, 957], "word": [26, 27, 28, 174, 175, 836, 842, 844, 926, 927], "args_to_n": [26, 128, 133], "to_ivi": [26, 72, 73, 133, 813, 826], "input": [26, 29, 30, 41, 42, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 97, 98, 101, 102, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 148, 149, 157, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 238, 239, 240, 241, 245, 250, 259, 260, 269, 270, 271, 272, 274, 275, 278, 282, 288, 294, 295, 300, 301, 304, 305, 306, 309, 310, 313, 314, 317, 318, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 525, 528, 529, 530, 533, 534, 537, 538, 539, 542, 543, 544, 546, 547, 548, 550, 551, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570, 571, 575, 577, 578, 580, 581, 582, 584, 585, 586, 587, 591, 594, 595, 600, 601, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 623, 628, 630, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 754, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 787, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 831, 832, 835, 836, 837, 838, 839, 840, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 951, 952], "leaf": [26, 29, 30, 72, 73, 121, 125, 134, 813, 814, 823, 824], "union": [26, 29, 30, 39, 40, 47, 48, 72, 73, 116, 118, 121, 124, 125, 126, 127, 128, 129, 131, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 283, 289, 291, 293, 294, 295, 296, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 542, 546, 547, 550, 551, 553, 556, 557, 560, 561, 562, 564, 565, 566, 567, 568, 570, 575, 577, 578, 580, 581, 582, 591, 594, 595, 600, 601, 606, 607, 608, 610, 611, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 645, 647, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 713, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 824, 825, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "nativearrai": [26, 29, 30, 31, 32, 39, 40, 116, 118, 121, 124, 125, 128, 129, 131, 133, 136, 149, 157, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 180, 182, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 205, 206, 208, 210, 212, 213, 219, 220, 221, 222, 225, 231, 233, 236, 238, 239, 241, 245, 250, 269, 270, 272, 288, 294, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 539, 540, 542, 546, 547, 550, 551, 553, 555, 556, 557, 560, 561, 562, 564, 565, 566, 567, 568, 570, 575, 577, 578, 580, 581, 582, 591, 594, 595, 600, 601, 606, 607, 608, 610, 611, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 645, 647, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 813, 815, 825, 831, 832, 835, 836, 837, 847, 848, 849, 850, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "travers": [26, 29, 30, 72, 73, 125, 131, 133, 813, 825], "lowest": [26, 29, 30, 72, 73, 121, 148, 813, 825, 836, 838, 839], "leav": [26, 29, 30, 72, 73, 74, 75, 117, 118, 120, 121, 125, 126, 128, 129, 134, 135, 749, 793, 796, 813, 814, 815, 823, 824, 825], "to_n": [26, 72, 73], "item": [26, 30, 67, 68, 69, 72, 73, 126, 131, 133, 134, 136, 213, 228, 250, 259, 260, 262, 269, 271, 273, 275, 277, 281, 538, 554, 576, 602, 603, 813, 818, 819, 820, 821, 825, 829, 830, 915, 949, 950], "arraywithcr": 31, "asarrai": [31, 32, 74, 75, 128, 174, 650, 651, 853, 855, 859], "dtype": [31, 32, 33, 34, 63, 64, 72, 73, 79, 80, 101, 102, 109, 110, 116, 118, 121, 126, 127, 133, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 212, 213, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 290, 300, 355, 358, 538, 546, 547, 591, 607, 650, 658, 749, 763, 766, 831, 832, 835, 836, 842, 843, 844, 845, 848, 849, 850, 862, 868, 871, 873, 890, 891, 892, 893, 894, 897, 898, 899, 900, 901, 906, 907, 910, 915, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 959, 960], "empty_lik": [31, 32, 74, 75, 174], "from_dlpack": [31, 32, 74, 75, 174], "full_lik": [31, 32, 74, 75, 174], "fill_valu": [31, 32, 126, 174, 187, 188, 189, 190, 300, 408, 411, 428, 431], "meshgrid": [31, 32, 74, 75, 174], "xy": [31, 32, 174, 193, 194, 195], "ones_lik": [31, 32, 74, 75, 136, 174, 915], "tril": [31, 32, 74, 75, 174], "k": [31, 32, 69, 115, 131, 174, 183, 203, 204, 205, 206, 207, 208, 538, 546, 650, 662, 663, 685, 688, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723, 836, 841, 842, 844, 848, 851], "triu": [31, 32, 74, 75, 174], "zeros_lik": [31, 32, 74, 75, 174, 749, 750, 753, 915], "creation": [32, 72, 73, 74, 75, 76, 78, 116, 126, 127, 131, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212], "data_typ": [33, 34, 79, 80, 116, 126, 213, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "arraywithdatatyp": 33, "can_cast": [33, 34, 79, 80, 121, 126, 213, 226], "float32": [33, 34, 79, 80, 118, 126, 213, 217, 218, 222, 223, 224, 225, 226, 234, 831, 832, 835], "float64": [33, 34, 126, 213, 219, 222, 223, 225, 234], "arraywithdevic": [35, 133], "ab": [37, 38, 83, 84, 120, 123, 300, 305, 487, 490, 663, 727, 729, 915], "y": [37, 38, 39, 40, 51, 52, 59, 60, 74, 75, 83, 84, 85, 86, 97, 98, 101, 102, 105, 106, 116, 118, 122, 125, 131, 133, 159, 161, 162, 163, 164, 165, 168, 170, 174, 187, 188, 190, 193, 195, 199, 200, 202, 210, 212, 213, 219, 250, 270, 284, 288, 293, 300, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 322, 331, 334, 339, 342, 343, 346, 355, 358, 359, 362, 363, 364, 365, 366, 367, 370, 371, 374, 388, 391, 396, 397, 398, 399, 408, 411, 428, 431, 468, 469, 475, 478, 479, 482, 495, 498, 511, 514, 515, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 546, 547, 555, 556, 563, 564, 566, 567, 568, 569, 570, 571, 600, 606, 607, 608, 612, 623, 650, 656, 657, 659, 663, 664, 666, 667, 669, 670, 672, 682, 684, 699, 701, 718, 720, 721, 723, 733, 734, 737, 739, 742, 744, 747, 749, 750, 751, 752, 753, 754, 755, 758, 763, 766, 767, 770, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 797, 800, 836, 837, 838, 839, 840, 841, 842, 844, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 862, 863, 866, 873, 874, 877, 878, 881, 894, 897, 898, 901, 906, 907, 910], "aco": [37, 38, 83, 84, 300, 915], "acosh": [37, 38, 83, 84, 213, 234, 235, 300, 915], "x2": [37, 38, 39, 40, 47, 48, 72, 73, 83, 84, 85, 86, 93, 94, 118, 129, 213, 245, 250, 288, 300, 314, 315, 316, 317, 318, 331, 332, 333, 334, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 375, 376, 377, 378, 379, 380, 381, 382, 383, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 424, 425, 426, 427, 428, 429, 430, 431, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 519, 520, 521, 522, 523, 538, 539, 540, 541, 542, 543, 650, 655, 663, 667, 668, 669, 685, 686, 687, 688, 699, 700, 701, 709, 710, 711, 718, 719, 720, 724, 725, 726, 848, 852], "z": [37, 38, 39, 40, 74, 75, 83, 84, 85, 86, 118, 122, 125, 131, 133, 250, 284, 300, 314, 315, 316, 317, 318, 339, 342, 359, 362, 408, 411, 428, 431, 468, 469, 538, 546, 547, 566, 567, 568, 569, 571, 600, 663, 667, 669, 733, 734, 737, 739, 742, 749, 750, 753, 848, 849, 873, 874, 877, 878, 881], "asin": [37, 38, 83, 84, 300, 915], "asinh": [37, 38, 83, 84, 300, 915], "atan": [37, 38, 83, 84, 300, 915], "atan2": [37, 38, 83, 84, 300, 915], "atanh": [37, 38, 83, 84, 300, 915], "bitwise_and": [37, 38, 83, 84, 300], "bitwise_invert": [37, 38, 83, 84, 300], "bitwise_left_shift": [37, 38, 83, 84, 300], "bitwise_or": [37, 38, 83, 84, 300], "bitwise_right_shift": [37, 38, 83, 84, 300], "bitwise_xor": [37, 38, 83, 84, 300], "ceil": [37, 38, 83, 84, 174, 175, 300, 915], "cosh": [37, 38, 83, 84, 300, 915], "divid": [37, 38, 72, 73, 83, 84, 118, 124, 300, 400, 403, 538, 602, 749, 788], "equal": [37, 38, 72, 73, 83, 84, 118, 125, 126, 174, 183, 187, 188, 190, 213, 219, 300, 347, 350, 355, 358, 412, 415, 416, 419, 487, 490, 495, 498, 538, 539, 542, 546, 547, 663, 673, 675, 693, 695, 702, 704, 749, 750, 753, 759, 762, 788, 805, 808, 836, 842, 844, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871, 873, 882, 885, 894, 897, 898, 901, 902, 905], "erf": [37, 38, 83, 84, 300], "exp": [37, 38, 83, 84, 300, 392, 395, 448, 451, 915], "expm1": [37, 38, 83, 84, 300], "floor": [37, 38, 83, 84, 300, 355, 358, 538, 564, 915], "floor_divid": [37, 38, 83, 84, 300], "greater": [37, 38, 72, 73, 83, 84, 300, 306, 309, 319, 322, 331, 334, 347, 350, 355, 358, 396, 399, 400, 403, 487, 490, 491, 494, 499, 502, 534, 537, 663, 667, 669, 749, 789, 792, 836, 842, 844], "greater_equ": [37, 38, 83, 84, 300], "isfinit": [37, 38, 83, 84, 300], "isinf": [37, 38, 83, 84, 300], "isnan": [37, 38, 83, 84, 300], "less_equ": [37, 38, 83, 84, 300], "log10": [37, 38, 83, 84, 300], "log1p": [37, 38, 83, 84, 300], "log2": [37, 38, 83, 84, 300], "logaddexp": [37, 38, 83, 84, 300], "logical_and": [37, 38, 83, 84, 300, 915], "logical_not": [37, 38, 83, 84, 300, 915], "logical_or": [37, 38, 83, 84, 300, 915], "logical_xor": [37, 38, 83, 84, 300], "multipli": [37, 38, 83, 84, 118, 122, 124, 300, 538, 556], "neg": [37, 38, 83, 84, 121, 125, 128, 159, 161, 174, 175, 183, 300, 412, 415, 416, 419, 470, 473, 487, 490, 491, 494, 663, 712, 714, 724, 726, 727, 729, 749, 767, 770, 783, 786, 906, 907, 910, 911, 914], "not_equ": [37, 38, 83, 84, 300], "pow": [37, 38, 83, 84, 300], "remaind": [37, 38, 72, 73, 83, 84, 300, 538, 564, 749, 788], "sin": [37, 38, 83, 84, 124, 131, 300, 538, 565, 915], "sinh": [37, 38, 83, 84, 300, 915], "sqrt": [37, 38, 83, 84, 300, 663, 727, 729], "squar": [37, 38, 83, 84, 300, 511, 514, 650, 653, 663, 664, 666, 670, 672, 676, 678, 679, 681, 682, 684, 692, 708, 709, 711, 712, 714], "subtract": [37, 38, 83, 84, 118, 124, 300], "tan": [37, 38, 83, 84, 117, 121, 125, 128, 129, 131, 300, 319, 322, 525, 663, 673, 675, 853, 854, 862, 863, 866, 915], "56": [37, 38, 83, 84, 118, 300, 511, 514, 524, 525, 526, 527, 528, 612, 614, 617, 663, 699, 701, 873, 874, 877], "19": [37, 38, 83, 84, 118, 300, 359, 362, 524, 525, 526, 527, 528, 663, 673, 675], "tanh": [37, 38, 83, 84, 131, 159, 300, 530, 915], "762": [37, 38, 83, 84, 159, 170, 300, 529, 531, 532, 533], "964": [37, 38, 83, 84, 159, 170, 300, 529, 531, 532, 533], "trunc": [37, 38, 83, 84, 300], "elementwis": [38, 72, 73, 84, 116, 121, 131, 136, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537], "arraywithgener": [39, 133], "all_equ": [39, 40, 85, 86, 538, 543], "equality_matrix": [39, 40, 85, 86, 538, 539, 540, 541, 542, 543], "x1": [39, 40, 83, 84, 85, 86, 118, 129, 213, 245, 250, 288, 300, 314, 317, 318, 331, 334, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 379, 380, 383, 400, 403, 404, 407, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 468, 469, 470, 473, 474, 479, 482, 487, 490, 491, 494, 519, 520, 523, 538, 539, 540, 541, 542, 543, 546, 650, 655, 663, 667, 669, 685, 688, 699, 701, 709, 711, 718, 720, 724, 726, 848, 852], "mix": [39, 40, 74, 75, 115, 118, 120, 131, 213, 241, 250, 288, 300, 314, 317, 339, 342, 359, 362, 408, 411, 428, 431, 468, 469, 479, 482, 538, 539, 540, 555, 563, 566, 567, 570, 606, 607, 608, 650, 653, 656, 657, 662, 663, 718, 720, 733, 734, 737, 744, 747, 749, 750, 753, 831, 832, 835, 848, 852, 873, 874, 877, 882, 885], "gather_nd": [39, 40, 72, 73, 85, 86, 538, 571, 915], "arraywithgradi": [41, 133], "adam_step": [41, 42, 87, 88, 612, 618], "mw": [41, 42, 87, 88, 135, 612, 614, 615, 616, 617, 618, 619, 621], "vw": [41, 42, 87, 88, 135, 612, 614, 615, 616, 617, 618, 619, 621], "beta1": [41, 42, 87, 88, 135, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 953, 954, 955], "beta2": [41, 42, 87, 88, 135, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 953, 954, 955], "999": [41, 42, 83, 84, 87, 88, 135, 300, 529, 530, 532, 533, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 953, 954, 955], "epsilon": [41, 42, 49, 50, 53, 54, 87, 88, 95, 96, 99, 100, 121, 125, 128, 135, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 663, 693, 695, 702, 704, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 831, 832, 833, 834, 835, 951, 952, 953, 954, 955], "1e": [41, 42, 49, 50, 53, 54, 87, 88, 95, 96, 99, 100, 121, 125, 128, 135, 136, 538, 574, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 663, 712, 714, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 831, 832, 833, 834, 835, 915, 953, 954, 955, 956, 958], "07": [41, 42, 49, 50, 87, 88, 95, 96, 135, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 632, 633, 634, 635, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 953, 954, 955], "dcdw": [41, 42, 87, 88, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639], "adam_step_delta": [41, 42, 87, 88, 612, 614, 615, 616, 617, 618], "639": [41, 42, 612, 614, 615, 617], "11": [41, 42, 74, 75, 83, 84, 101, 102, 118, 125, 300, 314, 316, 317, 318, 339, 342, 495, 498, 538, 556, 566, 614, 615, 663, 673, 675, 699, 701, 733, 744, 747, 749, 767, 770, 775, 778, 836, 838, 839, 840, 848, 852, 853, 854, 873, 874, 877], "32": [41, 42, 134, 159, 161, 300, 359, 362, 614, 615, 650, 653, 656, 663, 699, 701, 848, 852, 873, 874, 877], "63": [41, 42, 300, 511, 514, 614, 615, 663, 664, 666, 699, 701, 873, 874, 877], "00121": [41, 42, 614, 615], "0102": [41, 42, 614, 615], "0397": [41, 42, 614, 615], "gradient": [42, 72, 73, 88, 116, 125, 134, 135, 147, 148, 250, 294, 614, 617, 619, 621, 623, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 645, 646, 647, 648, 649, 809, 810, 811, 812, 915, 953, 954, 955, 956, 957, 958], "arraywithimag": [43, 133], "arraywithlay": 45, "linear_algebra": [47, 48, 93, 94, 116, 133, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732], "arraywithlinearalgebra": 47, "choleski": [47, 48, 74, 75, 663], "upper": [47, 48, 72, 73, 174, 183, 206, 208, 663, 664, 665, 666, 705, 707, 836, 842, 844], "cross": [47, 48, 74, 75, 663, 733, 734, 737, 739, 742, 744, 747, 915], "axi": [47, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 66, 72, 73, 95, 96, 97, 98, 107, 108, 109, 110, 111, 112, 118, 121, 125, 126, 128, 129, 131, 133, 136, 147, 159, 164, 174, 191, 192, 250, 252, 255, 262, 275, 276, 277, 278, 279, 280, 281, 282, 294, 538, 556, 557, 566, 610, 663, 667, 668, 669, 673, 675, 724, 725, 726, 727, 728, 729, 733, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 755, 756, 757, 758, 759, 762, 763, 764, 765, 766, 767, 768, 769, 770, 775, 776, 777, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 800, 801, 804, 805, 808, 836, 847, 848, 849, 850, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "det": [47, 48, 74, 75, 663], "diagon": [47, 48, 74, 75, 174, 183, 203, 205, 206, 208, 663, 721, 723], "offset": [47, 48, 53, 54, 99, 100, 663, 673, 674, 675, 721, 722, 723, 831, 832, 833, 834, 835], "axis1": [47, 48, 51, 52, 97, 98, 663, 673, 674, 675, 749, 797, 798, 799, 800], "axis2": [47, 48, 663, 673, 674, 675], "eigh": [47, 48, 74, 75, 663], "namedtupl": [47, 48, 663, 676, 677, 678, 705, 706, 707, 712, 714, 853, 854, 855, 859], "eigvalsh": [47, 48, 74, 75, 663], "inv": [47, 48, 74, 75, 133, 663, 915], "matmul": [47, 48, 93, 94, 116, 122, 131, 663, 712, 714, 915], "matrix_norm": [47, 48, 72, 73, 663], "ord": [47, 48, 72, 73, 663, 689, 690, 691, 727, 728, 729], "fro": [47, 48, 663, 689, 690, 691], "keepdim": [47, 48, 63, 64, 65, 66, 72, 73, 109, 110, 111, 112, 538, 610, 663, 689, 690, 691, 727, 728, 729, 848, 849, 850, 873, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914], "matrix_rank": [47, 48, 74, 75, 663], "rtol": [47, 48, 663, 693, 694, 695, 702, 703, 704], "matrix_transpos": [47, 48, 74, 75, 133, 663], "outer": [47, 48, 74, 75, 663, 809, 810, 811, 812], "pinv": [47, 48, 74, 75, 663, 915], "qr": [47, 48, 74, 75, 663], "reduc": [47, 48, 72, 73, 133, 250, 294, 538, 561, 663, 705, 706, 707, 848, 849, 850, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "solv": [47, 48, 74, 75, 132, 147, 663], "svd": [47, 48, 74, 75, 663, 915], "full_matric": [47, 48, 663, 712, 713, 714], "svdval": [47, 48, 74, 75, 663], "tensordot": [47, 48, 74, 75, 663], "ax": [47, 48, 51, 52, 72, 73, 97, 98, 116, 118, 126, 133, 250, 294, 538, 556, 663, 689, 691, 709, 711, 718, 719, 720, 727, 729, 749, 759, 762, 767, 770, 771, 772, 773, 774, 783, 786, 789, 792, 797, 800, 805, 808, 848, 849, 850, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "trace": [47, 48, 72, 73, 74, 75, 131, 148, 538, 584, 585, 587, 663], "vecdot": [47, 48, 74, 75, 663], "vector_norm": [47, 48, 72, 73, 663], "vector_to_skew_symmetric_matrix": [47, 48, 74, 75, 663, 915], "arraywithloss": 49, "binary_cross_entropi": [49, 50, 95, 96, 733], "pred": [49, 50, 95, 96, 121, 125, 128, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748], "cross_entropi": [49, 50, 95, 96, 121, 125, 128, 733, 744, 747], "sparse_cross_entropi": [49, 50, 95, 96, 733], "loss": [50, 96, 116, 121, 134, 135, 136, 734, 737, 739, 742, 744, 747, 915], "arraywithmanipul": 51, "clip": [51, 52, 72, 73, 97, 98, 121, 125, 128, 131, 134, 136, 300, 468, 469, 538, 550, 551, 553, 749, 754, 915], "x_min": [51, 52, 72, 73, 97, 98, 131, 136, 749, 750, 751, 752, 753, 754], "x_max": [51, 52, 72, 73, 97, 98, 131, 136, 749, 750, 751, 752, 753, 754], "roll": [51, 52, 97, 98, 125, 129, 749, 750, 751, 787], "concat": [51, 52, 72, 73, 97, 98, 250, 279, 280, 281, 282, 294, 538, 565, 749, 915], "xs": [51, 52, 97, 98, 125, 250, 273, 277, 279, 280, 281, 538, 539, 542, 547, 612, 623, 749, 755, 756, 757, 758], "constant_pad": [51, 52, 97, 98, 749], "pad_width": [51, 52, 97, 98, 749, 759, 760, 761, 762, 805, 806, 807, 808], "expand_dim": [51, 52, 97, 98, 131, 134, 749, 915], "flip": [51, 52, 97, 98, 133, 134, 136, 300, 343, 346, 749, 775, 778, 915], "permute_dim": [51, 52, 97, 98, 749], "reshap": [51, 52, 72, 73, 97, 98, 128, 131, 133, 136, 749, 915], "shift": [51, 52, 97, 98, 118, 129, 300, 347, 350, 355, 358, 749, 783, 784, 785, 786, 787], "squeez": [51, 52, 97, 98, 749, 915], "stack": [51, 52, 72, 73, 97, 98, 131, 174, 203, 205, 206, 208, 663, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 692, 693, 695, 696, 698, 702, 704, 705, 707, 712, 714, 715, 717, 721, 723, 749, 813, 814, 823, 824, 915, 937, 946], "swapax": [51, 52, 97, 98, 749], "axis0": [51, 52, 97, 98, 749, 797, 798, 799, 800], "tile": [51, 52, 97, 98, 749, 915], "rep": [51, 52, 97, 98, 749, 801, 802, 803, 804], "zero_pad": [51, 52, 97, 98, 749, 915], "arraywithnorm": 53, "layer_norm": [53, 54, 99, 100, 831], "normalized_idx": [53, 54, 99, 100, 831, 832, 833, 834, 835], "05": [53, 54, 99, 100, 250, 612, 614, 617, 831, 832, 833, 834, 835], "scale": [53, 54, 99, 100, 125, 250, 292, 293, 612, 636, 638, 650, 658, 661, 662, 831, 832, 833, 834, 835, 937, 945, 948, 953, 956], "new_std": [53, 54, 99, 100, 831, 832, 833, 834, 835, 951, 952], "norm": [54, 72, 73, 100, 116, 538, 550, 551, 553, 663, 689, 691, 727, 729, 832, 835, 915, 952, 953, 955], "arraywithrandom": [55, 133], "random": [56, 72, 73, 102, 116, 127, 136, 147, 837, 838, 839, 841, 842, 844, 846, 847, 915], "arraywithsearch": 57, "arraywithset": 59, "unique_count": [59, 60, 105, 106, 853, 856], "uc": [59, 60, 855, 857], "count": [59, 60, 118, 134, 250, 288, 663, 724, 726, 749, 767, 770, 853, 854, 855, 857, 859, 906, 907, 910, 911, 914], "arraywithsort": 61, "argsort": [61, 62, 107, 108, 862], "descend": [61, 62, 107, 108, 663, 712, 714, 715, 717, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "sort": [62, 72, 73, 74, 75, 76, 108, 116, 663, 676, 678, 712, 714, 715, 717, 863, 866], "arraywithstatist": 63, "einsum": [63, 64, 109, 110, 873], "equat": [63, 64, 109, 110, 663, 709, 711, 873, 874, 875, 876, 877], "max": [63, 64, 72, 73, 109, 110, 213, 233, 236, 300, 468, 538, 550, 551, 553, 561, 594, 595, 663, 693, 695, 702, 704, 873, 953, 955], "min": [63, 64, 72, 73, 109, 110, 213, 233, 236, 300, 469, 538, 561, 594, 595, 602, 663, 705, 707, 712, 714, 715, 717, 727, 729, 873], "prod": [63, 64, 72, 73, 109, 110, 118, 126, 538, 561, 873], "std": [63, 64, 109, 110, 118, 836, 841, 853, 854, 873], "sum": [63, 64, 72, 73, 109, 110, 121, 125, 126, 128, 131, 250, 279, 280, 281, 282, 294, 300, 314, 317, 448, 451, 538, 557, 561, 594, 595, 650, 662, 663, 712, 714, 721, 723, 727, 729, 873, 874, 877, 894, 897], "var": [63, 64, 109, 110, 113, 114, 118, 131, 809, 810, 811, 873], "statist": [64, 110, 113, 114, 116, 126, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905], "arraywithutil": 65, "util": [66, 112, 116, 127, 250, 283, 907, 910, 911, 914], "add_ivy_array_instance_method": 67, "cl": [67, 68, 113, 114], "to_ignor": [67, 68, 113, 114, 813, 824], "loop": [67, 68, 113, 114, 122, 148, 809, 810, 811, 812], "_wrap_funct": [67, 68, 113, 114, 121, 123], "toi": [67, 68, 113, 114], "arrayexampl": [67, 68], "hasattr": [67, 68, 113, 114, 133], "relu": [67, 68, 74, 75, 134, 135, 159, 160, 161, 915], "softmax": [67, 68, 74, 75, 159, 650, 661, 662, 915], "empti": [69, 72, 73, 74, 75, 124, 126, 127, 174, 175, 873, 894, 897, 898, 901, 906, 907, 910, 911, 914], "dictionari": [69, 72, 73, 74, 75, 76, 134, 148, 250, 293], "map": [69, 72, 73, 74, 75, 76, 120, 121, 125, 129, 134, 147, 148, 250, 259, 813, 820, 821, 825, 826, 937, 948], "pair": [69, 300, 331, 334, 650, 662, 663, 667, 669], "via": [69, 116, 125, 126, 127, 128, 131, 133, 134, 147, 813, 814, 823, 824], "__delitem__": 69, "__iter__": 69, "__len__": 69, "len": [69, 133, 136, 174, 193, 195], "__reversed__": 69, "fromkei": 69, "keyerror": 69, "popitem": 69, "lifo": 69, "setdefault": 69, "insert": [69, 749, 763, 766, 813, 818, 848, 849], "lack": 69, "containerwithactiv": [70, 74, 75], "dict_in": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "queue": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 134, 250, 259, 260, 538, 593, 598], "queue_load_s": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "container_combine_method": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "list_join": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "queue_timeout": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 538], "print_limit": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "key_length_limit": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "print_ind": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "print_line_spac": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "ivyh": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "default_key_color": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "keyword_color_dict": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "rebuild_child_contain": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "types_to_iteratively_nest": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "alphabetical_kei": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "containerbas": [70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 125], "key_chain": [70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 165, 167, 169, 222, 224, 226, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 470, 472, 474, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 539, 541, 543, 551, 552, 567, 569, 571, 619, 620, 622, 624, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 685, 687, 734, 736, 738, 739, 741, 743, 744, 746, 748, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 813, 826, 832, 834, 838, 840, 842, 843, 845, 855, 856, 858, 863, 865, 867, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 907, 909, 911, 913], "to_appli": [70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 165, 167, 169, 222, 224, 226, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 470, 472, 474, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 539, 541, 543, 551, 552, 567, 569, 571, 619, 620, 622, 624, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 685, 687, 734, 736, 738, 739, 741, 743, 744, 746, 748, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 813, 826, 832, 834, 842, 843, 845, 855, 856, 858, 863, 865, 867, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 907, 909, 911, 913], "prune_unappli": [70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 165, 167, 169, 222, 224, 226, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 470, 472, 474, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 539, 541, 543, 551, 552, 567, 569, 571, 619, 620, 622, 624, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 685, 687, 734, 736, 738, 739, 741, 743, 744, 746, 748, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 813, 826, 832, 834, 842, 843, 845, 855, 856, 858, 863, 865, 867, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 907, 909, 911, 913], "map_sequ": [70, 71, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 165, 167, 169, 222, 224, 226, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 335, 337, 343, 345, 363, 365, 367, 369, 371, 373, 375, 377, 379, 384, 386, 388, 390, 392, 394, 396, 398, 412, 414, 416, 418, 420, 422, 432, 434, 436, 438, 440, 442, 444, 446, 456, 458, 470, 472, 474, 475, 477, 483, 485, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 539, 541, 543, 551, 552, 567, 569, 571, 619, 620, 622, 624, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 734, 736, 738, 739, 741, 743, 744, 746, 748, 750, 752, 754, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 789, 791, 797, 799, 801, 803, 805, 807, 832, 834, 842, 843, 845, 855, 856, 858, 863, 865, 867, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 907, 909, 911, 913], "static_softplu": [70, 71, 165], "__getitem__": [72, 73, 125], "queri": [72, 73, 125, 126, 133, 250, 283, 293, 650, 661, 662, 937, 948], "slice": [72, 73, 538, 566, 567, 570, 813, 822], "chain": [72, 73, 124, 125, 135, 136, 148, 809, 810, 811, 813, 826, 959, 960], "element": [72, 73, 117, 131, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 187, 188, 190, 203, 205, 206, 208, 250, 273, 277, 281, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 546, 547, 550, 551, 553, 556, 557, 564, 578, 607, 608, 650, 658, 663, 667, 669, 676, 678, 685, 688, 705, 707, 712, 714, 749, 750, 753, 767, 770, 775, 778, 783, 786, 788, 789, 792, 836, 837, 848, 851, 852, 853, 854, 855, 859, 860, 861, 862, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 937, 945], "represent": [72, 73, 74, 75, 76, 147, 173, 213, 217, 218, 233, 236, 250, 266, 267, 300, 301, 304, 314, 317, 339, 342, 351, 354, 359, 362, 464, 467, 470, 473, 538, 544, 601, 606], "sequenc": [72, 73, 74, 75, 76, 118, 126, 147, 171, 172, 250, 259, 260, 538, 547, 588, 749, 788, 793, 796, 836, 838, 839, 873, 878, 881, 937, 946, 951, 952, 959, 960], "multiprocess": [72, 73, 74, 75, 76, 134, 148, 250, 259, 538], "asynchron": [72, 73, 74, 75, 76], "dimens": [72, 73, 74, 75, 76, 118, 131, 134, 159, 164, 174, 203, 205, 206, 208, 250, 281, 538, 560, 561, 562, 565, 575, 591, 610, 650, 651, 652, 653, 654, 655, 656, 657, 660, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723, 724, 726, 727, 729, 733, 739, 742, 744, 747, 749, 755, 758, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 809, 810, 811, 812, 836, 847, 848, 849, 850, 851, 853, 854, 855, 859, 861, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948], "arriv": [72, 73, 74, 75, 76], "timeout": [72, 73, 74, 75, 76, 250, 259, 260, 538, 593, 598], "maximum": [72, 73, 74, 75, 76, 118, 131, 134, 136, 250, 274, 278, 282, 294, 300, 538, 550, 551, 553, 565, 612, 632, 634, 749, 750, 753, 813, 825, 848, 849, 873, 878, 881, 886, 889, 915], "length": [72, 73, 74, 75, 76, 134, 174, 175, 193, 195, 663, 712, 714, 715, 717, 749, 779, 782], "whitespac": [72, 73, 74, 75, 76], "indent": [72, 73, 74, 75, 76, 134], "extra": [72, 73, 74, 75, 76, 118, 123, 124, 131, 612, 623], "newlin": [72, 73, 74, 75, 76, 117], "handl": [72, 73, 74, 75, 76, 115, 120, 121, 123, 125, 126, 127, 128, 129, 135, 148, 171, 172, 250, 266, 267, 268, 269, 270, 284, 288, 289, 296, 299, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 953, 954, 955, 956, 957, 958], "result": [72, 73, 74, 75, 76, 116, 117, 118, 120, 124, 125, 126, 128, 129, 134, 148, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 221, 241, 250, 259, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 557, 560, 561, 562, 564, 566, 567, 570, 578, 591, 594, 595, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 813, 826, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 850, 852, 853, 854, 861, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914, 915], "color": [72, 73, 74, 75, 76, 962, 963], "termcolor": [72, 73, 74, 75, 76], "rebuild": [72, 73, 74, 75, 76], "constructor": [72, 73, 74, 75, 76, 126, 127, 133, 538, 545, 959, 960], "param": [72, 73, 74, 75, 76, 85, 86, 131, 136, 538, 544, 566, 567, 570, 571], "alphabet": [72, 73, 74, 75, 76], "preserv": [72, 73, 74, 75, 76, 136, 148, 612, 645, 749, 767, 770], "__setitem__": [72, 73, 124, 125, 133], "val": [72, 73, 128, 133, 538, 580, 581, 582, 596, 597], "after": [72, 73, 118, 125, 126, 130, 213, 245, 300, 511, 514, 612, 619, 621, 623, 624, 626, 632, 634, 636, 638, 640, 642, 831, 832, 835, 953, 954, 955, 956, 957, 958], "all_fals": [72, 73], "assert_is_bool": [72, 73], "entri": [72, 73, 174, 191, 192, 749, 788, 813, 826], "boolean": [72, 73, 125, 174, 187, 213, 219, 237, 249, 250, 285, 297, 300, 339, 342, 343, 346, 351, 354, 359, 362, 452, 455, 456, 459, 460, 463, 464, 467, 538, 539, 542, 546, 547, 577, 578, 579, 583, 584, 585, 586, 587, 604, 611, 612, 628, 630, 809, 810, 811, 813, 823, 873, 886, 889], "evalu": [72, 73, 125, 300, 388, 391, 392, 395, 432, 435, 436, 439, 440, 443, 444, 447, 475, 478, 499, 502, 515, 518, 813, 814, 823, 824, 906, 907, 910, 911, 914], "assert": [72, 73, 133, 134, 538, 548], "prune": [72, 73, 813, 826, 827, 828], "all_key_chain": [72, 73], "include_empti": [72, 73], "all_tru": [72, 73, 125, 134], "arrays_as_list": [72, 73], "intermedi": [72, 73], "as_arrai": [72, 73, 538, 575, 600], "as_bool": [72, 73], "as_on": [72, 73], "ones": [72, 73, 74, 75, 120, 131, 133, 134, 174, 183, 200, 202, 300, 363, 366, 538, 591, 915], "fill": [72, 73, 174, 179, 187, 188, 190, 199, 200, 202, 209, 210, 212, 836, 838, 839], "as_random_uniform": [72, 73], "low": [72, 73, 101, 102, 131, 836, 838, 839, 840, 842, 843, 844, 845], "uniform": [72, 73, 135, 836, 837, 838, 839, 842, 844, 928, 930, 931, 934, 935], "boundari": [72, 73, 836, 842, 844], "interv": [72, 73, 131, 136, 174, 175, 191, 192, 663, 724, 726, 749, 750, 753, 793, 796, 836, 838, 839, 842, 844, 906, 907, 910, 911, 914], "as_vari": [72, 73], "as_zero": [72, 73], "assert_contains_sub_contain": [72, 73], "sub_cont": [72, 73], "except": [72, 73, 117, 124, 128, 133, 148, 213, 221, 538, 548, 559, 582, 609, 663, 702, 704, 749, 755, 758, 793, 796, 848, 851, 906, 907, 910, 911, 914], "diff": [72, 73, 125, 134], "screen": [72, 73, 134], "assert_contains_sub_structur": [72, 73], "check_shap": [72, 73], "assert_ident": [72, 73], "check_typ": [72, 73], "same_arrai": [72, 73, 134], "arrays_equ": [72, 73, 74, 75, 538], "datatyp": [72, 73, 174, 176, 178, 196, 198, 213, 227, 238, 239, 240], "assert_identical_structur": [72, 73], "at_key_chain": [72, 73], "ignore_key_error": [72, 73], "ignore_non": [72, 73], "at_kei": [72, 73], "ignor": [72, 73, 118, 148, 174, 193, 195, 813, 824, 953, 957], "substr": [72, 73], "clip_min": [72, 73], "clip_max": [72, 73], "minimum": [72, 73, 131, 136, 250, 300, 301, 304, 538, 573, 574, 596, 597, 602, 603, 749, 750, 753, 848, 850, 873, 878, 881, 886, 889, 915], "config": [72, 73, 134, 813, 826], "duplic": [72, 73, 117, 122, 123, 133, 135], "compar": [72, 73, 120, 134, 538, 539, 542, 546, 547, 853, 854, 855, 859, 861, 862, 863, 866, 868, 871], "container_rightmost": [72, 73], "common_key_chain": [72, 73, 125], "properti": [72, 73, 118, 120, 121, 125, 133, 134, 135, 250, 262, 949, 950, 953, 954, 955, 956, 958], "contains_sub_contain": [72, 73], "match": [72, 73, 125, 213, 219, 300, 491, 494, 538, 588], "contains_sub_structur": [72, 73], "create_if_abs": [72, 73], "inplac": [72, 73, 87, 88, 115, 118, 123, 124, 129, 133, 135, 538, 548, 579, 582, 583, 604, 612, 619, 620, 621, 622, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 926, 927, 953, 954, 955, 956, 957, 958], "cutoff_at_depth": [72, 73], "depth_cutoff": [72, 73], "cutoff_at_height": [72, 73], "height_cutoff": [72, 73], "deep_copi": [72, 73, 134], "intern": [72, 73, 117, 124, 125, 127, 128, 250, 612, 648, 813, 814, 823, 824, 928, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 959, 960], "belong": [72, 73, 135], "dev_clon": [72, 73, 250], "dev_dist": [72, 73, 250], "along": [72, 73, 116, 128, 174, 191, 192, 250, 275, 276, 277, 278, 279, 280, 281, 282, 294, 538, 556, 557, 566, 610, 663, 689, 691, 721, 723, 724, 726, 727, 729, 733, 739, 742, 744, 747, 749, 755, 758, 767, 770, 775, 778, 783, 786, 788, 793, 796, 801, 804, 809, 810, 811, 812, 836, 847, 848, 849, 850, 862, 863, 866, 868, 871, 873, 874, 877, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "dev_str": [72, 73], "diff_kei": [72, 73], "detect_key_diff": [72, 73], "detect_value_diff": [72, 73], "detect_shape_diff": [72, 73], "treat": [72, 73, 132, 136, 171, 172], "detect": [72, 73, 129, 134, 135, 813, 814, 824], "container0": [72, 73], "einops_rearrang": [72, 73, 538], "axes_length": [72, 73, 538, 560, 561, 562], "rearrang": [72, 73, 538, 560, 562], "einops_reduc": [72, 73, 538], "reduct": [72, 73, 126, 133, 538, 561, 594, 595, 906, 907, 910, 911, 914, 915], "One": [72, 73, 126, 131, 133, 134, 538, 561, 749, 779, 782, 836, 838, 839], "callabl": [72, 73, 125, 131, 149, 150, 151, 152, 153, 154, 155, 156, 157, 171, 172, 213, 234, 235, 250, 294, 538, 544, 549, 559, 561, 809, 810, 811, 812, 813, 819, 823, 824, 825], "einops_repeat": [72, 73, 538], "find_sub_contain": [72, 73], "sub_cont_to_find": [72, 73], "exsit": [72, 73], "find_sub_structur": [72, 73], "sub_struc_to_find": [72, 73], "flatten_key_chain": [72, 73, 134, 949, 950], "__": [72, 73, 118, 134], "above_height": [72, 73, 134], "below_depth": [72, 73, 134], "format_key_chain": [72, 73], "format_fn": [72, 73], "string": [72, 73, 122, 126, 127, 131, 134, 213, 217, 218, 231, 237, 249, 250, 266, 267, 268, 269, 283, 289, 295, 296, 299, 538, 558], "from_disk_as_hdf5": [72, 73, 134], "h5_obj_or_filepath": [72, 73], "slice_obj": [72, 73], "load": [72, 73, 148], "disk": [72, 73, 134], "h5py": [72, 73], "hdf5": [72, 73, 134, 949, 950], "h5": [72, 73], "from_disk_as_json": [72, 73, 134], "json_filepath": [72, 73], "json": [72, 73, 134], "dure": [72, 73, 121, 125, 126, 127, 128, 148, 171, 172, 250, 295, 538, 609, 612, 614, 617, 619, 621, 632, 634, 663, 685, 688, 809, 810, 811, 812, 873, 894, 897, 902, 905, 949, 950, 953, 954, 955, 957], "from_disk_as_pickl": [72, 73, 134], "pickle_filepath": [72, 73], "from_flat_list": [72, 73], "flat_list": [72, 73], "hierarchi": [72, 73, 134], "flat": [72, 73, 538, 594, 749, 775, 778], "popul": [72, 73, 126, 127, 131, 836, 837, 873, 894, 897, 902, 905], "from_numpi": [72, 73, 134], "gather": [72, 73, 538, 567, 570], "h5_file_s": [72, 73], "batch": [72, 73, 121, 125, 134, 250, 292, 293, 538, 565, 650, 659, 663, 727, 729, 809, 810, 811, 812, 831, 832, 835, 951, 952], "handle_inplac": [72, 73], "prime": [72, 73], "overwritten": [72, 73, 122, 124], "has_kei": [72, 73], "query_kei": [72, 73], "somewher": [72, 73], "has_key_chain": [72, 73], "has_nan": [72, 73, 538], "include_inf": [72, 73, 538, 577, 611], "leafwis": [72, 73], "nan": [72, 73, 116, 117, 173, 213, 219, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 412, 415, 420, 423, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 538, 577, 611, 650, 662, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "well": [72, 73, 120, 128, 135, 136, 147, 538, 577, 663, 709, 711], "inf": [72, 73, 173, 538, 577, 611, 663, 727, 729], "wise": [72, 73, 131, 136, 159, 160, 161, 162, 163, 164, 165, 168, 170, 300, 301, 304, 306, 309, 314, 317, 319, 322, 327, 330, 331, 334, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 380, 383, 384, 387, 400, 403, 404, 407, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 479, 482, 487, 490, 491, 494, 519, 523, 538, 564, 749, 750, 753], "identical_array_shap": [72, 73], "exclus": [72, 73, 87, 88, 121, 125, 136, 174, 175, 538, 556, 584, 585, 587, 612, 628, 629, 630, 631, 836, 838, 839], "identical_config": [72, 73], "identical_structur": [72, 73], "if_exist": [72, 73], "inplace_upd": [72, 73, 128, 538, 926, 927], "key_chains_contain": [72, 73], "sub_str": [72, 73], "join": [72, 73, 749, 755, 758, 793, 796, 915], "list_stack": [72, 73, 134], "dim": [72, 73, 126, 538, 591, 937, 948], "func": [72, 73, 125, 171, 172, 250, 294, 538, 549, 612, 623, 813, 826], "map_cont": [72, 73], "include_self": [72, 73], "possibi": [72, 73], "matrix": [72, 73, 174, 193, 195, 203, 205, 206, 208, 538, 539, 542, 550, 650, 659, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 688, 689, 691, 692, 693, 695, 696, 698, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723, 730, 732, 937, 947], "integ": [72, 73, 125, 126, 133, 174, 175, 187, 213, 236, 239, 241, 300, 301, 304, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 396, 399, 400, 403, 464, 467, 487, 490, 491, 494, 495, 498, 534, 537, 663, 692, 724, 726, 727, 729, 749, 788, 836, 838, 839, 846, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "flatten": [72, 73, 538, 565, 663, 699, 701, 727, 729, 749, 775, 778, 783, 786, 848, 849, 850, 853, 854, 855, 859, 861], "broadcast": [72, 73, 116, 117, 118, 125, 126, 159, 160, 161, 162, 163, 164, 165, 168, 170, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 219, 220, 221, 250, 295, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 384, 387, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 412, 415, 416, 419, 420, 423, 424, 427, 428, 431, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 452, 455, 456, 459, 460, 463, 464, 467, 468, 469, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 556, 560, 561, 562, 564, 567, 570, 578, 591, 594, 595, 612, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 669, 670, 672, 673, 675, 679, 681, 682, 684, 685, 688, 689, 691, 693, 695, 696, 698, 699, 701, 702, 704, 708, 709, 711, 712, 714, 715, 717, 718, 720, 721, 723, 724, 726, 727, 729, 730, 732, 733, 734, 737, 739, 742, 744, 747, 749, 750, 753, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 847, 848, 849, 850, 852, 853, 861, 862, 868, 871, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "max_depth": [72, 73, 250, 254, 257, 264, 274, 278, 282, 538, 576, 813, 825], "multi_map": [72, 73, 125], "map_nest": [72, 73, 83, 84, 93, 94, 97, 98, 331, 333, 339, 341, 347, 349, 351, 353, 355, 357, 359, 361, 380, 382, 400, 402, 404, 406, 408, 410, 424, 426, 428, 430, 448, 450, 452, 454, 460, 462, 464, 466, 479, 481, 487, 489, 491, 493, 685, 687, 755, 757, 793, 795], "leftmost": [72, 73, 813, 826], "multi_map_in_static_method": [72, 73, 125], "fn_name": [72, 73], "num_arrai": [72, 73], "overwrite_at_key_chain": [72, 73], "overwrit": [72, 73, 128, 131, 250, 294], "target_dict": [72, 73], "return_dict": [72, 73], "prune_empti": [72, 73], "keep_non": [72, 73], "prune_key_chain": [72, 73], "key1": [72, 73, 135], "key2": [72, 73], "key3": [72, 73], "prune_key_from_key_chain": [72, 73], "prune_kei": [72, 73], "prune_keys_from_key_chain": [72, 73], "remove_key_length_limit": [72, 73], "remove_print_limit": [72, 73], "reshape_lik": [72, 73], "leading_shap": [72, 73], "return_cont": [72, 73], "restructur": [72, 73], "keep_orig": [72, 73], "transpos": [72, 73, 133, 136, 250, 281, 650, 652, 654, 656, 663, 696, 698, 702, 704, 915, 937, 939, 941, 943], "restructure_key_chain": [72, 73], "keychain_map": [72, 73], "set_at_key_chain": [72, 73], "set_at_kei": [72, 73], "set_framework": [72, 73, 131, 133, 134, 136], "set_ivy_backend": [72, 73], "ivy_backend": [72, 73], "attribut": [72, 73, 117, 125, 126, 132, 133, 134, 135, 213, 233, 234, 235, 236, 250, 290], "show_sub_contain": [72, 73], "sub_cont_or_keychain": [72, 73], "shuffl": [72, 73, 836, 915], "seed_valu": [72, 73, 836, 846], "seed": [72, 73, 74, 75, 836, 915], "shuffle_h5_fil": [72, 73], "dataset": [72, 73, 134, 146, 915], "size_ordered_arrai": [72, 73], "keychain": [72, 73], "smallest": [72, 73, 213, 233, 236, 300, 363, 366], "largest": [72, 73, 147, 213, 233, 236, 663, 712, 714], "slice_kei": [72, 73], "key_slic": [72, 73], "all_depth": [72, 73], "slice_via_kei": [72, 73], "sort_by_kei": [72, 73], "num_or_size_split": [72, 73, 131, 749, 788], "with_remaind": [72, 73, 749, 788], "constitu": [72, 73, 136], "dimension": [72, 73, 174, 175, 183, 193, 195, 663, 667, 669, 670, 672, 685, 688, 693, 695, 699, 701, 702, 704, 724, 726, 727, 729, 749, 788, 848, 849, 850, 851, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "evenli": [72, 73, 174, 175, 191, 192, 749, 788], "store": [72, 73, 117, 122, 124, 125, 131, 133, 134, 135, 538, 565, 612, 648, 663, 721, 723, 749, 788, 949, 950], "stop_gradi": [72, 73, 74, 75, 87, 88, 135, 250, 294, 612, 619, 620, 621, 622, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 809, 810, 811, 812, 915, 953, 954, 955, 956, 957, 958], "preserve_typ": [72, 73, 612, 645], "stop": [72, 73, 131, 148, 174, 175, 191, 192, 250, 265, 294, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 645, 809, 810, 811, 812, 953, 954, 955, 956, 957, 958], "structural_diff": [72, 73], "to_devic": [72, 73, 250, 269], "cuda": [72, 73, 131, 134, 148, 174, 191, 192, 250, 259, 266, 291, 538, 566, 567, 570, 591, 594, 595, 836, 837, 838, 839, 842, 844, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 957, 959, 960], "target": [72, 73, 115, 130, 134, 135, 136, 250, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 915], "to_dict": [72, 73], "to_disk_as_hdf5": [72, 73, 134], "starting_index": [72, 73], "max_batch_s": [72, 73], "w": [72, 73, 87, 88, 131, 134, 135, 538, 547, 612, 614, 617, 619, 621, 622, 624, 626, 627, 632, 634, 635, 636, 638, 639, 640, 642, 643, 650, 651, 652, 653, 654, 655, 656, 657], "later": [72, 73, 538, 549], "to_disk_as_json": [72, 73, 134], "to_disk_as_pickl": [72, 73, 134], "to_flat_list": [72, 73], "to_iter": [72, 73, 125], "leaf_keys_onli": [72, 73], "to_iterator_kei": [72, 73], "to_iterator_valu": [72, 73], "to_json": [72, 73], "to_list": [72, 73, 538, 915], "to_multi_dev": [72, 73], "multidevcontain": [72, 73, 74], "distributedarrai": [72, 73], "to_numpi": [72, 73, 134, 538, 915], "update_backend": [72, 73], "to_raw": [72, 73], "raw": [72, 73, 117], "trim_kei": [72, 73], "max_length": [72, 73], "try_kc": [72, 73], "tri": [72, 73], "arbitrari": [72, 73, 120, 121, 125, 128, 129, 135, 148, 174, 193, 195, 213, 220, 241, 250, 279, 280, 282], "concatten": [72, 73, 250, 279, 280, 281, 282, 294], "unstack": [72, 73, 131, 134, 538, 915], "dim_siz": [72, 73, 250], "update_config": [72, 73], "global_norm": [72, 73, 85, 86, 551, 552], "vector": [72, 73, 147, 174, 193, 195, 538, 551, 553, 650, 659, 663, 667, 669, 676, 678, 685, 688, 699, 701, 712, 714, 715, 717, 724, 726, 727, 729, 730, 732, 937, 947], "with_default_key_color": [72, 73], "with_entries_as_list": [72, 73], "with_ivy_backend": [72, 73], "with_key_length_limit": [72, 73, 134], "with_print_ind": [72, 73, 134], "with_print_limit": [72, 73, 134], "with_print_line_spac": [72, 73], "containerwithcr": [74, 75, 77], "containerwithdatatyp": [74, 75, 79], "containerwithdevic": [74, 75, 81], "containerwithelementwis": [74, 75, 83, 125], "containerwithgener": [74, 75, 85], "containerwithgradi": [74, 75, 87], "containerwithimag": [74, 75, 89], "containerwithlay": [74, 75, 91], "containerwithlinearalgebra": [74, 75, 93], "containerwithloss": [74, 75, 95], "containerwithnorm": [74, 75, 99], "containerwithrandom": [74, 75, 101], "containerwithsearch": [74, 75, 103], "containerwithset": [74, 75, 105], "containerwithsort": [74, 75, 107], "containerwithstatist": [74, 75, 109], "containerwithutil": [74, 75, 111], "__add__": [74, 75, 117, 118, 124, 125, 129, 133], "__radd__": [74, 75, 117, 118], "arang": [74, 75, 126, 174, 191, 192, 873, 874, 877, 915], "arg_info": [74, 75, 538], "arg_nam": [74, 75, 538], "argmax": [74, 75, 848, 915], "argmin": [74, 75, 848, 915], "array_equ": [74, 75, 538], "as_ivy_dev": [74, 75, 133, 250], "as_ivy_dtyp": [74, 75, 213], "as_native_dev": [74, 75, 250], "as_native_dtyp": [74, 75, 213], "assert_supports_inplac": [74, 75, 538], "astyp": [74, 75, 126, 128, 213], "broadcast_arrai": [74, 75, 213], "broadcast_to": [74, 75, 126, 213], "cache_fn": [74, 75, 121, 538], "clear_mem_on_dev": [74, 75, 250], "clip_matrix_norm": [74, 75, 538], "closest_valid_dtyp": [74, 75, 213], "container_typ": [74, 75, 538], "conv1d": [74, 75, 650, 937], "conv1d_transpos": [74, 75, 650], "conv2d": [74, 75, 650, 915, 937], "conv2d_transpos": [74, 75, 650], "conv3d": [74, 75, 650, 937], "conv3d_transpos": [74, 75, 650], "copy_arrai": [74, 75, 538], "cumprod": [74, 75, 136, 538], "cumsum": [74, 75, 538, 915], "current_backend_str": [74, 75, 538], "default_devic": [74, 75, 127, 131, 250, 288, 291, 298], "default_dtyp": [74, 75, 121, 126, 213], "default_float_dtyp": [74, 75, 126, 213], "default_int_dtyp": [74, 75, 126, 213], "depthwise_conv2d": [74, 75, 650, 915], "dev_clone_arrai": [74, 75, 250], "dev_clone_it": [74, 75, 250], "dev_clone_nest": [74, 75, 250], "dev_dist_arrai": [74, 75, 250], "dev_dist_it": [74, 75, 250], "dev_dist_nest": [74, 75, 250], "dev_unifi": [74, 75, 250], "dev_unify_arrai": [74, 75, 250], "dev_unify_it": [74, 75, 250], "dev_unify_nest": [74, 75, 250], "dev_util": [74, 75, 127, 250], "dropout": [74, 75, 134, 650, 937, 948], "dtype_bit": [74, 75, 213], "execute_with_gradi": [74, 75, 125, 134, 135, 136, 148, 612, 915], "ey": [74, 75, 136, 174, 650, 653, 657], "finfo": [74, 75, 213], "floormod": [74, 75, 538, 915], "fourier_encod": [74, 75, 538], "function_supported_dtyp": [74, 75, 213], "function_unsupported_dtyp": [74, 75, 213], "gelu": [74, 75, 159, 923], "get_all_arrays_in_memori": [74, 75, 538], "get_all_ivy_arrays_on_dev": [74, 75, 127, 250], "get_min_bas": [74, 75, 538], "get_min_denomin": [74, 75, 538], "get_num_dim": [74, 75, 538, 915], "get_referrers_recurs": [74, 75, 538], "gpu_is_avail": [74, 75, 250], "handle_nest": [74, 75, 121, 125, 149], "handle_out_argu": [74, 75, 123, 126, 127, 128, 129, 149], "iinfo": [74, 75, 213], "indices_wher": [74, 75, 538, 915], "infer_devic": [74, 75, 126, 127, 129, 149], "infer_dtyp": [74, 75, 126, 127, 129, 149], "inplace_arrays_support": [74, 75, 538], "inplace_decr": [74, 75, 538], "inplace_incr": [74, 75, 538], "inplace_variables_support": [74, 75, 538], "inputs_to_native_arrai": [74, 75, 124, 149], "invalid_dtyp": [74, 75, 213], "is_float_dtyp": [74, 75, 213], "is_int_dtyp": [74, 75, 213, 538, 608], "is_ivy_contain": [74, 75, 538], "leaky_relu": [74, 75, 159, 915], "linear": [74, 75, 117, 131, 134, 135, 136, 159, 160, 161, 162, 538, 565, 650, 658, 709, 711, 915, 937, 938, 939, 940, 941, 942, 943, 944], "linspac": [74, 75, 131, 174, 175, 915], "logspac": [74, 75, 131, 174], "lstm_updat": [74, 75, 131, 650], "match_kwarg": [74, 75, 538], "matrix_pow": [74, 75, 663], "multi_head_attent": [74, 75, 125, 128, 650], "multinomi": [74, 75, 836], "nonzero": [74, 75, 300, 314, 317, 470, 473, 848], "num_arrays_in_memori": [74, 75, 538], "num_cpu_cor": [74, 75, 127, 250], "num_gpu": [74, 75, 120, 127, 250], "num_ivy_arrays_on_dev": [74, 75, 250], "one_hot": [74, 75, 136, 538, 915], "outputs_to_ivy_arrai": [74, 75, 124, 126, 127, 129, 149], "percent_used_mem_on_dev": [74, 75, 250], "print_all_arrays_in_memori": [74, 75, 538], "print_all_ivy_arrays_on_dev": [74, 75, 250], "promote_typ": [74, 75, 213], "randint": [74, 75, 101, 102, 836, 840, 915], "random_norm": [74, 75, 650, 653, 656, 657, 663, 712, 714, 836, 853, 854], "result_typ": [74, 75, 126, 213], "scaled_dot_product_attent": [74, 75, 650], "scatter_flat": [74, 75, 538], "scatter_nd": [74, 75, 133, 538, 915], "set_default_devic": [74, 75, 127, 250, 298], "set_default_dtyp": [74, 75, 121, 126, 213], "set_default_float_dtyp": [74, 75, 126, 213], "set_default_int_dtyp": [74, 75, 126, 213], "set_min_bas": [74, 75, 538], "set_min_denomin": [74, 75, 538], "set_queue_timeout": [74, 75, 538], "set_split_factor": [74, 75, 250], "set_tmp_dir": [74, 75, 538], "set_with_grad": [74, 75, 612], "shape_to_tupl": [74, 75, 126, 538], "sigmoid": [74, 75, 131, 134, 135, 159, 915], "slogdet": [74, 75, 663], "split_factor": [74, 75, 250, 259], "split_func_cal": [74, 75, 250], "stable_divid": [74, 75, 121, 538], "stable_pow": [74, 75, 538], "static_aco": [74, 75], "static_acosh": [74, 75], "static_al": [74, 75], "static_ani": [74, 75], "static_arang": [74, 75], "static_arg_info": [74, 75], "static_arg_nam": [74, 75], "static_argmax": [74, 75], "static_argmin": [74, 75], "static_arrai": [74, 75], "static_array_equ": [74, 75], "static_arrays_equ": [74, 75], "static_as_ivy_dev": [74, 75], "static_as_ivy_dtyp": [74, 75], "static_as_native_dev": [74, 75], "static_as_native_dtyp": [74, 75], "static_asarrai": [74, 75], "static_asin": [74, 75], "static_asinh": [74, 75], "static_assert_supports_inplac": [74, 75], "static_astyp": [74, 75], "static_atan": [74, 75], "static_atan2": [74, 75], "static_atanh": [74, 75], "static_bitwise_and": [74, 75], "static_bitwise_invert": [74, 75], "static_bitwise_left_shift": [74, 75], "static_bitwise_or": [74, 75], "static_bitwise_right_shift": [74, 75], "static_bitwise_xor": [74, 75], "static_broadcast_arrai": [74, 75], "static_broadcast_to": [74, 75], "static_cache_fn": [74, 75], "static_ceil": [74, 75], "static_choleski": [74, 75], "static_clear_mem_on_dev": [74, 75], "static_clip_matrix_norm": [74, 75], "static_clip_vector_norm": [74, 75], "static_closest_valid_dtyp": [74, 75], "static_concat": [74, 75], "static_constant_pad": [74, 75], "static_container_typ": [74, 75], "static_conv1d": [74, 75], "static_conv1d_transpos": [74, 75], "static_conv2d": [74, 75], "static_conv2d_transpos": [74, 75], "static_conv3d": [74, 75], "static_conv3d_transpos": [74, 75], "static_copy_arrai": [74, 75], "static_co": [74, 75], "static_cosh": [74, 75], "static_cross": [74, 75], "static_cumprod": [74, 75], "static_cumsum": [74, 75], "static_current_backend": [74, 75], "static_current_backend_str": [74, 75], "static_default": [74, 75], "static_default_devic": [74, 75], "static_default_dtyp": [74, 75], "static_default_float_dtyp": [74, 75], "static_default_int_dtyp": [74, 75], "static_depthwise_conv2d": [74, 75], "static_det": [74, 75], "static_dev": [74, 75], "static_dev_clon": [74, 75], "static_dev_clone_arrai": [74, 75], "static_dev_clone_it": [74, 75], "static_dev_clone_nest": [74, 75], "static_dev_dist": [74, 75], "static_dev_dist_arrai": [74, 75], "static_dev_dist_it": [74, 75], "static_dev_dist_nest": [74, 75], "static_dev_unifi": [74, 75], "static_dev_unify_arrai": [74, 75], "static_dev_unify_it": [74, 75], "static_dev_unify_nest": [74, 75], "static_dev_util": [74, 75], "static_diagon": [74, 75], "static_dropout": [74, 75], "static_dtyp": [74, 75], "static_dtype_bit": [74, 75], "static_eigh": [74, 75], "static_eigvalsh": [74, 75], "static_einops_rearrang": [74, 75], "static_einops_reduc": [74, 75], "static_einops_repeat": [74, 75], "static_einsum": [74, 75], "static_empti": [74, 75], "static_empty_lik": [74, 75], "static_equ": [74, 75], "static_erf": [74, 75], "static_execute_with_gradi": [74, 75], "static_exist": [74, 75], "static_exp": [74, 75], "static_expand_dim": [74, 75], "static_expm1": [74, 75], "static_ey": [74, 75], "static_finfo": [74, 75], "static_flip": [74, 75], "static_floor": [74, 75], "static_floor_divid": [74, 75], "static_floormod": [74, 75], "static_fourier_encod": [74, 75], "static_from_dlpack": [74, 75], "static_ful": [74, 75], "static_full_lik": [74, 75], "static_function_supported_dtyp": [74, 75], "static_function_unsupported_dtyp": [74, 75], "static_gath": [74, 75], "static_gelu": [74, 75], "static_get_all_arrays_in_memori": [74, 75], "static_get_all_ivy_arrays_on_dev": [74, 75], "static_get_min_bas": [74, 75], "static_get_min_denomin": [74, 75], "static_get_num_dim": [74, 75], "static_get_referrers_recurs": [74, 75], "static_gpu_is_avail": [74, 75], "static_great": [74, 75], "static_greater_equ": [74, 75], "static_handle_nest": [74, 75], "static_handle_out_argu": [74, 75], "static_has_nan": [74, 75], "static_iinfo": [74, 75], "static_indices_wher": [74, 75], "static_infer_devic": [74, 75], "static_infer_dtyp": [74, 75], "static_inplace_arrays_support": [74, 75], "static_inplace_decr": [74, 75], "static_inplace_incr": [74, 75], "static_inplace_upd": [74, 75], "static_inplace_variables_support": [74, 75], "static_inputs_to_native_arrai": [74, 75], "static_inv": [74, 75], "static_invalid_dtyp": [74, 75], "static_is_arrai": [74, 75], "static_is_float_dtyp": [74, 75], "static_is_int_dtyp": [74, 75], "static_is_ivy_arrai": [74, 75], "static_is_ivy_contain": [74, 75], "static_is_native_arrai": [74, 75], "static_isfinit": [74, 75], "static_isinf": [74, 75], "static_isnan": [74, 75], "static_layer_norm": [74, 75], "static_leaky_relu": [74, 75], "static_less": [74, 75], "static_less_equ": [74, 75], "static_linear": [74, 75], "static_linspac": [74, 75], "static_log": [74, 75], "static_log10": [74, 75], "static_log1p": [74, 75], "static_log2": [74, 75], "static_logaddexp": [74, 75], "static_logical_and": [74, 75], "static_logical_not": [74, 75], "static_logical_or": [74, 75], "static_logical_xor": [74, 75], "static_logspac": [74, 75], "static_lstm_upd": [74, 75], "static_match_kwarg": [74, 75], "static_matmul": [74, 75], "static_matrix_norm": [74, 75], "static_matrix_pow": [74, 75], "static_matrix_rank": [74, 75], "static_matrix_transpos": [74, 75], "static_max": [74, 75], "static_maximum": [74, 75], "static_mean": [74, 75], "static_meshgrid": [74, 75], "static_min": [74, 75], "static_minimum": [74, 75], "static_multi_head_attent": [74, 75], "static_multinomi": [74, 75], "static_multiprocess": [74, 75], "static_native_arrai": [74, 75], "static_neg": [74, 75], "static_nonzero": [74, 75], "static_not_equ": [74, 75], "static_num_arrays_in_memori": [74, 75], "static_num_cpu_cor": [74, 75], "static_num_gpu": [74, 75], "static_num_ivy_arrays_on_dev": [74, 75], "static_one_hot": [74, 75], "static_on": [74, 75], "static_ones_lik": [74, 75], "static_out": [74, 75], "static_outputs_to_ivy_arrai": [74, 75], "static_percent_used_mem_on_dev": [74, 75], "static_permute_dim": [74, 75], "static_pinv": [74, 75], "static_posit": [74, 75], "static_pow": [74, 75], "static_print_all_arrays_in_memori": [74, 75], "static_print_all_ivy_arrays_on_dev": [74, 75], "static_prod": [74, 75], "static_promote_typ": [74, 75], "static_qr": [74, 75], "static_queue_timeout": [74, 75], "static_random_norm": [74, 75], "static_relu": [74, 75], "static_remaind": [74, 75], "static_repeat": [74, 75], "static_reshap": [74, 75], "static_result_typ": [74, 75], "static_round": [74, 75], "static_scaled_dot_product_attent": [74, 75], "static_scatter_flat": [74, 75], "static_scatter_nd": [74, 75], "static_se": [74, 75], "static_set_default_devic": [74, 75], "static_set_default_dtyp": [74, 75], "static_set_default_float_dtyp": [74, 75], "static_set_default_int_dtyp": [74, 75], "static_set_min_bas": [74, 75], "static_set_min_denomin": [74, 75], "static_set_queue_timeout": [74, 75], "static_set_split_factor": [74, 75], "static_set_tmp_dir": [74, 75], "static_set_with_grad": [74, 75], "static_shap": [74, 75], "static_shape_to_tupl": [74, 75], "static_shuffl": [74, 75], "static_sigmoid": [74, 75], "static_sign": [74, 75], "static_sin": [74, 75], "static_sinh": [74, 75], "static_slogdet": [74, 75], "static_softmax": [74, 75], "static_solv": [74, 75], "static_split": [74, 75], "static_split_factor": [74, 75], "static_split_func_cal": [74, 75], "static_sqrt": [74, 75], "static_squar": [74, 75], "static_squeez": [74, 75], "static_stable_divid": [74, 75], "static_stable_pow": [74, 75], "static_stack": [74, 75], "static_std": [74, 75], "static_stop_gradi": [74, 75], "static_sum": [74, 75], "static_supports_inplac": [74, 75], "static_svd": [74, 75], "static_svdv": [74, 75], "static_swapax": [74, 75], "static_tensordot": [74, 75], "static_til": [74, 75], "static_tmp_dir": [74, 75], "static_to_devic": [74, 75], "static_to_list": [74, 75], "static_to_native_arrays_and_back": [74, 75], "static_to_numpi": [74, 75], "static_to_scalar": [74, 75], "static_total_mem_on_dev": [74, 75], "static_tpu_is_avail": [74, 75], "static_trac": [74, 75], "static_tril": [74, 75], "static_triu": [74, 75], "static_trunc": [74, 75], "static_try_else_non": [74, 75], "static_type_promote_arrai": [74, 75], "static_unique_al": [74, 75], "static_unique_invers": [74, 75], "static_unique_valu": [74, 75], "static_unset_default_devic": [74, 75], "static_unset_default_dtyp": [74, 75], "static_unset_default_float_dtyp": [74, 75], "static_unset_default_int_dtyp": [74, 75], "static_unset_with_grad": [74, 75], "static_unstack": [74, 75], "static_used_mem_on_dev": [74, 75], "static_valid_dtyp": [74, 75], "static_value_is_nan": [74, 75], "static_var": [74, 75], "static_vari": [74, 75], "static_variable_data": [74, 75], "static_vecdot": [74, 75], "static_vector_norm": [74, 75], "static_vector_to_skew_symmetric_matrix": [74, 75], "static_wher": [74, 75], "static_with_grad": [74, 75], "static_zero_pad": [74, 75], "static_zero": [74, 75], "static_zeros_lik": [74, 75], "supports_inplac": [74, 75, 538], "tmp_dir": [74, 75, 538], "to_native_arrays_and_back": [74, 75, 123, 129, 149], "to_scalar": [74, 75, 538], "total_mem_on_dev": [74, 75, 127, 250], "tpu_is_avail": [74, 75, 250], "try_else_non": [74, 75, 538], "type_promote_arrai": [74, 75, 213], "unique_al": [74, 75, 853], "unique_invers": [74, 75, 853], "unique_valu": [74, 75, 853], "unset_default_devic": [74, 75, 250], "unset_default_dtyp": [74, 75, 213], "unset_default_float_dtyp": [74, 75, 213], "unset_default_int_dtyp": [74, 75, 213], "unset_with_grad": [74, 75, 612], "used_mem_on_dev": [74, 75, 250], "valid_dtyp": [74, 75, 213], "value_is_nan": [74, 75, 538], "variable_data": [74, 75, 612], "with_grad": [74, 75, 612, 644], "at_dev": [74, 76, 250, 263, 264], "int32": [79, 80, 126, 213, 222, 224, 225, 226, 234, 538, 607, 749, 763, 766, 873, 890, 893, 898, 901], "int64": [79, 80, 126, 213, 222, 224, 225, 226, 234, 300, 355, 358, 848, 849, 850, 873, 890, 893, 898, 901], "static_can_cast": [79, 80, 222], "from_": [79, 80, 213, 222, 225, 226], "static_ab": [83, 84, 301], "static_add": [83, 84, 117, 118, 125, 314], "static_divid": [83, 84, 125, 375], "static_multipli": [83, 84, 125, 470], "static_subtract": [83, 84, 125, 519], "static_tan": [83, 84, 118, 125, 524], "143": [83, 84, 118, 300, 524, 525, 527, 528], "38": [83, 84, 118, 300, 524, 525, 527, 528], "static_tanh": [83, 84, 529], "76": [83, 84, 300, 371, 374, 529, 530, 612, 614, 617, 663, 718, 720, 873, 874, 877], "96": [83, 84, 300, 524, 528, 529, 530, 612, 614, 617, 663, 699, 701, 873, 874, 877], "995": [83, 84, 300, 529, 530, 532, 533], "9999": [83, 84, 529, 530], "static_all_equ": [85, 86, 539, 541], "clip_vector_norm": [85, 86, 538], "max_norm": [85, 86, 538, 550, 551, 552, 553], "static_gather_nd": [85, 86, 567], "adam_upd": [87, 88, 135, 612], "lr": [87, 88, 134, 135, 612, 619, 620, 621, 622, 624, 625, 626, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 953, 954, 955, 956, 957, 958], "mw_tm1": [87, 88, 612, 619, 620, 621, 622, 632, 633, 634, 635], "vw_tm1": [87, 88, 612, 619, 620, 621, 622, 632, 633, 634, 635], "gradient_descent_upd": [87, 88, 612, 809, 810, 811, 812, 915], "is_vari": [87, 88, 128, 612], "lamb_upd": [87, 88, 612], "max_trust_ratio": [87, 88, 612, 632, 633, 634, 635, 953, 955], "decay_lambda": [87, 88, 612, 632, 633, 634, 635, 636, 637, 638, 639, 953, 955, 956], "lars_upd": [87, 88, 612], "optimizer_upd": [87, 88, 612], "effective_grad": [87, 88, 612, 640, 641, 642, 643], "static_adam_step": [87, 88, 614], "87": [87, 88, 101, 102, 612, 614, 617, 618, 838, 840], "976": [87, 88, 300, 529, 533, 612, 614, 617, 618], "static_adam_upd": [87, 88, 619], "static_gradient_descent_upd": [87, 88, 624], "static_is_vari": [87, 88, 628], "static_lamb_upd": [87, 88, 632], "static_lars_upd": [87, 88, 636], "static_optimizer_upd": [87, 88, 640], "static_binary_cross_entropi": [95, 96, 734], "static_cross_entropi": [95, 96, 739], "static_sparse_cross_entropi": [95, 96, 744], "static_clip": [97, 98, 750], "static_rol": [97, 98, 118, 125, 750, 754, 783], "random_uniform": [101, 102, 127, 135, 836, 915], "static_randint": [101, 102, 838], "20": [101, 102, 133, 300, 359, 362, 388, 391, 495, 498, 511, 514, 663, 673, 675, 699, 701, 718, 720, 836, 838, 839, 840, 848, 851, 852, 873, 874, 877], "40": [101, 102, 300, 371, 374, 511, 514, 663, 699, 701, 838, 840, 873, 874, 877], "62": [101, 102, 838, 840], "52": [101, 102, 612, 614, 617, 663, 699, 701, 838, 840, 853, 854, 873, 874, 877], "95": [101, 102, 612, 614, 617, 838, 840], "37": [101, 102, 300, 524, 528, 831, 832, 835, 838, 840], "42": [101, 102, 136, 159, 165, 168, 612, 614, 617, 663, 699, 701, 836, 838, 840, 846, 873, 874, 877], "13": [101, 102, 118, 125, 300, 339, 342, 359, 362, 371, 374, 511, 514, 538, 556, 612, 614, 617, 650, 662, 663, 673, 675, 699, 701, 831, 832, 835, 838, 840, 848, 852, 853, 854, 873, 874, 877], "static_random_uniform": [101, 102, 842], "static_unique_count": [105, 106, 855], "classivi": [105, 106, 749, 788, 853, 855, 856, 858, 859], "static_argsort": [107, 108, 863], "static_sort": [107, 108, 868], "add_ivy_container_instance_method": 113, "containerexampl": [113, 114], "who": [115, 130, 148], "mainli": [115, 132, 134], "under": [115, 117, 118, 119, 120, 121, 125, 130, 131, 134, 136], "hood": [115, 118, 120, 121, 125, 130, 131, 134, 136], "weed": [115, 130], "behind": [115, 130, 132, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642], "tour": 115, "primari": [115, 120, 122, 128, 148], "composit": [115, 120, 122, 124, 125, 128, 131, 135, 136, 148], "nestabl": [115, 117, 118, 120, 128, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 363, 366, 396, 399, 479, 482, 511, 514, 515, 518, 524, 528, 538, 566, 650, 653, 662, 663, 673, 675, 749, 783, 786, 831, 832, 835, 853, 855, 859, 873, 878, 881, 906, 907, 910], "dynam": [115, 126, 127, 128, 131, 171, 172], "runtim": [115, 120, 250], "h": [115, 125, 650, 653, 654, 655, 656, 657], "j": [115, 538, 546, 547, 663, 721, 723, 873, 874, 877], "borrow": 115, "n": [115, 174, 193, 195, 203, 205, 206, 208, 538, 547, 650, 658, 663, 673, 675, 685, 688, 692, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 712, 714, 715, 717, 721, 723, 724, 726, 727, 729, 730, 732, 749, 759, 762, 763, 766, 771, 774, 793, 796, 805, 808, 836, 841, 842, 844, 848, 851, 873, 882, 885, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "taken": [116, 136, 663, 673, 675], "constant": [116, 121, 135, 136, 148, 250, 259, 260, 749, 759, 762, 813, 819, 831, 832, 835, 928, 929, 933, 936, 949, 950, 951, 952], "compil": [116, 125, 130, 132, 148, 915, 949, 950, 953, 954, 955, 956, 957, 958], "meta": [116, 124, 810, 811, 812], "overlap": 116, "sever": [116, 148, 663, 682, 684], "judgement": 116, "locat": [116, 120, 122, 127, 836, 837], "some_namespac": 116, "some_backend": 116, "another_backend": 116, "break": [116, 129, 133, 148, 915], "anyth": [116, 915], "refactor": 116, "ongo": 116, "subfold": [116, 120], "file_nam": 116, "my_func": [116, 118], "int": [116, 118, 121, 125, 126, 127, 128, 129, 136, 159, 164, 171, 172, 174, 179, 183, 187, 188, 190, 191, 192, 199, 203, 205, 206, 208, 209, 213, 221, 230, 232, 233, 236, 239, 250, 272, 275, 276, 277, 278, 286, 287, 288, 294, 295, 300, 339, 342, 343, 346, 347, 350, 351, 354, 355, 358, 359, 362, 538, 544, 556, 557, 560, 561, 562, 565, 566, 575, 591, 594, 595, 600, 601, 610, 612, 614, 617, 619, 621, 632, 634, 650, 651, 653, 655, 656, 657, 663, 667, 669, 673, 675, 718, 720, 721, 723, 724, 726, 727, 729, 733, 739, 742, 744, 747, 749, 755, 758, 759, 762, 763, 766, 767, 770, 771, 774, 775, 778, 779, 782, 783, 786, 788, 789, 792, 793, 796, 797, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 825, 831, 832, 835, 836, 837, 838, 839, 841, 842, 844, 846, 848, 849, 850, 862, 863, 866, 868, 871, 873, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "nativedtyp": [116, 126, 127, 129, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 190, 196, 198, 199, 200, 202, 209, 210, 212, 213, 218, 219, 229, 230, 231, 240, 836, 842, 844, 873, 898, 901], "nativedevic": [116, 126, 127, 129, 174, 175, 176, 178, 179, 180, 182, 183, 187, 188, 190, 191, 192, 196, 198, 199, 200, 202, 209, 210, 212, 250, 267, 268, 269, 283, 289, 291, 293, 295, 296, 299, 538, 591, 836, 837, 838, 839, 841, 842, 844], "my": 116, "numer": [116, 135, 174, 193, 195, 213, 219, 300, 301, 304, 314, 317, 363, 366, 375, 378, 392, 395, 396, 399, 400, 403, 412, 415, 416, 419, 420, 423, 424, 427, 456, 459, 460, 463, 470, 473, 475, 478, 479, 482, 487, 490, 491, 494, 499, 502, 515, 518, 519, 523, 534, 537, 538, 573, 574, 596, 597, 602, 603, 663, 667, 669, 685, 688, 699, 701, 712, 714, 718, 720, 721, 723, 724, 726, 836, 847, 848, 849, 850, 873, 878, 881, 890, 893, 898, 901, 928], "cooler": 116, "produc": [116, 250, 259, 260, 650, 662], "something_cool": 116, "category_nam": [117, 121, 126, 127, 129], "contrast": [117, 129], "backend_nam": [117, 121, 122, 123, 126, 127, 129], "account": 117, "instanti": 117, "firstli": [117, 118, 121, 124, 126, 128, 134], "templat": [117, 915], "spec": [117, 118], "api_specif": [117, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 663, 673, 675, 749, 763, 766, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881], "array_api": 117, "preview": 117, "render": 117, "incorrectli": 117, "onlin": [117, 915], "approxim": [117, 159, 160, 300, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 331, 334, 367, 370, 371, 374, 388, 391, 392, 395, 432, 435, 436, 439, 440, 443, 444, 447, 487, 490, 503, 506, 507, 510, 524, 528, 529, 533, 663, 693, 695, 702, 704], "tangent": [117, 159, 170, 300, 327, 330, 331, 334, 335, 338, 524, 528, 529, 533], "domain": [117, 300, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 331, 334, 367, 370, 371, 374, 388, 391, 392, 395, 432, 435, 436, 439, 444, 447, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533], "infin": [117, 173, 213, 219, 300, 301, 304, 310, 313, 314, 317, 323, 326, 327, 330, 331, 334, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 400, 403, 412, 415, 416, 419, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 663, 727, 729, 873, 878, 881, 886, 889, 906, 907, 910, 911, 914], "codomain": [117, 300, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 331, 334, 367, 370, 371, 374, 388, 391, 392, 395, 432, 435, 436, 439, 444, 447, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533], "x_i": [117, 300, 301, 304, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 343, 346, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 412, 415, 416, 419, 420, 423, 432, 435, 436, 439, 444, 447, 456, 459, 475, 478, 495, 498, 499, 502, 503, 506, 507, 510, 511, 514, 515, 518, 524, 528, 529, 533, 534, 537, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905], "assum": [117, 122, 126, 133, 134, 148, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 367, 370, 371, 374, 396, 399, 479, 482, 495, 498, 503, 506, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 650, 653, 662, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910], "express": [117, 131, 136, 300, 306, 309, 319, 322, 327, 330, 331, 334, 367, 370, 503, 506, 524, 528], "radian": [117, 300, 306, 309, 319, 322, 327, 330, 331, 334, 367, 370, 503, 506, 524, 528], "float": [117, 121, 125, 126, 128, 129, 133, 135, 159, 161, 173, 174, 175, 179, 183, 187, 188, 190, 191, 192, 199, 209, 213, 219, 229, 233, 238, 241, 250, 283, 289, 293, 296, 299, 300, 301, 304, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 359, 362, 363, 366, 367, 370, 371, 374, 375, 378, 380, 383, 388, 391, 392, 395, 396, 399, 400, 403, 404, 407, 408, 411, 424, 427, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 475, 478, 479, 482, 483, 486, 487, 490, 491, 494, 495, 498, 503, 506, 507, 510, 511, 514, 519, 523, 524, 528, 529, 533, 534, 537, 538, 550, 551, 553, 565, 573, 574, 596, 597, 602, 603, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 653, 657, 662, 663, 664, 666, 670, 672, 676, 678, 679, 681, 682, 684, 693, 695, 702, 704, 705, 707, 709, 711, 712, 714, 727, 729, 733, 734, 737, 739, 742, 744, 747, 809, 810, 811, 812, 831, 832, 835, 836, 841, 842, 844, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905], "operand": [117, 300, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 331, 334, 359, 362, 363, 366, 367, 370, 371, 374, 388, 391, 392, 395, 396, 399, 432, 435, 436, 439, 444, 447, 448, 451, 470, 473, 487, 490, 491, 494, 495, 498, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 534, 537, 873, 874, 877, 878, 881, 886, 889, 898, 901], "whose": [117, 174, 203, 205, 206, 208, 300, 310, 313, 323, 326, 335, 338, 367, 370, 371, 374, 487, 490, 503, 506, 507, 510, 524, 528, 529, 533, 538, 549, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 693, 695, 696, 698, 699, 701, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723, 749, 767, 770, 783, 786, 853, 854, 855, 859, 873, 874, 877], "ref": [117, 300, 355, 358, 424, 427, 470, 473, 479, 482, 491, 494, 519, 523, 749, 793, 796], "promot": [117, 121, 126, 213, 219, 222, 225, 240, 241, 245, 300, 306, 309, 310, 313, 314, 317, 319, 322, 323, 326, 327, 330, 335, 338, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 367, 370, 371, 374, 375, 378, 388, 391, 392, 395, 432, 435, 436, 439, 444, 447, 448, 451, 464, 467, 470, 473, 487, 490, 491, 494, 503, 506, 507, 510, 511, 514, 524, 528, 529, 533, 663, 664, 666, 667, 669, 682, 684, 685, 688, 693, 695, 699, 701, 702, 704, 709, 711, 724, 726, 727, 729, 749, 793, 796, 873, 882, 885], "But": [117, 125, 136], "needless": 117, "info": [117, 915], "subset": [117, 120, 129, 131], "renam": 117, "conform": [117, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 392, 395, 396, 399, 428, 431, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910], "org": [117, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 612, 614, 617, 619, 621, 663, 673, 675, 749, 763, 766, 783, 786, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881], "elementwise_funct": [117, 300, 301, 304, 319, 322, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 511, 514, 515, 518, 663, 673, 675, 749, 783, 786, 853, 854, 862, 863, 866, 873, 878, 881], "descript": [117, 125, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 650, 653, 662, 663, 670, 672, 673, 675, 727, 729, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881, 906, 907, 910], "simplic": [117, 135, 147, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 222, 225, 300, 301, 304, 314, 317, 319, 322, 339, 342, 359, 362, 363, 366, 371, 374, 396, 399, 479, 482, 495, 498, 511, 514, 515, 518, 524, 528, 529, 533, 538, 566, 650, 653, 662, 663, 670, 672, 673, 675, 749, 763, 766, 767, 770, 783, 786, 831, 832, 835, 853, 854, 855, 859, 862, 863, 866, 873, 878, 881], "judgment": 117, "beyond": [117, 749, 783, 786], "text": 117, "func_nam": [117, 118, 121], "pure": [117, 133, 136, 148], "themselv": [117, 121, 125, 126, 127, 135, 813, 814], "operator_nam": 117, "succinct": 117, "contstructor": 117, "though": [117, 121, 126, 134, 148], "forward": [117, 136, 147, 148, 949, 950, 953, 957], "_forward": [117, 131, 134, 135, 915], "former": 117, "trainabl": [117, 132, 134, 135, 612, 628, 630, 926, 927, 949, 950, 959], "explicitli": [117, 121, 122, 124, 125, 128, 131, 148, 663, 676, 678, 937, 946, 948, 949, 950], "latter": [117, 122], "implicit": [117, 125, 131], "docst": 117, "eight": 118, "static_": 118, "op_nam": 118, "__r": 118, "four": [118, 121, 126, 129, 134], "__sub__": [118, 124, 125, 129, 133], "__mul__": [118, 124, 125, 129, 133], "__truediv__": [118, 124, 125], "respect": [118, 124, 125, 126, 129, 174, 193, 195, 300, 301, 304, 314, 317, 331, 334, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 380, 383, 400, 403, 404, 407, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 470, 473, 479, 482, 491, 494, 519, 523, 612, 614, 617, 619, 621, 623, 624, 626, 632, 634, 636, 638, 640, 642, 663, 705, 707, 809, 810, 811, 812], "recap": [118, 125, 135], "independ": [118, 119, 123, 125, 131, 136, 663, 667, 669, 709, 711, 836, 837], "combinatorili": 118, "variat": [118, 120], "grid": [118, 120, 147, 174, 193, 195], "vari": [118, 120, 125, 133, 853, 854, 855, 859, 861], "simplest": 118, "small": [118, 121, 131, 135, 148, 300, 470, 473, 663, 693, 695, 702, 704, 831, 832, 835, 951, 952], "unus": [118, 128, 171, 172], "18": [118, 125, 300, 359, 362, 663, 673, 675, 699, 701, 873, 874, 877], "excess": [118, 122, 133], "showcas": [118, 147], "demonstr": [118, 133], "replic": [118, 126], "meant": 118, "imaginari": 118, "some_flag": 118, "another_flag": 118, "54": [118, 300, 367, 370, 371, 374, 511, 514, 650, 662, 663, 699, 701, 836, 841, 873, 874, 877], "jointli": 118, "three": [118, 125, 130, 174, 193, 195, 915], "x0": [118, 538, 546], "procedur": 118, "sens": [118, 125, 133], "5574077": 118, "1850398": 118, "5463025": 118, "8422884": 118, "91601413": 118, "9647598": 118, "3738229": 118, "1597457": 118, "0963247": 118, "9955841": 118, "3278579": 118, "multi": [118, 125, 130, 148, 650, 661, 663, 667, 669, 915, 921, 937, 948], "seper": [118, 538, 565], "pars": [118, 148], "satisfi": [118, 663, 730, 732], "far": [118, 127, 132, 133, 813, 814, 824], "asid": [118, 147], "irrelev": [118, 126], "increasingli": 118, "complex": [118, 134, 135, 136, 148, 663, 676, 678, 712, 714], "rule": [118, 120, 121, 124, 125, 126, 213, 219, 222, 225, 241, 300, 335, 338, 355, 358, 375, 378, 470, 473, 491, 494, 663, 664, 666, 667, 669, 699, 701, 709, 711], "14254655": 118, "1578213": 118, "380515": 118, "17": [118, 125, 159, 161, 663, 673, 675, 836, 841], "trivial": 118, "By": [118, 121, 125, 128, 135, 136, 538, 556, 557, 663, 724, 726, 749, 775, 778, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "non": [118, 125, 126, 131, 171, 172, 213, 219, 237, 300, 456, 459, 460, 463, 650, 653, 663, 670, 672, 693, 695, 712, 714, 718, 720, 724, 726, 727, 729, 848, 849, 850, 851, 873, 878, 881, 882, 885, 886, 889, 890, 893, 902, 905, 906, 907, 910, 911, 914, 949, 950, 953, 957], "dictat": [118, 124, 128, 129], "exlud": 118, "unit": [119, 120, 148, 159, 160, 161, 162, 250], "thoroughli": [119, 120], "ci": [119, 120, 148], "failur": 119, "On": [120, 132, 136], "fixtur": 120, "consum": [120, 125, 129, 250], "300": [120, 300, 495, 498], "hit": [120, 131], "permit": [120, 124, 129], "action": 120, "eleg": 120, "intellig": 120, "sampl": [120, 650, 658, 836, 837, 841, 842, 844, 873, 894, 897, 902, 905, 937, 945], "rang": [120, 134, 135, 136, 174, 175, 191, 192, 853, 854, 873, 890, 893, 898, 901, 915], "unexplor": 120, "known": 120, "repeatedli": [120, 125, 813, 822], "upload": 120, "artifact": 120, "parametr": 120, "strategi": 120, "statement": [120, 148], "plai": [120, 136], "verifi": [120, 126, 127, 133, 915, 921], "truth": [120, 300, 380, 383, 404, 407, 408, 411, 424, 427, 428, 431, 479, 482], "opt": [120, 122, 128, 133], "defer": [120, 121, 124, 125, 126, 127, 128], "suffic": [120, 123], "catch": [120, 538, 559], "systemat": 120, "safeguard": 120, "inabl": 120, "fact": [120, 134], "categor": [121, 127], "mutual": [121, 125], "constitut": [121, 131, 873, 894, 897, 902, 905], "venn": 121, "diagram": 121, "light": [121, 148], "wherea": [121, 124, 126, 127, 129, 136], "hand": [121, 148], "log_pr": [121, 125, 128], "array_arg": 121, "typic": 121, "whatsoev": [121, 125], "commonli": [121, 873, 894, 897, 902, 905], "outsid": [121, 127, 131, 133, 136, 749, 750, 753, 793, 796], "denomin": [121, 148, 538, 564, 574, 597, 602, 603, 831, 832, 835, 951, 952], "divis": [121, 300, 355, 358, 375, 378, 400, 403, 491, 494, 538, 564, 574, 597, 602, 603, 612, 614, 617, 619, 621, 632, 634, 953, 954, 955], "deal": [121, 148], "concurr": [121, 125], "weight": [121, 125, 135, 136, 612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 650, 659, 660, 662, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 949, 950, 953, 955, 956], "modif": 121, "decor": [121, 123, 125, 126, 127, 128], "group": [121, 125], "briefli": [121, 134], "cast": [121, 126, 213, 219, 222, 225, 749, 755, 758, 873, 890, 893, 898, 901, 915], "get_all_arrays_on_dev": 121, "nested_map": [121, 813], "index_nest": [121, 813], "implicit_backend": 122, "unless": [122, 127, 128, 148, 300, 470, 473, 538, 591], "__dict__": [122, 131, 133], "ivy_original_dict": [122, 131], "unmodifi": [122, 126], "moment": [122, 148, 612, 614, 617, 619, 621, 632, 634, 953, 954, 955], "fallback": 122, "freedom": [122, 873, 894, 897, 902, 905], "recommend": [122, 300, 456, 459, 460, 463, 491, 494, 873, 882, 885], "achiev": [123, 134, 136], "wrapper": [123, 124, 125, 126, 128, 129, 133], "logic": [123, 124, 126, 127, 133, 250, 286, 300, 452, 455, 456, 459, 460, 463, 906, 907, 910, 911, 914, 915], "topic": [123, 133], "tf": [124, 126, 127, 128, 129, 131, 136, 148, 915], "_data": [124, 133], "organiz": [124, 125], "bear": [124, 125, 126], "mind": [124, 125], "necessarili": [124, 125], "although": [124, 125], "underpin": [124, 125, 131], "programmat": [124, 125], "backup": [124, 125], "accident": [124, 125], "readabl": [124, 125, 129, 133, 134], "absent": [124, 125], "perk": [124, 125], "auto": [124, 125, 134], "throw": [124, 133], "imposs": 124, "coupl": [124, 125, 133, 135], "anywai": 124, "secondli": [124, 126], "easier": 124, "five": [125, 134], "decis": [125, 131, 133], "displai": [125, 134], "arbitrarili": [125, 134], "__repr__": 125, "control": [125, 126, 128, 133, 134, 147], "__getattr__": 125, "underli": [125, 300, 339, 342, 351, 354, 359, 362, 464, 467], "__contains__": 125, "__getstate__": 125, "__setstate__": 125, "unpickl": 125, "expand": [125, 538, 565, 749, 763, 766], "children": 125, "shallowest": 125, "deepest": 125, "67": [125, 300, 359, 362, 371, 374], "22": [125, 300, 359, 362, 663, 673, 675, 699, 701, 848, 852, 873, 874, 877], "25": [125, 300, 511, 514, 515, 518, 663, 673, 675, 682, 684, 733, 739, 742, 831, 832, 835, 873, 874, 877], "retain_grad": [125, 612, 623], "dy": [125, 612, 623], "dx": [125, 612, 623], "technic": [125, 128, 129, 148], "autograd": [125, 148], "grad": [125, 134, 135, 136, 915, 953, 957], "redund": 125, "num_head": [125, 650, 661, 937, 948], "mask": [125, 650, 661, 662], "to_q_fn": [125, 650, 661], "to_kv_fn": [125, 650, 661], "to_out_fn": [125, 128, 650, 661], "to_q_v": [125, 650, 661], "to_kv_v": [125, 650, 661], "to_out_v": [125, 650, 661], "measur": [125, 650, 661, 937, 948], "dot": [125, 650, 661, 662, 663, 718, 720, 724, 726, 937, 948], "product": [125, 300, 470, 473, 538, 556, 650, 661, 662, 663, 667, 669, 685, 688, 699, 701, 718, 720, 724, 726, 873, 874, 877, 890, 893, 937, 948], "implicitli": 125, "intuit": [125, 134, 135], "debug": [125, 134], "chronolog": 125, "had": [125, 128], "sequenti": [125, 135], "flow": [125, 147], "implic": 125, "slightli": [125, 131, 135], "eager": [125, 148], "int8": [126, 213, 234], "int16": [126, 213, 222, 225, 234, 873, 890, 893, 898, 901], "uint8": [126, 213, 222, 225, 234], "uint16": [126, 213, 235, 873, 890, 893, 898, 901], "uint32": [126, 213, 235, 873, 890, 893, 898, 901], "uint64": [126, 213, 235, 873, 890, 893, 898, 901], "bfloat16": [126, 213, 234], "float16": [126, 213, 235], "all_dtyp": 126, "all_numeric_dtyp": 126, "all_int_dtyp": 126, "all_float_dtyp": 126, "fall": [126, 130, 915, 949, 950, 953, 957], "valid": [126, 131, 213, 227, 650, 651, 652, 653, 654, 655, 656, 657, 749, 793, 796, 906, 907, 910, 911, 914, 937, 938, 939, 940, 941, 942, 943, 944], "invalid": [126, 663, 724, 726, 906, 907, 910, 911, 914], "thirdli": 126, "native_float32": 126, "importantli": [126, 133, 136, 147], "varieti": [126, 127], "conveni": [126, 127, 129, 132, 134, 135], "arguabl": [126, 127], "compound": 126, "overflow": [126, 300, 314, 317, 873, 898, 901], "arr": [126, 127, 831, 832, 835], "scalar": [126, 131, 136, 148, 174, 188, 190, 538, 591, 608, 611, 663, 727, 729], "settabl": [126, 127], "jnp": [126, 127, 128, 129, 136, 915], "jaxarrai": [126, 127, 128, 129], "mx": [126, 127, 128, 915], "nd": [126, 127, 128, 131, 136, 915], "deleg": 126, "as_n": [126, 213, 228, 229, 230, 231, 250, 269, 270, 291], "idx": [127, 133, 538, 544], "tpu": [127, 250, 272, 297], "aliv": [127, 250, 284, 288, 290, 538, 572, 590, 592], "amount": [127, 250, 296, 733, 734, 737, 739, 742, 744, 747], "dual": 127, "thrown": [127, 148, 538, 582], "rare": [127, 148], "program": 128, "strictli": 128, "ration": 128, "speak": 128, "subtli": 128, "ensure_in_backend": [128, 538, 582], "x_nativ": 128, "val_n": 128, "is_ivy_arrai": [128, 133, 538], "assign": [128, 133], "elif": 128, "irrespect": [128, 133, 213, 219], "inclus": [128, 174, 175, 836, 838, 839], "omit": [128, 129, 853, 854, 855, 859, 861], "unspecifi": [128, 300, 487, 490, 491, 494, 663, 676, 678, 749, 793, 796], "predominantli": [128, 147], "math": [128, 136, 915], "presenc": 128, "altern": [128, 134], "_wrap_fn": 128, "maxim": [128, 131], "inner": [128, 133, 663, 676, 678, 685, 688, 809, 810, 811, 812], "third": [128, 148, 663, 712, 714, 853, 854], "addition": [128, 129], "leverag": 128, "equival": [128, 134, 136, 174, 175, 300, 355, 358, 456, 459, 460, 463, 491, 494, 663, 693, 695, 702, 704, 709, 711, 727, 729], "input_arrai": 128, "adress": 129, "revisit": [129, 136], "dedic": [129, 133, 135, 612, 648, 926, 927], "__div__": 129, "dicat": 129, "futher": 129, "absenc": 129, "pep": 129, "484": 129, "annot": 129, "brittl": 129, "intend": [129, 873, 898, 901], "freeli": 129, "inde": [129, 148], "flexibl": 129, "original_typ": 129, "cumbersom": 129, "sound": 130, "higher": [130, 131, 136, 148, 612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642], "overview": [130, 147], "handler": [130, 132, 136, 915], "fledg": [131, 132], "syntact": [131, 136], "clip_by_valu": [131, 136], "clamp": [131, 136], "behavior": [131, 148, 300, 487, 490, 491, 494, 853, 854, 855, 859, 861], "fit": [131, 749, 775, 778], "construct": [131, 132, 135, 136, 749, 801, 804, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960], "num": [131, 174, 191, 192], "power_seq": 131, "okai": 131, "bound": 131, "resid": [131, 135], "edg": [131, 136, 749, 750, 753, 759, 762, 805, 808, 915], "larger": [131, 136, 213, 233, 749, 750, 753, 783, 786, 873, 894, 897, 902, 905], "ml_framework": [131, 136, 174, 175], "current_framework": [131, 136], "furthermor": 131, "concaten": [131, 134, 250, 279, 538, 565, 749, 755, 758, 915], "framework_handl": 131, "face": 131, "verbos": [131, 915, 963], "cprint": [131, 962], "framework_stack": 131, "_determine_framework_from_arg": 131, "valueerror": [131, 749, 789, 792], "get_framework": 131, "neither": [131, 300, 314, 317, 470, 473], "illustr": [131, 147], "un": [131, 213, 237], "nn": [131, 136, 174, 193, 195, 915], "init_h": [131, 650, 660], "init_c": [131, 650, 660], "kernel": [131, 148, 650, 660], "recurrent_kernel": [131, 650, 660], "bia": [131, 135, 650, 659, 660, 937, 938, 939, 940, 941, 942, 943, 944, 947], "recurrent_bia": [131, 650, 660], "x_shape": 131, "batch_shap": [131, 133, 136, 538, 591, 650, 660, 661, 662, 663, 730, 732, 836, 837, 937, 946], "timestep": [131, 650, 660, 937, 946], "input_channel": [131, 135, 937, 938, 939, 940, 941, 942, 943, 946, 947], "x_flat": 131, "wi": 131, "wi_x": 131, "wii_x": 131, "wif_x": 131, "wig_x": 131, "wio_x": 131, "recurr": [131, 650, 660], "wh": 131, "lstm": [131, 650, 660, 937], "ht": 131, "ct": 131, "hts_list": 131, "unrol": [131, 134, 650, 660], "wii_xt": 131, "wif_xt": 131, "wig_xt": 131, "wio_xt": 131, "zip": 131, "htm1": 131, "ctm1": 131, "wh_htm1": 131, "whi_htm1": 131, "whf_htm1": 131, "whg_htm1": 131, "who_htm1": 131, "ft": 131, "gt": 131, "ot": 131, "offici": 131, "reliabl": 131, "sacrific": 131, "hear": 131, "virtu": 131, "pure_ivi": 131, "reduce_mean": [131, 134, 135, 136, 915], "reduce_sum": [131, 915], "reduce_var": 131, "compile_graph": [131, 136], "pure_torch": 131, "cat": [131, 136], "backbon": [131, 134], "_layer": 131, "super": [131, 134, 135, 136], "clean": [131, 132, 134], "random_unifrom": 131, "unclean": 131, "wx": 131, "temp": 131, "torchscript": 131, "fn": [131, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 213, 234, 235, 250, 259, 260, 538, 544, 609, 813, 814, 819, 820, 821, 823, 824, 825, 918, 920], "example_input": [131, 171, 172], "static_argnum": [131, 171, 172], "static_argnam": [131, 171, 172], "jit": [131, 148], "frontend": 132, "primit": [132, 148], "hierarch": [132, 134, 135], "straight": [133, 915], "arraywithlinalg": 133, "arraywithlog": 133, "arraywithmath": 133, "arraywithmeta": 133, "arraywithreduct": 133, "is_native_arrai": [133, 538], "_shape": 133, "_size": 133, "functool": 133, "mul": 133, "_dtype": 133, "_devic": 133, "_dev_str": 133, "_pre_repr": 133, "_post_repr": 133, "ndim": [133, 663, 705, 707, 712, 714], "mt": 133, "answer": [133, 148], "consol": 133, "typeerror": 133, "immut": 133, "behav": 133, "claim": 133, "truli": 133, "_native_wrapp": 133, "attributeerror": 133, "genuin": 133, "some_method": 133, "similarli": [133, 174, 193, 195], "rewritten": 133, "__pow__": 133, "strang": 133, "power": [133, 134, 135, 300, 355, 358, 388, 391, 487, 490, 538, 573, 596, 603, 663, 692, 928], "enforc": 133, "notic": 133, "appear": [133, 749, 763, 766], "invers": [133, 147, 300, 306, 309, 310, 313, 319, 322, 323, 326, 327, 330, 331, 334, 335, 338, 663, 682, 684, 702, 704], "_wrap_method": 133, "func_wrapp": [133, 149, 150, 151, 152, 153, 154, 155, 156, 157], "__name__": 133, "non_wrapped_method": 133, "_method_wrap": 133, "native_arg": 133, "native_kwarg": 133, "inner_fn": 133, "whist": 133, "unwrap": 133, "transit": 133, "needlessli": 133, "randn": 133, "_unwrap_method": 133, "method_wrap": 133, "compartment": 133, "public": [133, 538, 554], "newshap": 133, "new_shap": 133, "tidi": 133, "shorter": 133, "crystal": 133, "41": [133, 300, 359, 362, 511, 514, 663, 664, 666, 873, 898, 901], "enough": [133, 134, 135], "ton": 134, "ado": [134, 135], "incred": [134, 148], "hash": 134, "soup": 134, "walk": [134, 135], "dct": 134, "cnt": 134, "combo": [134, 915, 921], "hold": [134, 538, 594, 595], "1000": [134, 300, 511, 514], "uda": 134, "3333": 134, "6667": 134, "178": 134, "new_weight": 134, "0600": 134, "3100": 134, "2400": 134, "6900": 134, "delimit": 134, "autocomplet": 134, "midwai": 134, "agent": 134, "total_spe": 134, "total_height": 134, "total_width": 134, "ag": 134, "tot": 134, "total_": 134, "total_h": 134, "batch_siz": [134, 650, 651, 652, 653, 654, 655, 656, 657, 836, 837], "dir": 134, "adam": [134, 135, 136, 612, 614, 617, 619, 621, 632, 634, 915, 953, 955], "cnt0": 134, "cnt1": 134, "diff_0": 134, "diff_1": 134, "config0": 134, "config1": 134, "Not": [134, 135, 148, 173], "decod": 134, "l0": 134, "l1": [134, 663, 727, 729], "depth": [134, 135, 136, 147, 250, 274, 278, 282, 538, 576, 591, 813, 825, 949, 950], "clearer": 134, "truncat": 134, "decoder__l0": 134, "decoder__l1": 134, "encoder__l0": 134, "encoder__l1": 134, "height": 134, "l0__b": 134, "l0__w": 134, "l1__b": 134, "l1__w": 134, "printabl": 134, "obviou": 134, "foresight": 134, "untidili": 134, "update_ag": 134, "normalize_img": 134, "img": 134, "img_max": 134, "reduce_max": [134, 915], "img_min": 134, "reduce_min": [134, 915], "img_rang": 134, "agent_posit": 134, "agent_veloc": 134, "agent_cam_front_rgb": 134, "agent_cam_front_depth": 134, "agent_cam_rear_rgb": 134, "agent_cam_rear_depth": 134, "agent_cam_lidar": 134, "cleaner": 134, "camera": 134, "front_rgb": 134, "front_depth": 134, "rear_rgb": 134, "rear_depth": 134, "lidar": 134, "rgb": 134, "rear": 134, "veloc": 134, "cam": 134, "cam_max": 134, "cam_min": 134, "cam_rang": 134, "Of": 134, "ideal": 134, "perman": 134, "afterward": 134, "thread": 134, "incorpor": 134, "pretti": 134, "straightforward": 134, "dataload": [134, 146, 915], "_cnt": 134, "img_": 134, "_dataset_s": 134, "_batch_siz": 134, "_count": [134, 135], "__next__": 134, "filenam": 134, "img_fnam": 134, "fname": 134, "loaded_img": 134, "cv2": 134, "imread": 134, "loader": [134, 148], "batch_slic": 134, "model": [134, 135, 915], "mymodel": [134, 915], "linear0": [134, 135, 915], "linear1": [134, 135, 915], "x_in": [134, 135, 136, 915], "001": [134, 135, 612, 614, 617, 831, 832, 835], "loss_fn": [134, 135, 136, 915], "0145": 134, "grad_fn": 134, "addbackward0": 134, "_create_vari": 135, "output_channel": [135, 937, 938, 939, 940, 941, 942, 943, 946, 947], "with_bia": [135, 937, 947], "_input_channel": 135, "_output_channel": 135, "_w_shape": 135, "_b_shape": 135, "_with_bia": 135, "8979": 135, "3198": 135, "0196": 135, "3126": 135, "3717": 135, "9687": 135, "6958": 135, "5122": 135, "3902": 135, "8800": 135, "5613": 135, "1982": 135, "nightmar": 135, "overcom": 135, "fc": 135, "9563": 135, "impact": 135, "v0": 135, "v1": 135, "6440": 135, "key0": 135, "1823": 135, "8075": 135, "linear3": 135, "v2": 135, "2346": 135, "counter": 135, "hidden": [135, 650, 660, 937, 946], "fed": [135, 250, 294], "1300": 135, "decoupl": 135, "scheme": 135, "weight_initi": [135, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947], "glorotuniform": [135, 928, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947], "bias_initi": [135, 937, 938, 939, 940, 941, 942, 943, 944, 947], "_w_init": 135, "_b_init": 135, "create_vari": [135, 928], "var_shap": [135, 928], "fan_out": [135, 928], "fan_in": [135, 928], "fan_mod": [135, 928], "fan_sum": 135, "slight": 135, "misnom": 135, "saw": 135, "vanilla": [135, 809, 811], "descent": [135, 612, 624, 626, 953, 958], "lar": [135, 612, 632, 634, 636, 638, 953], "lamb": [135, 612, 632, 634, 953], "compile_on_next_step": [135, 949, 950, 953, 954, 955, 956, 957, 958], "_beta1": 135, "_beta2": 135, "_epsilon": 135, "_mw": 135, "_vw": 135, "_first_pass": 135, "_should_compil": 135, "_step": [135, 953, 957], "new_v": 135, "_lr": 135, "isinst": [135, 136, 538, 606], "_inplac": 135, "_stop_gradi": 135, "set_stat": [135, 953, 954, 955, 956, 957, 958], "pre": [136, 148, 250], "captur": 136, "sparse_funct": 136, "num_class": [136, 836, 837], "num_dim": 136, "new_axi": 136, "_linear": 136, "to_backend": 136, "jax_graph": 136, "learnabl": [136, 831, 832, 835, 951, 952], "to_ivy_modul": [136, 926], "thinli": 136, "whilst": 136, "to_haiku_modul": 136, "hk": 136, "loss_fn_t": 136, "transform": [136, 147, 650, 658, 659], "without_apply_rng": 136, "rng": 136, "prngkei": 136, "init": 136, "update_rul": 136, "01": [136, 300, 495, 498], "tree_multimap": 136, "mechan": [146, 148, 915], "vision": [146, 915], "robot": [146, 915], "focus": 147, "field": [147, 663, 676, 678, 705, 707, 712, 714, 853, 854, 855, 859], "perfect": 147, "3d": [147, 937, 942, 943], "differenti": 147, "demo": [147, 915], "orient": 147, "pose": 147, "euler": [147, 173], "quaternion": 147, "rotat": 147, "matric": [147, 174, 193, 195, 203, 205, 206, 208, 650, 659, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 692, 693, 695, 696, 698, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723], "angl": [147, 300, 331, 334, 371, 374, 507, 510, 529, 533], "ivy_mech": 147, "target_facing_rotation_matrix": 147, "polar_to_cartesian_coord": 147, "ordin": [147, 663, 709, 711], "warp": 147, "optic": 147, "voxel": 147, "ivy_vis": 147, "coords_to_voxel_grid": 147, "render_pixel_coord": 147, "neural": [147, 650, 915, 923, 937], "radianc": 147, "nerf": 147, "trajectori": 147, "motion": 147, "plan": [147, 915], "mobil": 147, "ivy_robot": 147, "sample_spline_path": 147, "rigidmobil": 147, "sample_bodi": 147, "drone": 147, "sample_link": 147, "openai": 147, "swimmer": 147, "cumul": [147, 538, 556, 557], "reward": 147, "supervis": 147, "reinforc": 147, "door": [147, 148], "intersect": 147, "cartpol": 147, "mountain_car": 147, "pendulum": 147, "reacher": 147, "polici": 147, "condit": [147, 171, 172, 813, 823, 824, 848, 852], "learnt": 147, "ture": 147, "ntm": 147, "egospher": 147, "spatial": 147, "esm": 147, "ivy_memori": 147, "egocentr": 147, "room": 147, "inspir": 147, "doubt": 148, "grate": 148, "put": 148, "probe": 148, "undergo": 148, "remark": 148, "surpris": 148, "backward": [148, 300, 491, 494, 663, 724, 726, 906, 907, 910, 911, 914], "lock": 148, "contunu": 148, "minor": 148, "xla": 148, "buffer": 148, "kind": [148, 213, 233, 236, 300, 487, 490, 873, 890, 893, 898, 901], "gold": 148, "dex": 148, "phase": 148, "lax": 148, "scan": 148, "tricki": 148, "predictor": 148, "tight": 148, "driver": 148, "schedul": 148, "dispatch": 148, "Will": 148, "ast": 148, "dynamic": 148, "cond": 148, "jacobian": 148, "checkpoint": 148, "autodiff": 148, "shine": 148, "merci": 148, "superset": 148, "cluster": 148, "compet": 148, "paradigm": 148, "parallelis": [148, 250, 259, 260], "spmd": 148, "mixtur": [148, 612, 614, 617], "expert": 148, "sophist": 148, "depart": 148, "routin": 148, "hundr": 148, "thousand": 148, "deepli": [148, 813, 815], "broadli": 148, "heavili": 148, "supplementari": 148, "Is": 148, "reusabl": 148, "fanci": 148, "fusion": 148, "lose": 148, "vmap": 148, "pmap": 148, "overhead": 148, "ineffici": 148, "eventu": 148, "supplement": 148, "backdoor": 148, "callback": 148, "record": 148, "metric": 148, "somewhat": 148, "outsourc": 148, "inputs_to_ivy_arrai": 149, "gaussian": [159, 160], "leaki": [159, 160, 161], "alpha": [159, 161], "rectifi": [159, 161, 162], "slope": [159, 161], "39": [159, 161, 300, 388, 391, 612, 614, 617, 663, 699, 701, 873, 874, 877], "85": [159, 161, 300, 359, 362], "48": [159, 161, 300, 511, 514, 612, 614, 617, 663, 699, 701, 873, 874, 877], "88": [159, 161, 300, 359, 362, 663, 699, 701, 873, 874, 877], "269": [159, 163], "731": [159, 163], "881": [159, 163], "214": [159, 163], "978": [159, 163], "891": [159, 163], "422": [159, 164], "155": [159, 164], "0768": [159, 164], "231": [159, 164], "693": [159, 164, 733, 744, 747], "49": [159, 164, 300, 511, 514, 873, 874, 877], "147": [159, 164], "363": [159, 164], "3461": [159, 165, 168], "6491": [159, 165, 168], "535": [159, 165, 168], "hyperbol": [159, 170, 300, 310, 313, 323, 326, 335, 338, 371, 374, 507, 510, 529, 533], "55": [159, 170, 650, 656, 663, 699, 701, 873, 874, 877], "501": [159, 170], "array_method": [165, 166, 176, 177, 180, 181, 184, 185, 188, 189, 193, 194, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 222, 223, 301, 302, 306, 307, 310, 311, 314, 315, 319, 320, 323, 324, 327, 328, 331, 332, 335, 336, 339, 340, 343, 344, 347, 348, 351, 352, 355, 356, 359, 360, 363, 364, 367, 368, 371, 372, 375, 376, 380, 381, 384, 385, 388, 389, 392, 393, 396, 397, 400, 401, 404, 405, 408, 409, 412, 413, 416, 417, 420, 421, 424, 425, 428, 429, 432, 433, 436, 437, 440, 441, 444, 445, 448, 449, 452, 453, 456, 457, 460, 461, 464, 465, 470, 471, 475, 476, 479, 480, 483, 484, 487, 488, 491, 492, 495, 496, 499, 500, 503, 504, 507, 508, 511, 512, 515, 516, 519, 521, 524, 526, 529, 531, 534, 535, 539, 540, 567, 568, 614, 615, 664, 665, 667, 668, 670, 671, 673, 674, 676, 677, 679, 680, 682, 683, 685, 686, 689, 690, 693, 694, 696, 697, 699, 700, 702, 703, 705, 706, 709, 710, 712, 713, 715, 716, 718, 719, 721, 722, 724, 725, 727, 728, 730, 731, 734, 735, 739, 740, 744, 745, 750, 751, 755, 756, 759, 760, 763, 764, 767, 768, 771, 772, 775, 776, 779, 780, 783, 784, 789, 790, 793, 794, 797, 798, 801, 802, 805, 806, 832, 833, 855, 857, 863, 864, 868, 869, 874, 875, 878, 879, 882, 883, 886, 887, 890, 891, 894, 895, 898, 899, 902, 903, 907, 908, 911, 912], "container_method": [165, 167, 169, 222, 224, 226, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 470, 472, 474, 475, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 513, 515, 517, 519, 520, 522, 524, 525, 527, 529, 530, 532, 534, 536, 539, 541, 543, 551, 552, 567, 569, 571, 614, 616, 618, 619, 620, 622, 624, 625, 627, 628, 629, 631, 632, 633, 635, 636, 637, 639, 640, 641, 643, 685, 687, 734, 736, 738, 739, 741, 743, 744, 746, 748, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 832, 834, 838, 840, 842, 843, 845, 855, 856, 858, 863, 865, 867, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 907, 909, 911, 913], "faster": [171, 172], "invoc": [171, 172], "718281828459045": 173, "newaxi": 173, "alia": 173, "pi": 173, "141592653589793": 173, "mathemat": [173, 300, 314, 317, 331, 334, 392, 395, 470, 473, 663, 727, 729], "half": [174, 175, 836, 838, 839, 842, 844], "chosen": [174, 175, 300, 331, 334, 848, 852], "distanc": [174, 175], "adjac": [174, 175], "creation_funct": [174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212], "interpret": [174, 176, 178, 196, 198], "uniniti": [174, 179, 180, 182], "n_row": [174, 183], "n_col": [174, 183], "elsewher": [174, 183, 848, 852], "row": [174, 183, 663, 709, 711, 712, 714, 836, 837, 848, 851], "column": [174, 183, 663, 676, 678, 705, 707, 709, 711, 712, 714], "__dlpack__": [174, 184, 186, 250, 295], "interchang": [174, 184, 186, 749, 797, 800], "endpoint": [174, 191], "coordin": [174, 193, 195, 300, 331, 334], "cartesian": [174, 193, 195], "ij": [174, 193, 195, 873, 874, 877], "rank": [174, 193, 195, 538, 610, 663, 667, 669, 693, 695, 705, 707, 709, 711, 721, 723, 724, 726, 727, 729, 749, 759, 762, 763, 766, 793, 796, 805, 808, 848, 851, 906, 907, 910, 911, 914], "ni": [174, 193, 195], "xi": [174, 193, 195], "n1": [174, 193, 195], "n2": [174, 193, 195], "n3": [174, 193, 195], "accordingli": [174, 193, 195, 300, 392, 395, 663, 727, 729, 848, 850, 853, 854, 855, 859, 861, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "xv": [174, 193, 195], "yv": [174, 193, 195], "triangular": [174, 203, 205, 206, 208, 663, 664, 666, 705, 707], "innermost": [174, 203, 205, 206, 208, 663, 664, 666, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 693, 695, 696, 698, 702, 704, 705, 707, 709, 711, 712, 714, 715, 717, 721, 723], "mxn": [174, 203, 205, 206, 208, 663, 673, 675, 693, 695, 696, 698, 702, 704, 705, 707, 715, 717, 721, 723], "defaultdtyp": [213, 214], "defaultfloatdtyp": [213, 215], "float_dtyp": [213, 229, 243], "defaultintdtyp": [213, 216], "dtype_in": [213, 217, 218, 232, 237, 238, 239, 249], "incompat": [213, 221], "occur": [213, 222, 225, 848, 849, 850, 853, 854, 855, 859, 861], "data_type_funct": [213, 222, 225], "closest": [213, 227, 300, 363, 366, 396, 399, 400, 403, 495, 498, 534, 537], "floatdtyp": [213, 229], "int_dtyp": [213, 230, 244], "intdtyp": [213, 230], "followng": [213, 233], "occupi": [213, 233, 236, 538, 594, 595], "ep": [213, 233, 663, 693, 695, 702, 704], "smallest_norm": [213, 233], "precis": [213, 233, 300, 470, 473, 511, 514], "encapsul": [213, 236], "type1": [213, 240], "type2": [213, 240], "arrays_and_dtyp": [213, 241], "ret1": [213, 245], "ret2": [213, 245], "noinspect": [214, 215, 216, 251, 613], "pyshadowingnam": [214, 215, 216, 251, 613], "defaultdevic": [250, 251], "__enter__": 250, "_dev": 250, "initialis": 250, "devcloneditem": [250, 272], "multidevitem": [250, 252, 255], "devclonedit": 250, "multidevit": [250, 253, 256, 259, 260, 264], "devclonednest": 250, "multidevnest": [250, 254, 257], "devdistitem": 250, "devdistit": 250, "devdistnest": 250, "devmanag": [250, 258], "dev_mapp": 250, "da_dim_s": 250, "safety_factor": 250, "min_dev_dim_s": 250, "max_dev_dim_step_ratio": 250, "min_unit_dev_tune_step": 250, "min_sf_tune_step": 250, "starting_split_factor": 250, "max_split_factor_step_s": 250, "tune_dev_alloc": 250, "tune_dev_split": 250, "mapper": [250, 259, 260], "receivess": 250, "ratio": [250, 612, 632, 634, 953, 955], "safe": [250, 259], "oom": 250, "tune": 250, "da_tune_step": 250, "ds_tune_step": 250, "to_clon": 250, "to_distribut": 250, "multidevic": [250, 259], "parallel": [250, 259, 260], "mutlidevic": [250, 259], "repeated_config_check": 250, "tune_step": 250, "devmapp": [250, 260], "ret_fn": [250, 259, 260], "queue_class": [250, 259, 260], "worker_class": [250, 259, 260], "worker": [250, 259, 260], "used_dev": [250, 259], "sf": [250, 259], "devmappermultiproc": 250, "multidev": [250, 261, 262, 263, 282], "profil": 250, "save_dir": [250, 265], "deviceic": [250, 271], "spread": [250, 282], "139740789224448": [250, 284], "physic": [250, 286], "x3": [250, 288], "x4": [250, 288], "process_specif": [250, 289, 299], "percentag": [250, 289], "ram": [250, 289, 296, 299], "alon": [250, 289, 299], "attr_onli": [250, 290], "chunk": [250, 292, 293, 294], "max_chunk_s": [250, 294], "chunk_siz": [250, 294], "input_ax": [250, 294], "output_ax": [250, 294], "feed": [250, 294], "fist": [250, 294], "stream": [250, 295], "caveat": [250, 295], "portabl": [250, 295, 915], "gb": [250, 296, 299], "reset": [250, 298], "magnitud": [300, 301, 304, 314, 317, 470, 473, 663, 712, 714, 715, 717], "princip": [300, 306, 309, 319, 322, 327, 330], "cosin": [300, 306, 309, 310, 313, 367, 370, 371, 374], "x1_i": [300, 314, 317, 331, 334, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 380, 383, 400, 403, 404, 407, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 519, 523], "x2_i": [300, 314, 317, 331, 334, 339, 342, 347, 350, 351, 354, 355, 358, 359, 362, 375, 378, 380, 383, 400, 403, 404, 407, 408, 411, 424, 427, 428, 431, 448, 451, 452, 455, 460, 463, 464, 467, 470, 473, 479, 482, 487, 490, 491, 494, 519, 523], "finit": [300, 314, 317, 331, 334, 412, 415, 470, 473, 487, 490, 491, 494], "nor": [300, 314, 317, 470, 473], "nearest": [300, 314, 317, 470, 473, 495, 498], "2019": [300, 314, 317, 392, 395, 470, 473], "commut": [300, 314, 317], "sine": [300, 319, 322, 323, 326, 503, 506, 507, 510], "57": [300, 319, 322, 359, 362, 371, 374], "524": [300, 319, 322], "644": [300, 319, 322], "201": [300, 319, 322, 495, 498], "305": [300, 319, 322], "412": [300, 319, 322], "quotient": [300, 331, 334], "notat": [300, 331, 334, 873, 874, 877], "denot": [300, 331, 334], "quadrant": [300, 331, 334], "3\u03c0": [300, 331, 334], "549": [300, 335, 338], "bitwis": [300, 339, 342, 351, 354, 359, 362, 464, 467], "AND": [300, 339, 342, 452, 455, 906, 907, 910], "binari": [300, 339, 342, 351, 354, 359, 362, 464, 467, 733, 734, 737], "invert": [300, 343, 346], "arithmet": [300, 355, 358, 873, 882, 885], "propag": [300, 355, 358, 873, 878, 881, 882, 885, 886, 889, 894, 897, 898, 901, 902, 905], "thu": [300, 355, 358, 487, 490, 491, 494, 663, 676, 678], "lh": [300, 355, 358], "rh": [300, 355, 358], "xor": [300, 359, 362, 464, 467], "78": [300, 359, 362, 663, 699, 701, 873, 874, 877], "91": [300, 359, 362, 663, 699, 701, 873, 874, 877], "23": [300, 359, 362, 650, 656, 663, 673, 675, 848, 852], "66": [300, 359, 362, 663, 699, 701, 873, 874, 877], "77": [300, 359, 362, 663, 699, 701, 873, 874, 877], "79": [300, 359, 362], "89": [300, 359, 362, 663, 718, 720, 873, 898, 901], "98": [300, 359, 362, 663, 699, 701, 848, 852, 873, 874, 877], "26": [300, 359, 362, 612, 614, 617, 650, 657, 663, 673, 675, 699, 701, 718, 720, 873, 874, 877], "21": [300, 359, 362, 538, 556, 663, 673, 675, 699, 701, 733, 744, 747, 873, 874, 877], "34": [300, 359, 362, 511, 514], "24": [300, 359, 362, 511, 514, 538, 556, 612, 614, 617, 663, 673, 675, 699, 701, 873, 874, 877], "51": [300, 359, 362], "27": [300, 359, 362, 371, 374, 511, 514, 650, 662, 663, 699, 701, 873, 874, 877], "74": [300, 359, 362], "59": [300, 359, 362], "416": [300, 367, 370], "122": [300, 371, 374], "368": [300, 371, 374], "670": [300, 371, 374], "202": [300, 371, 374, 495, 498], "548": [300, 371, 374], "1490": [300, 371, 374], "dividend": [300, 375, 378, 491, 494], "divisor": [300, 375, 378, 491, 494, 612, 614, 617, 619, 621, 632, 634, 873, 894, 897, 902, 905, 953, 954, 955], "gauss": [300, 384, 387], "exponenti": [300, 384, 387, 388, 391, 448, 451, 487, 490], "logarithm": [300, 388, 391, 432, 435, 436, 439, 440, 443, 444, 447, 448, 451, 663, 708], "72": [300, 388, 391, 612, 614, 617, 663, 699, 701, 873, 874, 877], "fdlibm": [300, 392, 395], "compliant": [300, 392, 395, 456, 459, 460, 463, 873, 878, 881, 882, 885, 886, 889], "greatest": [300, 396, 399, 400, 403], "out_i": [300, 412, 415, 416, 419, 420, 423], "threshold": [300, 468, 469], "exce": [300, 469], "y_i": [300, 475, 478], "expon": [300, 487, 490, 538, 603], "versu": [300, 487, 490], "odd": [300, 487, 490], "modulu": [300, 491, 494], "primarili": [300, 491, 494], "5654": [300, 495, 498], "034": [300, 495, 498], "433": [300, 495, 498], "343": [300, 495, 498], "44": [300, 495, 498, 511, 514, 515, 518, 663, 699, 701, 848, 852, 873, 874, 877], "30": [300, 495, 498, 663, 699, 701, 873, 874, 877, 928, 934], "81": [300, 495, 498, 515, 518, 873, 874, 877], "527": [300, 495, 498], "301": [300, 495, 498], "indistinguish": [300, 511, 514], "infinit": [300, 511, 514], "83": [300, 511, 514], "32455532": [300, 511, 514], "89897949": [300, 511, 514], "50": [300, 511, 514, 663, 699, 701, 848, 851, 873, 874, 877], "31": [300, 511, 514], "169": [300, 511, 514], "47": [300, 511, 514], "73": [300, 511, 514, 663, 664, 666, 831, 832, 835], "93": [300, 511, 514], "35": [300, 511, 514, 650, 662, 663, 667, 669, 848, 852, 873, 874, 877], "09": [300, 515, 518, 650, 662], "61": [300, 515, 518, 733, 734, 737], "546": [300, 524, 528], "842": [300, 524, 528], "916": [300, 524, 528, 733, 734, 737], "996": [300, 524, 528], "328": [300, 524, 528], "real": [300, 529, 533], "462": [300, 529, 533], "604": [300, 529, 533], "984": [300, 529, 533], "997": [300, 529, 533, 831, 832, 835], "decim": [300, 534, 537], "inspect": [538, 544, 919, 920], "downscal": [538, 550, 551, 553], "60": [538, 556, 663, 699, 701, 873, 874, 877], "default_v": [538, 559], "catch_except": [538, 559], "rev": [538, 559], "with_cal": [538, 559], "arrang": [538, 560], "123": [538, 563], "mod": [538, 564], "max_freq": [538, 565], "num_band": [538, 565], "pad": [538, 565, 650, 651, 652, 653, 654, 655, 656, 657, 749, 759, 762, 805, 808, 937, 938, 939, 940, 941, 942, 943, 944], "fourier": [538, 565], "band": [538, 565], "linearli": [538, 565, 663, 709, 711], "oppos": [538, 565], "geometr": [538, 565], "seen_set": [538, 576], "local_set": [538, 576], "decrement": [538, 580], "is_arrai": 538, "allow_dupl": [538, 588], "forkserv": [538, 589], "spawn": [538, 589], "hot": [538, 591], "scatter": [538, 591, 594, 595], "tmp_dr": [538, 599], "temporari": [538, 599], "min_denomin": [538, 602], "stabil": [538, 602, 603, 862, 863, 866, 868, 871], "_min_denomin": [538, 602], "min_bas": [538, 603], "_min_bas": [538, 603, 831, 832, 835, 951, 952], "100000023841858": [538, 606], "200000047683716": [538, 606], "299999952316284": [538, 606], "400000095367432": [538, 606], "599999904632568": [538, 606], "101": [538, 607], "unpack": [538, 610], "gradienttrack": [612, 613], "delta": [612, 614, 617], "cost": [612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 809, 810, 811, 812], "ws": [612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642], "en": [612, 614, 617, 619, 621], "wikipedia": [612, 614, 617, 619, 621], "wiki": [612, 614, 617, 619, 621], "stochastic_gradient_desc": [612, 614, 617, 619, 621], "dc": [612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642], "dw": [612, 614, 617, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642], "averag": [612, 614, 617, 619, 621, 632, 634, 809, 810, 811], "forget": [612, 614, 617, 619, 621, 632, 634, 953, 954, 955], "004": [612, 614, 617], "009": [612, 614, 617], "86": [612, 614, 617], "28": [612, 614, 617, 650, 653, 656, 657, 663, 699, 701, 873, 874, 877], "45": [612, 614, 617, 663, 699, 701, 749, 788, 831, 832, 835, 873, 874, 877], "0125": [612, 614, 617], "601": [612, 614, 617], "581": [612, 614, 617], "025": [612, 614, 617], "992": [612, 614, 617], "209": [612, 614, 617, 853, 854], "271": [612, 614, 617], "0717": [612, 614, 617], "142": [612, 614, 617], "182": [612, 614, 617], "624": [612, 614, 617, 836, 842, 844], "06": [612, 614, 617], "02": [612, 614, 617], "744": [612, 614, 617], "626": [612, 614, 617], "65": [612, 614, 617, 663, 699, 701, 873, 874, 877], "024": [612, 614, 617], "096": [612, 614, 617], "216": [612, 614, 617], "384": [612, 614, 617], "rate": [612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642, 809, 810, 811, 812, 937, 948, 953, 954, 955, 956, 957, 958], "ws_new": [612, 619, 621, 624, 626, 632, 634, 636, 638, 640, 642], "retain": [612, 623], "trust": [612, 632, 634, 953, 955], "decai": [612, 632, 634, 636, 638, 953, 955, 956], "layerwis": [612, 636, 638, 953, 956], "stride": [650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "data_format": [650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "nwc": [650, 651, 652, 937, 938, 939], "dilat": [650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "convolut": [650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "d_in": [650, 651, 652, 653, 654, 655, 656], "fw": [650, 651, 652, 653, 654, 655, 656, 657], "d_out": [650, 651, 652, 653, 654, 655, 656], "slide": [650, 651, 652, 653, 654, 655, 656, 657, 937, 938, 939, 940, 941, 942, 943, 944], "ncw": [650, 651, 652, 937, 938, 939], "wio": [650, 651], "output_shap": [650, 652, 654, 656, 937, 939, 941, 943], "nhwc": [650, 653, 654, 657, 937, 940, 941, 944], "fh": [650, 653, 654, 655, 656, 657], "nchw": [650, 653, 654, 657, 937, 940, 941, 944], "hwio": [650, 653], "unequ": [650, 653], "unsqueez": [650, 653, 657], "ndhwc": [650, 655, 656, 937, 942, 943], "volum": [650, 655], "fd": [650, 655, 656], "ncdhw": [650, 655, 656, 937, 942, 943], "dhwio": [650, 655], "256": [650, 656], "258": [650, 656], "128": [650, 656, 663, 699, 701], "depthwis": [650, 657, 937, 944], "333": [650, 657], "inp": [650, 657], "prob": [650, 658, 836, 837, 937, 945], "randomli": [650, 658, 937, 945], "bernoulli": [650, 658], "out_featur": [650, 658, 659], "incom": [650, 659], "outer_batch_shap": [650, 659], "inner_batch_shap": [650, 659], "in_featur": [650, 659], "cell": [650, 660, 937, 946], "num_queri": [650, 661, 662], "x_feat_dim": [650, 661], "num_kei": [650, 661, 662], "cont_feat_dim": [650, 661], "numhead": [650, 661], "feat_dim": [650, 661, 662], "out_feat_dim": [650, 661], "score": [650, 662], "04": [650, 662], "03": [650, 662, 831, 832, 835], "08": [650, 662], "decomposit": [663, 664, 666, 705, 707, 712, 714], "symmetr": [663, 664, 666, 676, 678, 679, 681, 730, 732], "u": [663, 664, 666, 712, 714], "577": [663, 664, 666], "707": [663, 664, 666], "vif": [663, 667, 669], "92": [663, 670, 672], "293": [663, 670, 672], "46997": [663, 670, 672], "eigendecomposit": [663, 676, 678], "qlq\u1d40": [663, 676, 678], "orthogon": [663, 676, 678], "eig": [663, 676, 678], "eigenvalu": [663, 676, 678, 679, 681], "eigenvector": [663, 676, 678], "75": [663, 682, 684, 699, 701], "prepend": [663, 685, 688], "singular": [663, 693, 695, 702, 704, 712, 714, 715, 717], "toler": [663, 693, 695, 702, 704], "largest_singular_valu": [663, 693, 695, 702, 704], "array_lik": [663, 699, 701], "33": [663, 699, 701, 831, 832, 835, 873, 874, 877], "36": [663, 699, 701, 873, 874, 877], "84": [663, 699, 701, 873, 874, 877], "105": [663, 699, 701, 733, 734, 737], "112": [663, 699, 701, 873, 874, 877], "104": [663, 699, 701, 873, 874, 877], "120": [663, 699, 701], "moor": [663, 702, 704], "penros": [663, 702, 704], "pseudo": [663, 702, 704], "orthonorm": [663, 705, 707, 712, 714], "2d": [663, 708, 937, 940, 941, 944], "logdet": [663, 708], "coeffici": [663, 709, 711], "usvh": [663, 712, 714], "vh": [663, 712, 714], "hermitian": [663, 712, 714], "et": [663, 712, 714], "cetera": [663, 712, 714], "adjoint": [663, 712, 714], "reconstruct": [663, 712, 714, 853, 854, 860], "reconstructed_x": [663, 712, 714], "contract": [663, 718, 720, 873, 874, 877], "doubl": [663, 718, 720], "singleton": [663, 727, 729, 749, 789, 792, 848, 850, 873, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 901, 902, 905, 906, 907, 910, 911, 914], "liter": [663, 727, 729], "manhattan": [663, 727, 729], "l2": [663, 727, 729], "euclidean": [663, 727, 729], "mathbf": [663, 730, 732], "mathbb": [663, 730, 732], "skew": [663, 730, 732], "entropi": [733, 734, 737, 739, 742, 744, 747], "predict": [733, 734, 737, 739, 742, 744, 747], "smooth": [733, 734, 737, 739, 742, 744, 747], "223": [733, 734, 737], "357": [733, 734, 737, 744, 747], "511": [733, 734, 737], "discret": [733, 739, 742], "3862944": [733, 739, 742], "35667497": [733, 739, 742], "spars": [733, 744, 747], "logit": [733, 744, 747], "793291": [733, 744, 747], "512926": [733, 744, 747], "before_1": [749, 759, 762, 805, 808], "after_1": [749, 759, 762, 805, 808], "before_n": [749, 759, 762, 805, 808], "after_n": [749, 759, 762, 805, 808], "manipulation_funct": [749, 763, 766], "reorder": [749, 767, 770], "permut": [749, 771, 774, 797, 800], "repetit": [749, 775, 778, 801, 804], "restor": [749, 783, 786], "famili": [749, 793, 796], "intxx": [749, 793, 796], "floatxx": [749, 793, 796], "fomaml_step": 809, "inner_cost_fn": [809, 810, 811], "outer_cost_fn": [809, 810, 811], "inner_grad_step": [809, 810, 811, 812], "inner_learning_r": [809, 810, 811, 812], "inner_optimization_step": [809, 810, 811, 812], "inner_batch_fn": [809, 810, 811], "outer_batch_fn": [809, 810, 811], "average_across_step": [809, 810, 811], "inner_v": [809, 810, 811], "keep_inner_v": [809, 810, 811], "outer_v": [809, 810, 811], "keep_outer_v": [809, 810, 811], "return_inner_v": [809, 810, 811, 812], "num_task": [809, 810, 811, 812], "maml": [809, 810, 811], "recev": [809, 810, 811], "0x7f312a6921f0": [809, 810, 811, 812], "maml_step": 809, "rece": [809, 811], "reptile_step": 809, "cost_fn": [809, 812], "reptil": [809, 812], "receivng": [809, 812], "all_nested_indic": 813, "include_nest": [813, 814], "_index": [813, 814, 824], "_base": [813, 814, 823, 824], "copy_nest": 813, "to_mut": [813, 815, 825], "mutabl": [813, 815, 825], "insert_into_nest_at_index": 813, "insert_into_nest_at_indic": 813, "map_nest_at_index": 813, "map_nest_at_indic": 813, "multi_index_nest": 813, "nested_ani": 813, "check_nest": [813, 823, 824], "conditon": [813, 823, 824], "nested_indices_wher": 813, "stop_after_n_found": [813, 824], "_depth": [813, 825], "_tuple_check_fn": [813, 825], "_list_check_fn": [813, 825], "_dict_check_fn": [813, 825], "nested_multi_map": 813, "nest0": [813, 826], "ivy_arrai": [813, 826], "funciton": [813, 826], "prune_nest_at_index": 813, "prune_nest_at_indic": 813, "set_nest_at_index": 813, "set_nest_at_indic": 813, "mini": [831, 832, 835, 951, 952], "gamma": [831, 832, 835], "beta": [831, 832, 835], "0976": [831, 832, 835], "3452": [831, 832, 835], "2740": [831, 832, 835], "1047": [831, 832, 835], "5886": [831, 832, 835], "2732": [831, 832, 835], "7696": [831, 832, 835], "7024": [831, 832, 835], "2518": [831, 832, 835], "58": [831, 832, 835, 853, 854], "283": [831, 832, 835], "585": [831, 832, 835], "909": [831, 832, 835], "628": [831, 832, 835], "225": [831, 832, 835], "425": [831, 832, 835], "norm_idx": [831, 832, 835], "228": [831, 832, 835], "0285": [831, 832, 835], "199": [831, 832, 835], "204": [831, 832, 835], "population_s": [836, 837], "num_sampl": [836, 837], "draw": [836, 837, 841, 842, 844], "unnorm": [836, 837], "drawn": [836, 837, 838, 839, 841, 842, 844], "home": [836, 837, 841], "uniformli": [836, 838, 839, 842, 844], "highest": [836, 838, 839], "z2": [836, 838, 839], "parameter": [836, 841, 842, 844], "6444774682897879": [836, 841], "811": [836, 841], "508": [836, 841], "564": [836, 841], "7268672": [836, 841], "968": [836, 841], "175": [836, 841, 853, 854], "064": [836, 841], "40935726": [836, 841], "556": [836, 841], "26431865": [836, 842, 844], "475": [836, 842, 844], "878": [836, 842, 844], "861": [836, 842, 844], "89150229": [836, 842, 844], "89629126": [836, 842, 844], "94198485": [836, 842, 844], "91405606": [836, 842, 844], "72848724": [836, 842, 844], "7550739": [836, 842, 844], "00109": [836, 842, 844], "occurr": [848, 849, 850, 853, 854], "yield": [848, 852], "43": [848, 852], "x_j": [853, 854, 855, 859, 861], "impli": [853, 854, 855, 859, 861], "inverse_indic": [853, 854, 860], "aggreg": [853, 854], "fourth": [853, 854], "607": [853, 854], "735": [853, 854], "667": [853, 854], "381": [853, 854], "857": [853, 854], "0396": [853, 854], "166": [853, 854], "828": [853, 854], "144": [853, 854], "40501155": [853, 854], "77361575": [853, 854], "97776199": [853, 854], "36831157": [853, 854], "89148434": [853, 854], "9512272": [853, 854], "67542176": [853, 854], "41985657": [853, 854], "23478023": [853, 854], "1141": [853, 854], "8101": [853, 854], "9298": [853, 854], "8460": [853, 854], "2119": [853, 854], "3519": [853, 854], "6252": [853, 854], "4033": [853, 854], "7443": [853, 854], "2577": [853, 854], "3707": [853, 854], "0545": [853, 854], "3238": [853, 854], "5944": [853, 854], "0775": [853, 854], "4327": [853, 854], "176": [853, 854], "889": [853, 854], "763": [853, 854], "071": [853, 854], "262": [853, 854], "456": [853, 854], "114": [853, 854], "349": [853, 854], "615": [853, 854], "594": [853, 854], "335": [853, 854], "212": [853, 854], "457": [853, 854], "827": [853, 854], "set_funct": [853, 855, 859], "ascend": [862, 863, 866], "einstein": [873, 874, 877], "summat": [873, 874, 877], "seq": [873, 874, 877], "jk": [873, 874, 877], "ik": [873, 874, 877], "126": [873, 874, 877], "510": [873, 874, 877], "99": [873, 874, 877], "108": [873, 874, 877], "117": [873, 874, 877], "sentinel": [873, 878, 881, 886, 889], "unsign": [873, 890, 893, 898, 901], "degre": [873, 894, 897, 902, 905], "bessel": [873, 894, 897, 902, 905], "8164966": [873, 894, 897], "varianc": [873, 902, 905], "unbias": [873, 902, 905], "simplicit": [906, 907, 910], "autom": 915, "grow": 915, "ai": 915, "got": 915, "colab": 915, "sharp": 915, "weekli": 915, "event": 915, "immedi": 915, "favorit": 915, "jax_concat": 915, "tf_concat": 915, "np_concat": 915, "mx_concat": 915, "torch_concat": 915, "prompt": 915, "get_devic": 915, "reduce_prod": 915, "gradient_imag": 915, "linalg": 915, "bilinear_resampl": 915, "stack_imag": 915, "neural_net": 915, "ecosystem": [915, 921], "popular": [915, 921], "acceler": 915, "articl": 915, "lenton2021ivi": 915, "inter": 915, "lenton": 915, "daniel": 915, "pardo": 915, "fabio": 915, "falck": 915, "fabian": 915, "jame": 915, "stephen": 915, "clark": 915, "ronald": 915, "journal": 915, "arxiv": 915, "preprint": 915, "2102": 915, "02886": 915, "2021": 915, "add_array_spec": 918, "fn_array_spec": 918, "geglu": 923, "native_modul": [926, 927], "native_module_class": [926, 927], "firstlayersiren": 928, "kaimingnorm": [928, 932], "negative_slop": 928, "Ones": 928, "siren": 928, "w0": [928, 934], "filter_s": [937, 938, 939], "1d": [937, 938, 939], "conv1dtranspos": 937, "filter_shap": [937, 940, 941, 942, 943, 944], "conv2dtranspos": 937, "conv3dtranspos": 937, "depthwiseconv2d": 937, "num_channel": [937, 944], "bernoul": [937, 945], "num_lay": [937, 946], "return_sequ": [937, 946], "return_st": [937, 946], "get_initial_st": [937, 946], "dens": [937, 947], "multiheadattent": 937, "query_dim": [937, 948], "head_dim": [937, 948], "dropout_r": [937, 948], "context_dim": [937, 948], "with_to_q_fn": [937, 948], "with_to_kv_fn": [937, 948], "with_to_out_fn": [937, 948], "build_mod": [937, 948, 949, 950], "on_init": [937, 948, 949, 950], "__call__": [937, 948, 949, 950], "store_var": [949, 950], "arg_stateful_idx": [949, 950], "kwarg_stateful_idx": [949, 950], "fallback_to_non_compil": [949, 950, 953, 957], "with_partial_v": [949, 950], "initialz": [949, 950], "from_cal": [949, 950], "check_submod_ret": [949, 950], "get_mod_kei": [949, 950], "top_mod": [949, 950], "mod_depth": [949, 950], "mod_height": [949, 950], "mod_with_top_mod_key_chain": [949, 950], "save_weight": [949, 950], "weights_path": [949, 950], "show_mod_in_top_mod": [949, 950], "upper_depth": [949, 950], "lower_depth": [949, 950], "show_structur": [949, 950], "show_v_in_top_v": [949, 950], "sub_mod": [949, 950], "show_v": [949, 950], "track_submod_call_ord": [949, 950], "track_submod_ret": [949, 950], "v_with_top_v_key_chain": [949, 950], "layernorm": 951, "normalized_shap": [951, 952], "elementwise_affin": [951, 952], "trail": [951, 952], "affin": [951, 952], "0001": [953, 954, 955], "init_on_first_step": [953, 957], "ignore_miss": [953, 957], "overriden": [953, 957], "sgd": 953, "stochast": [953, 958], "sub_modul": [959, 960]}, "objects": {"ivy": [[23, 0, 0, "-", "Array"], [69, 0, 0, "-", "Container"], [0, 0, 0, "-", "backend_handler"], [149, 0, 0, "-", "func_wrapper"], [918, 0, 0, "-", "inspection"], [922, 0, 0, "-", "stateful"], [962, 0, 0, "-", "verbosity"]], "ivy.Array": [[23, 1, 1, "", "__delattr__"], [23, 1, 1, "", "__format__"], [23, 1, 1, "", "__getattribute__"], [23, 1, 1, "", "__init_subclass__"], [23, 1, 1, "", "__new__"], [23, 1, 1, "", "__reduce__"], [23, 1, 1, "", "__reduce_ex__"], [23, 1, 1, "", "__setattr__"], [23, 1, 1, "", "__sizeof__"], [23, 1, 1, "", "__str__"], [23, 1, 1, "", "__subclasshook__"]], "ivy.Container": [[69, 1, 1, "", "__delattr__"], [69, 1, 1, "", "__delitem__"], [69, 1, 1, "", "__format__"], [69, 1, 1, "", "__getattribute__"], [69, 1, 1, "", "__init_subclass__"], [69, 1, 1, "", "__iter__"], [69, 1, 1, "", "__len__"], [69, 1, 1, "", "__new__"], [69, 1, 1, "", "__reduce__"], [69, 1, 1, "", "__reduce_ex__"], [69, 1, 1, "", "__reversed__"], [69, 1, 1, "", "__sizeof__"], [69, 1, 1, "", "__str__"], [69, 1, 1, "", "__subclasshook__"], [69, 1, 1, "", "clear"], [69, 1, 1, "", "fromkeys"], [69, 1, 1, "", "get"], [69, 1, 1, "", "items"], [69, 1, 1, "", "keys"], [69, 1, 1, "", "pop"], [69, 1, 1, "", "popitem"], [69, 1, 1, "", "setdefault"], [69, 1, 1, "", "update"], [69, 1, 1, "", "values"]], "ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "conversions"], [31, 0, 0, "-", "creation"], [33, 0, 0, "-", "data_type"], [35, 0, 0, "-", "device"], [37, 0, 0, "-", "elementwise"], [39, 0, 0, "-", "general"], [41, 0, 0, "-", "gradients"], [43, 0, 0, "-", "image"], [45, 0, 0, "-", "layers"], [47, 0, 0, "-", "linear_algebra"], [49, 0, 0, "-", "losses"], [51, 0, 0, "-", "manipulation"], [53, 0, 0, "-", "norms"], [55, 0, 0, "-", "random"], [57, 0, 0, "-", "searching"], [59, 0, 0, "-", "set"], [61, 0, 0, "-", "sorting"], [63, 0, 0, "-", "statistical"], [65, 0, 0, "-", "utility"], [67, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 2, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 3, 1, "", "softplus"]], "ivy.array.array_methods": [[302, 1, 1, "", "abs"], [307, 1, 1, "", "acos"], [311, 1, 1, "", "acosh"], [615, 1, 1, "", "adam_step"], [315, 1, 1, "", "add"], [908, 1, 1, "", "all"], [540, 1, 1, "", "all_equal"], [912, 1, 1, "", "any"], [864, 1, 1, "", "argsort"], [177, 1, 1, "", "asarray"], [320, 1, 1, "", "asin"], [324, 1, 1, "", "asinh"], [328, 1, 1, "", "atan"], [332, 1, 1, "", "atan2"], [336, 1, 1, "", "atanh"], [735, 1, 1, "", "binary_cross_entropy"], [340, 1, 1, "", "bitwise_and"], [344, 1, 1, "", "bitwise_invert"], [348, 1, 1, "", "bitwise_left_shift"], [352, 1, 1, "", "bitwise_or"], [356, 1, 1, "", "bitwise_right_shift"], [360, 1, 1, "", "bitwise_xor"], [223, 1, 1, "", "can_cast"], [364, 1, 1, "", "ceil"], [665, 1, 1, "", "cholesky"], [751, 1, 1, "", "clip"], [756, 1, 1, "", "concat"], [760, 1, 1, "", "constant_pad"], [368, 1, 1, "", "cos"], [372, 1, 1, "", "cosh"], [668, 1, 1, "", "cross"], [740, 1, 1, "", "cross_entropy"], [671, 1, 1, "", "det"], [674, 1, 1, "", "diagonal"], [376, 1, 1, "", "divide"], [677, 1, 1, "", "eigh"], [680, 1, 1, "", "eigvalsh"], [875, 1, 1, "", "einsum"], [181, 1, 1, "", "empty_like"], [381, 1, 1, "", "equal"], [385, 1, 1, "", "erf"], [389, 1, 1, "", "exp"], [764, 1, 1, "", "expand_dims"], [393, 1, 1, "", "expm1"], [768, 1, 1, "", "flip"], [397, 1, 1, "", "floor"], [401, 1, 1, "", "floor_divide"], [185, 1, 1, "", "from_dlpack"], [189, 1, 1, "", "full_like"], [568, 1, 1, "", "gather_nd"], [405, 1, 1, "", "greater"], [409, 1, 1, "", "greater_equal"], [683, 1, 1, "", "inv"], [413, 1, 1, "", "isfinite"], [417, 1, 1, "", "isinf"], [421, 1, 1, "", "isnan"], [833, 1, 1, "", "layer_norm"], [425, 1, 1, "", "less"], [429, 1, 1, "", "less_equal"], [433, 1, 1, "", "log"], [437, 1, 1, "", "log10"], [441, 1, 1, "", "log1p"], [445, 1, 1, "", "log2"], [449, 1, 1, "", "logaddexp"], [453, 1, 1, "", "logical_and"], [457, 1, 1, "", "logical_not"], [461, 1, 1, "", "logical_or"], [465, 1, 1, "", "logical_xor"], [686, 1, 1, "", "matmul"], [690, 1, 1, "", "matrix_norm"], [694, 1, 1, "", "matrix_rank"], [697, 1, 1, "", "matrix_transpose"], [879, 1, 1, "", "max"], [883, 1, 1, "", "mean"], [194, 1, 1, "", "meshgrid"], [887, 1, 1, "", "min"], [471, 1, 1, "", "multiply"], [197, 1, 1, "", "native_array"], [476, 1, 1, "", "negative"], [480, 1, 1, "", "not_equal"], [201, 1, 1, "", "ones_like"], [700, 1, 1, "", "outer"], [772, 1, 1, "", "permute_dims"], [703, 1, 1, "", "pinv"], [484, 1, 1, "", "positive"], [488, 1, 1, "", "pow"], [891, 1, 1, "", "prod"], [706, 1, 1, "", "qr"], [492, 1, 1, "", "remainder"], [776, 1, 1, "", "repeat"], [780, 1, 1, "", "reshape"], [784, 1, 1, "", "roll"], [496, 1, 1, "", "round"], [500, 1, 1, "", "sign"], [504, 1, 1, "", "sin"], [508, 1, 1, "", "sinh"], [166, 1, 1, "", "softplus"], [710, 1, 1, "", "solve"], [869, 1, 1, "", "sort"], [745, 1, 1, "", "sparse_cross_entropy"], [512, 1, 1, "", "sqrt"], [516, 1, 1, "", "square"], [790, 1, 1, "", "squeeze"], [794, 1, 1, "", "stack"], [895, 1, 1, "", "std"], [521, 1, 1, "", "subtract"], [899, 1, 1, "", "sum"], [713, 1, 1, "", "svd"], [716, 1, 1, "", "svdvals"], [798, 1, 1, "", "swapaxes"], [526, 1, 1, "", "tan"], [531, 1, 1, "", "tanh"], [719, 1, 1, "", "tensordot"], [802, 1, 1, "", "tile"], [722, 1, 1, "", "trace"], [204, 1, 1, "", "tril"], [207, 1, 1, "", "triu"], [535, 1, 1, "", "trunc"], [857, 1, 1, "", "unique_counts"], [903, 1, 1, "", "var"], [725, 1, 1, "", "vecdot"], [728, 1, 1, "", "vector_norm"], [731, 1, 1, "", "vector_to_skew_symmetric_matrix"], [806, 1, 1, "", "zero_pad"], [211, 1, 1, "", "zeros_like"]], "ivy.array.conversions": [[27, 1, 1, "", "args_to_ivy"], [28, 1, 1, "", "args_to_native"], [29, 1, 1, "", "to_ivy"], [30, 1, 1, "", "to_native"]], "ivy.array.creation": [[32, 2, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[32, 3, 1, "", "asarray"], [32, 3, 1, "", "empty_like"], [32, 3, 1, "", "from_dlpack"], [32, 3, 1, "", "full_like"], [32, 3, 1, "", "meshgrid"], [32, 3, 1, "", "native_array"], [32, 3, 1, "", "ones_like"], [32, 3, 1, "", "tril"], [32, 3, 1, "", "triu"], [32, 3, 1, "", "zeros_like"]], "ivy.array.data_type": [[34, 2, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[34, 3, 1, "", "can_cast"]], "ivy.array.device": [[36, 2, 1, "", "ArrayWithDevice"]], "ivy.array.elementwise": [[38, 2, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[38, 3, 1, "", "abs"], [38, 3, 1, "", "acos"], [38, 3, 1, "", "acosh"], [38, 3, 1, "", "add"], [38, 3, 1, "", "asin"], [38, 3, 1, "", "asinh"], [38, 3, 1, "", "atan"], [38, 3, 1, "", "atan2"], [38, 3, 1, "", "atanh"], [38, 3, 1, "", "bitwise_and"], [38, 3, 1, "", "bitwise_invert"], [38, 3, 1, "", "bitwise_left_shift"], [38, 3, 1, "", "bitwise_or"], [38, 3, 1, "", "bitwise_right_shift"], [38, 3, 1, "", "bitwise_xor"], [38, 3, 1, "", "ceil"], [38, 3, 1, "", "cos"], [38, 3, 1, "", "cosh"], [38, 3, 1, "", "divide"], [38, 3, 1, "", "equal"], [38, 3, 1, "", "erf"], [38, 3, 1, "", "exp"], [38, 3, 1, "", "expm1"], [38, 3, 1, "", "floor"], [38, 3, 1, "", "floor_divide"], [38, 3, 1, "", "greater"], [38, 3, 1, "", "greater_equal"], [38, 3, 1, "", "isfinite"], [38, 3, 1, "", "isinf"], [38, 3, 1, "", "isnan"], [38, 3, 1, "", "less"], [38, 3, 1, "", "less_equal"], [38, 3, 1, "", "log"], [38, 3, 1, "", "log10"], [38, 3, 1, "", "log1p"], [38, 3, 1, "", "log2"], [38, 3, 1, "", "logaddexp"], [38, 3, 1, "", "logical_and"], [38, 3, 1, "", "logical_not"], [38, 3, 1, "", "logical_or"], [38, 3, 1, "", "logical_xor"], [38, 3, 1, "", "multiply"], [38, 3, 1, "", "negative"], [38, 3, 1, "", "not_equal"], [38, 3, 1, "", "positive"], [38, 3, 1, "", "pow"], [38, 3, 1, "", "remainder"], [38, 3, 1, "", "round"], [38, 3, 1, "", "sign"], [38, 3, 1, "", "sin"], [38, 3, 1, "", "sinh"], [38, 3, 1, "", "sqrt"], [38, 3, 1, "", "square"], [38, 3, 1, "", "subtract"], [38, 3, 1, "", "tan"], [38, 3, 1, "", "tanh"], [38, 3, 1, "", "trunc"]], "ivy.array.general": [[40, 2, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[40, 3, 1, "", "all_equal"], [40, 3, 1, "", "gather_nd"]], "ivy.array.gradients": [[42, 2, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[42, 3, 1, "", "adam_step"]], "ivy.array.image": [[44, 2, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[46, 2, 1, "", "ArrayWithLayers"]], "ivy.array.linear_algebra": [[48, 2, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[48, 3, 1, "", "cholesky"], [48, 3, 1, "", "cross"], [48, 3, 1, "", "det"], [48, 3, 1, "", "diagonal"], [48, 3, 1, "", "eigh"], [48, 3, 1, "", "eigvalsh"], [48, 3, 1, "", "inv"], [48, 3, 1, "", "matmul"], [48, 3, 1, "", "matrix_norm"], [48, 3, 1, "", "matrix_rank"], [48, 3, 1, "", "matrix_transpose"], [48, 3, 1, "", "outer"], [48, 3, 1, "", "pinv"], [48, 3, 1, "", "qr"], [48, 3, 1, "", "solve"], [48, 3, 1, "", "svd"], [48, 3, 1, "", "svdvals"], [48, 3, 1, "", "tensordot"], [48, 3, 1, "", "trace"], [48, 3, 1, "", "vecdot"], [48, 3, 1, "", "vector_norm"], [48, 3, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[50, 2, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[50, 3, 1, "", "binary_cross_entropy"], [50, 3, 1, "", "cross_entropy"], [50, 3, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[52, 2, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[52, 3, 1, "", "clip"], [52, 3, 1, "", "concat"], [52, 3, 1, "", "constant_pad"], [52, 3, 1, "", "expand_dims"], [52, 3, 1, "", "flip"], [52, 3, 1, "", "permute_dims"], [52, 3, 1, "", "repeat"], [52, 3, 1, "", "reshape"], [52, 3, 1, "", "roll"], [52, 3, 1, "", "squeeze"], [52, 3, 1, "", "stack"], [52, 3, 1, "", "swapaxes"], [52, 3, 1, "", "tile"], [52, 3, 1, "", "zero_pad"]], "ivy.array.norms": [[54, 2, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[54, 3, 1, "", "layer_norm"]], "ivy.array.random": [[56, 2, 1, "", "ArrayWithRandom"]], "ivy.array.searching": [[58, 2, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[60, 2, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[60, 3, 1, "", "unique_counts"]], "ivy.array.sorting": [[62, 2, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[62, 3, 1, "", "argsort"], [62, 3, 1, "", "sort"]], "ivy.array.statistical": [[64, 2, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[64, 3, 1, "", "einsum"], [64, 3, 1, "", "max"], [64, 3, 1, "", "mean"], [64, 3, 1, "", "min"], [64, 3, 1, "", "prod"], [64, 3, 1, "", "std"], [64, 3, 1, "", "sum"], [64, 3, 1, "", "var"]], "ivy.array.utility": [[66, 2, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[66, 3, 1, "", "all"], [66, 3, 1, "", "any"]], "ivy.array.wrapping": [[68, 1, 1, "", "add_ivy_array_instance_methods"]], "ivy.backend_handler": [[0, 2, 1, "", "ContextManager"], [2, 1, 1, "", "choose_random_backend"], [3, 1, 1, "", "clear_backend_stack"], [4, 1, 1, "", "current_backend"], [5, 1, 1, "", "get_backend"], [6, 1, 1, "", "set_backend"], [7, 1, 1, "", "try_import_ivy_jax"], [8, 1, 1, "", "try_import_ivy_mxnet"], [9, 1, 1, "", "try_import_ivy_numpy"], [10, 1, 1, "", "try_import_ivy_tf"], [11, 1, 1, "", "try_import_ivy_torch"], [12, 1, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 3, 1, "", "__init__"]], "ivy.container": [[70, 0, 0, "-", "activations"], [72, 0, 0, "-", "base"], [74, 0, 0, "-", "container"], [77, 0, 0, "-", "creation"], [79, 0, 0, "-", "data_type"], [81, 0, 0, "-", "device"], [83, 0, 0, "-", "elementwise"], [85, 0, 0, "-", "general"], [87, 0, 0, "-", "gradients"], [89, 0, 0, "-", "image"], [91, 0, 0, "-", "layers"], [93, 0, 0, "-", "linear_algebra"], [95, 0, 0, "-", "losses"], [97, 0, 0, "-", "manipulation"], [99, 0, 0, "-", "norms"], [101, 0, 0, "-", "random"], [103, 0, 0, "-", "searching"], [105, 0, 0, "-", "set"], [107, 0, 0, "-", "sorting"], [109, 0, 0, "-", "statistical"], [111, 0, 0, "-", "utility"], [113, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[71, 2, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[71, 3, 1, "", "softplus"], [71, 3, 1, "", "static_softplus"]], "ivy.container.base": [[73, 2, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[73, 3, 1, "", "__getitem__"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "__setitem__"], [73, 3, 1, "", "all_false"], [73, 3, 1, "", "all_key_chains"], [73, 3, 1, "", "all_true"], [73, 3, 1, "", "arrays_as_lists"], [73, 3, 1, "", "as_arrays"], [73, 3, 1, "", "as_bools"], [73, 3, 1, "", "as_ones"], [73, 3, 1, "", "as_random_uniform"], [73, 3, 1, "", "as_variables"], [73, 3, 1, "", "as_zeros"], [73, 3, 1, "", "assert_contains_sub_container"], [73, 3, 1, "", "assert_contains_sub_structure"], [73, 3, 1, "", "assert_identical"], [73, 3, 1, "", "assert_identical_structure"], [73, 3, 1, "", "at_key_chain"], [73, 3, 1, "", "at_key_chains"], [73, 3, 1, "", "at_keys"], [73, 3, 1, "", "clip"], [73, 3, 1, "", "combine"], [73, 3, 1, "", "common_key_chains"], [73, 4, 1, "", "config"], [73, 3, 1, "", "contains_sub_container"], [73, 3, 1, "", "contains_sub_structure"], [73, 3, 1, "", "copy"], [73, 3, 1, "", "create_if_absent"], [73, 3, 1, "", "cutoff_at_depth"], [73, 3, 1, "", "cutoff_at_height"], [73, 3, 1, "", "deep_copy"], [73, 4, 1, "", "dev"], [73, 3, 1, "", "dev_clone"], [73, 3, 1, "", "dev_dist"], [73, 4, 1, "", "dev_str"], [73, 3, 1, "", "diff"], [73, 3, 1, "", "dtype"], [73, 3, 1, "", "einops_rearrange"], [73, 3, 1, "", "einops_reduce"], [73, 3, 1, "", "einops_repeat"], [73, 3, 1, "", "find_sub_container"], [73, 3, 1, "", "find_sub_structure"], [73, 3, 1, "", "flatten_key_chain"], [73, 3, 1, "", "flatten_key_chains"], [73, 3, 1, "", "format_key_chains"], [73, 3, 1, "", "from_disk_as_hdf5"], [73, 3, 1, "", "from_disk_as_json"], [73, 3, 1, "", "from_disk_as_pickled"], [73, 3, 1, "", "from_flat_list"], [73, 3, 1, "", "from_numpy"], [73, 3, 1, "", "gather"], [73, 3, 1, "", "gather_nd"], [73, 3, 1, "", "h5_file_size"], [73, 3, 1, "", "handle_inplace"], [73, 3, 1, "", "has_key"], [73, 3, 1, "", "has_key_chain"], [73, 3, 1, "", "has_nans"], [73, 3, 1, "", "identical"], [73, 3, 1, "", "identical_array_shapes"], [73, 3, 1, "", "identical_configs"], [73, 3, 1, "", "identical_structure"], [73, 3, 1, "", "if_exists"], [73, 3, 1, "", "inplace_update"], [73, 4, 1, "", "ivy"], [73, 3, 1, "", "key_chains_containing"], [73, 3, 1, "", "list_join"], [73, 3, 1, "", "list_stack"], [73, 3, 1, "", "map"], [73, 3, 1, "", "map_conts"], [73, 3, 1, "", "matrix_norm"], [73, 4, 1, "", "max_depth"], [73, 3, 1, "", "maximum"], [73, 3, 1, "", "minimum"], [73, 3, 1, "", "multi_map"], [73, 3, 1, "", "multi_map_in_static_method"], [73, 3, 1, "", "num_arrays"], [73, 3, 1, "", "overwrite_at_key_chain"], [73, 3, 1, "", "overwrite_at_key_chains"], [73, 3, 1, "", "prune_empty"], [73, 3, 1, "", "prune_key_chain"], [73, 3, 1, "", "prune_key_chains"], [73, 3, 1, "", "prune_key_from_key_chains"], [73, 3, 1, "", "prune_keys"], [73, 3, 1, "", "prune_keys_from_key_chains"], [73, 3, 1, "", "reduce"], [73, 3, 1, "", "remove_key_length_limit"], [73, 3, 1, "", "remove_print_limit"], [73, 3, 1, "", "reshape_like"], [73, 3, 1, "", "restructure"], [73, 3, 1, "", "restructure_key_chains"], [73, 3, 1, "", "set_at_key_chain"], [73, 3, 1, "", "set_at_key_chains"], [73, 3, 1, "", "set_at_keys"], [73, 3, 1, "", "set_framework"], [73, 3, 1, "", "set_ivy_backend"], [73, 4, 1, "", "shape"], [73, 4, 1, "", "shapes"], [73, 3, 1, "", "show"], [73, 3, 1, "", "show_sub_container"], [73, 3, 1, "", "shuffle"], [73, 3, 1, "", "shuffle_h5_file"], [73, 3, 1, "", "size_ordered_arrays"], [73, 3, 1, "", "slice_keys"], [73, 3, 1, "", "slice_via_key"], [73, 3, 1, "", "sort_by_key"], [73, 3, 1, "", "split"], [73, 3, 1, "", "stop_gradients"], [73, 3, 1, "", "structural_diff"], [73, 3, 1, "", "to_device"], [73, 3, 1, "", "to_dict"], [73, 3, 1, "", "to_disk_as_hdf5"], [73, 3, 1, "", "to_disk_as_json"], [73, 3, 1, "", "to_disk_as_pickled"], [73, 3, 1, "", "to_flat_list"], [73, 3, 1, "", "to_iterator"], [73, 3, 1, "", "to_iterator_keys"], [73, 3, 1, "", "to_iterator_values"], [73, 3, 1, "", "to_ivy"], [73, 3, 1, "", "to_jsonable"], [73, 3, 1, "", "to_list"], [73, 3, 1, "", "to_multi_dev"], [73, 3, 1, "", "to_native"], [73, 3, 1, "", "to_numpy"], [73, 3, 1, "", "to_raw"], [73, 3, 1, "", "trim_key"], [73, 3, 1, "", "try_kc"], [73, 3, 1, "", "unify"], [73, 3, 1, "", "unstack"], [73, 3, 1, "", "update_config"], [73, 3, 1, "", "vector_norm"], [73, 3, 1, "", "with_default_key_color"], [73, 3, 1, "", "with_entries_as_lists"], [73, 3, 1, "", "with_ivy_backend"], [73, 3, 1, "", "with_key_length_limit"], [73, 3, 1, "", "with_print_indent"], [73, 3, 1, "", "with_print_limit"], [73, 3, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[75, 2, 1, "", "Container"], [76, 2, 1, "", "MultiDevContainer"]], "ivy.container.container.Container": [[75, 3, 1, "", "__add__"], [75, 3, 1, "", "__init__"], [75, 3, 1, "", "__radd__"], [75, 3, 1, "", "arange"], [75, 3, 1, "", "arg_info"], [75, 3, 1, "", "arg_names"], [75, 3, 1, "", "argmax"], [75, 3, 1, "", "argmin"], [75, 3, 1, "", "array"], [75, 3, 1, "", "array_equal"], [75, 3, 1, "", "arrays_equal"], [75, 3, 1, "", "as_ivy_dev"], [75, 3, 1, "", "as_ivy_dtype"], [75, 3, 1, "", "as_native_dev"], [75, 3, 1, "", "as_native_dtype"], [75, 3, 1, "", "asarray"], [75, 3, 1, "", "assert_supports_inplace"], [75, 3, 1, "", "astype"], [75, 3, 1, "", "broadcast_arrays"], [75, 3, 1, "", "broadcast_to"], [75, 3, 1, "", "cache_fn"], [75, 3, 1, "", "cholesky"], [75, 3, 1, "", "clear_mem_on_dev"], [75, 3, 1, "", "clip_matrix_norm"], [75, 3, 1, "", "closest_valid_dtype"], [75, 3, 1, "", "container_types"], [75, 3, 1, "", "conv1d"], [75, 3, 1, "", "conv1d_transpose"], [75, 3, 1, "", "conv2d"], [75, 3, 1, "", "conv2d_transpose"], [75, 3, 1, "", "conv3d"], [75, 3, 1, "", "conv3d_transpose"], [75, 3, 1, "", "copy_array"], [75, 3, 1, "", "cross"], [75, 3, 1, "", "cumprod"], [75, 3, 1, "", "cumsum"], [75, 3, 1, "", "current_backend"], [75, 3, 1, "", "current_backend_str"], [75, 3, 1, "", "default"], [75, 3, 1, "", "default_device"], [75, 3, 1, "", "default_dtype"], [75, 3, 1, "", "default_float_dtype"], [75, 3, 1, "", "default_int_dtype"], [75, 3, 1, "", "depthwise_conv2d"], [75, 3, 1, "", "det"], [75, 3, 1, "", "dev_clone_array"], [75, 3, 1, "", "dev_clone_iter"], [75, 3, 1, "", "dev_clone_nest"], [75, 3, 1, "", "dev_dist_array"], [75, 3, 1, "", "dev_dist_iter"], [75, 3, 1, "", "dev_dist_nest"], [75, 3, 1, "", "dev_unify"], [75, 3, 1, "", "dev_unify_array"], [75, 3, 1, "", "dev_unify_iter"], [75, 3, 1, "", "dev_unify_nest"], [75, 3, 1, "", "dev_util"], [75, 3, 1, "", "diagonal"], [75, 3, 1, "", "dropout"], [75, 3, 1, "", "dtype_bits"], [75, 3, 1, "", "eigh"], [75, 3, 1, "", "eigvalsh"], [75, 3, 1, "", "empty"], [75, 3, 1, "", "empty_like"], [75, 3, 1, "", "execute_with_gradients"], [75, 3, 1, "", "exists"], [75, 3, 1, "", "eye"], [75, 3, 1, "", "finfo"], [75, 3, 1, "", "floormod"], [75, 3, 1, "", "fourier_encode"], [75, 3, 1, "", "from_dlpack"], [75, 3, 1, "", "full"], [75, 3, 1, "", "full_like"], [75, 3, 1, "", "function_supported_dtypes"], [75, 3, 1, "", "function_unsupported_dtypes"], [75, 3, 1, "", "gelu"], [75, 3, 1, "", "get_all_arrays_in_memory"], [75, 3, 1, "", "get_all_ivy_arrays_on_dev"], [75, 3, 1, "", "get_min_base"], [75, 3, 1, "", "get_min_denominator"], [75, 3, 1, "", "get_num_dims"], [75, 3, 1, "", "get_referrers_recursive"], [75, 3, 1, "", "gpu_is_available"], [75, 3, 1, "", "handle_nestable"], [75, 3, 1, "", "handle_out_argument"], [75, 3, 1, "", "iinfo"], [75, 3, 1, "", "indices_where"], [75, 3, 1, "", "infer_device"], [75, 3, 1, "", "infer_dtype"], [75, 3, 1, "", "inplace_arrays_supported"], [75, 3, 1, "", "inplace_decrement"], [75, 3, 1, "", "inplace_increment"], [75, 3, 1, "", "inplace_variables_supported"], [75, 3, 1, "", "inputs_to_native_arrays"], [75, 3, 1, "", "inv"], [75, 3, 1, "", "invalid_dtype"], [75, 3, 1, "", "is_float_dtype"], [75, 3, 1, "", "is_int_dtype"], [75, 3, 1, "", "is_ivy_container"], [75, 3, 1, "", "leaky_relu"], [75, 3, 1, "", "linear"], [75, 3, 1, "", "linspace"], [75, 3, 1, "", "logspace"], [75, 3, 1, "", "lstm_update"], [75, 3, 1, "", "match_kwargs"], [75, 3, 1, "", "matrix_power"], [75, 3, 1, "", "matrix_rank"], [75, 3, 1, "", "matrix_transpose"], [75, 3, 1, "", "meshgrid"], [75, 3, 1, "", "multi_head_attention"], [75, 3, 1, "", "multinomial"], [75, 3, 1, "", "multiprocessing"], [75, 3, 1, "", "native_array"], [75, 3, 1, "", "nonzero"], [75, 3, 1, "", "num_arrays_in_memory"], [75, 3, 1, "", "num_cpu_cores"], [75, 3, 1, "", "num_gpus"], [75, 3, 1, "", "num_ivy_arrays_on_dev"], [75, 3, 1, "", "one_hot"], [75, 3, 1, "", "ones"], [75, 3, 1, "", "ones_like"], [75, 3, 1, "", "outer"], [75, 3, 1, "", "outputs_to_ivy_arrays"], [75, 3, 1, "", "percent_used_mem_on_dev"], [75, 3, 1, "", "pinv"], [75, 3, 1, "", "print_all_arrays_in_memory"], [75, 3, 1, "", "print_all_ivy_arrays_on_dev"], [75, 3, 1, "", "promote_types"], [75, 3, 1, "", "qr"], [75, 3, 1, "", "queue_timeout"], [75, 3, 1, "", "randint"], [75, 3, 1, "", "random_normal"], [75, 3, 1, "", "relu"], [75, 3, 1, "", "result_type"], [75, 3, 1, "", "scaled_dot_product_attention"], [75, 3, 1, "", "scatter_flat"], [75, 3, 1, "", "scatter_nd"], [75, 3, 1, "", "seed"], [75, 3, 1, "", "set_default_device"], [75, 3, 1, "", "set_default_dtype"], [75, 3, 1, "", "set_default_float_dtype"], [75, 3, 1, "", "set_default_int_dtype"], [75, 3, 1, "", "set_min_base"], [75, 3, 1, "", "set_min_denominator"], [75, 3, 1, "", "set_queue_timeout"], [75, 3, 1, "", "set_split_factor"], [75, 3, 1, "", "set_tmp_dir"], [75, 3, 1, "", "set_with_grads"], [75, 3, 1, "", "shape_to_tuple"], [75, 3, 1, "", "sigmoid"], [75, 3, 1, "", "slogdet"], [75, 3, 1, "", "softmax"], [75, 3, 1, "", "solve"], [75, 3, 1, "", "split_factor"], [75, 3, 1, "", "split_func_call"], [75, 3, 1, "", "stable_divide"], [75, 3, 1, "", "stable_pow"], [75, 3, 1, "", "static_acos"], [75, 3, 1, "", "static_acosh"], [75, 3, 1, "", "static_all"], [75, 3, 1, "", "static_any"], [75, 3, 1, "", "static_arange"], [75, 3, 1, "", "static_arg_info"], [75, 3, 1, "", "static_arg_names"], [75, 3, 1, "", "static_argmax"], [75, 3, 1, "", "static_argmin"], [75, 3, 1, "", "static_array"], [75, 3, 1, "", "static_array_equal"], [75, 3, 1, "", "static_arrays_equal"], [75, 3, 1, "", "static_as_ivy_dev"], [75, 3, 1, "", "static_as_ivy_dtype"], [75, 3, 1, "", "static_as_native_dev"], [75, 3, 1, "", "static_as_native_dtype"], [75, 3, 1, "", "static_asarray"], [75, 3, 1, "", "static_asin"], [75, 3, 1, "", "static_asinh"], [75, 3, 1, "", "static_assert_supports_inplace"], [75, 3, 1, "", "static_astype"], [75, 3, 1, "", "static_atan"], [75, 3, 1, "", "static_atan2"], [75, 3, 1, "", "static_atanh"], [75, 3, 1, "", "static_bitwise_and"], [75, 3, 1, "", "static_bitwise_invert"], [75, 3, 1, "", "static_bitwise_left_shift"], [75, 3, 1, "", "static_bitwise_or"], [75, 3, 1, "", "static_bitwise_right_shift"], [75, 3, 1, "", "static_bitwise_xor"], [75, 3, 1, "", "static_broadcast_arrays"], [75, 3, 1, "", "static_broadcast_to"], [75, 3, 1, "", "static_cache_fn"], [75, 3, 1, "", "static_ceil"], [75, 3, 1, "", "static_cholesky"], [75, 3, 1, "", "static_clear_mem_on_dev"], [75, 3, 1, "", "static_clip_matrix_norm"], [75, 3, 1, "", "static_clip_vector_norm"], [75, 3, 1, "", "static_closest_valid_dtype"], [75, 3, 1, "", "static_concat"], [75, 3, 1, "", "static_constant_pad"], [75, 3, 1, "", "static_container_types"], [75, 3, 1, "", "static_conv1d"], [75, 3, 1, "", "static_conv1d_transpose"], [75, 3, 1, "", "static_conv2d"], [75, 3, 1, "", "static_conv2d_transpose"], [75, 3, 1, "", "static_conv3d"], [75, 3, 1, "", "static_conv3d_transpose"], [75, 3, 1, "", "static_copy_array"], [75, 3, 1, "", "static_cos"], [75, 3, 1, "", "static_cosh"], [75, 3, 1, "", "static_cross"], [75, 3, 1, "", "static_cumprod"], [75, 3, 1, "", "static_cumsum"], [75, 3, 1, "", "static_current_backend"], [75, 3, 1, "", "static_current_backend_str"], [75, 3, 1, "", "static_default"], [75, 3, 1, "", "static_default_device"], [75, 3, 1, "", "static_default_dtype"], [75, 3, 1, "", "static_default_float_dtype"], [75, 3, 1, "", "static_default_int_dtype"], [75, 3, 1, "", "static_depthwise_conv2d"], [75, 3, 1, "", "static_det"], [75, 3, 1, "", "static_dev"], [75, 3, 1, "", "static_dev_clone"], [75, 3, 1, "", "static_dev_clone_array"], [75, 3, 1, "", "static_dev_clone_iter"], [75, 3, 1, "", "static_dev_clone_nest"], [75, 3, 1, "", "static_dev_dist"], [75, 3, 1, "", "static_dev_dist_array"], [75, 3, 1, "", "static_dev_dist_iter"], [75, 3, 1, "", "static_dev_dist_nest"], [75, 3, 1, "", "static_dev_unify"], [75, 3, 1, "", "static_dev_unify_array"], [75, 3, 1, "", "static_dev_unify_iter"], [75, 3, 1, "", "static_dev_unify_nest"], [75, 3, 1, "", "static_dev_util"], [75, 3, 1, "", "static_diagonal"], [75, 3, 1, "", "static_dropout"], [75, 3, 1, "", "static_dtype"], [75, 3, 1, "", "static_dtype_bits"], [75, 3, 1, "", "static_eigh"], [75, 3, 1, "", "static_eigvalsh"], [75, 3, 1, "", "static_einops_rearrange"], [75, 3, 1, "", "static_einops_reduce"], [75, 3, 1, "", "static_einops_repeat"], [75, 3, 1, "", "static_einsum"], [75, 3, 1, "", "static_empty"], [75, 3, 1, "", "static_empty_like"], [75, 3, 1, "", "static_equal"], [75, 3, 1, "", "static_erf"], [75, 3, 1, "", "static_execute_with_gradients"], [75, 3, 1, "", "static_exists"], [75, 3, 1, "", "static_exp"], [75, 3, 1, "", "static_expand_dims"], [75, 3, 1, "", "static_expm1"], [75, 3, 1, "", "static_eye"], [75, 3, 1, "", "static_finfo"], [75, 3, 1, "", "static_flip"], [75, 3, 1, "", "static_floor"], [75, 3, 1, "", "static_floor_divide"], [75, 3, 1, "", "static_floormod"], [75, 3, 1, "", "static_fourier_encode"], [75, 3, 1, "", "static_from_dlpack"], [75, 3, 1, "", "static_full"], [75, 3, 1, "", "static_full_like"], [75, 3, 1, "", "static_function_supported_dtypes"], [75, 3, 1, "", "static_function_unsupported_dtypes"], [75, 3, 1, "", "static_gather"], [75, 3, 1, "", "static_gelu"], [75, 3, 1, "", "static_get_all_arrays_in_memory"], [75, 3, 1, "", "static_get_all_ivy_arrays_on_dev"], [75, 3, 1, "", "static_get_min_base"], [75, 3, 1, "", "static_get_min_denominator"], [75, 3, 1, "", "static_get_num_dims"], [75, 3, 1, "", "static_get_referrers_recursive"], [75, 3, 1, "", "static_gpu_is_available"], [75, 3, 1, "", "static_greater"], [75, 3, 1, "", "static_greater_equal"], [75, 3, 1, "", "static_handle_nestable"], [75, 3, 1, "", "static_handle_out_argument"], [75, 3, 1, "", "static_has_nans"], [75, 3, 1, "", "static_iinfo"], [75, 3, 1, "", "static_indices_where"], [75, 3, 1, "", "static_infer_device"], [75, 3, 1, "", "static_infer_dtype"], [75, 3, 1, "", "static_inplace_arrays_supported"], [75, 3, 1, "", "static_inplace_decrement"], [75, 3, 1, "", "static_inplace_increment"], [75, 3, 1, "", "static_inplace_update"], [75, 3, 1, "", "static_inplace_variables_supported"], [75, 3, 1, "", "static_inputs_to_native_arrays"], [75, 3, 1, "", "static_inv"], [75, 3, 1, "", "static_invalid_dtype"], [75, 3, 1, "", "static_is_array"], [75, 3, 1, "", "static_is_float_dtype"], [75, 3, 1, "", "static_is_int_dtype"], [75, 3, 1, "", "static_is_ivy_array"], [75, 3, 1, "", "static_is_ivy_container"], [75, 3, 1, "", "static_is_native_array"], [75, 3, 1, "", "static_isfinite"], [75, 3, 1, "", "static_isinf"], [75, 3, 1, "", "static_isnan"], [75, 3, 1, "", "static_layer_norm"], [75, 3, 1, "", "static_leaky_relu"], [75, 3, 1, "", "static_less"], [75, 3, 1, "", "static_less_equal"], [75, 3, 1, "", "static_linear"], [75, 3, 1, "", "static_linspace"], [75, 3, 1, "", "static_log"], [75, 3, 1, "", "static_log10"], [75, 3, 1, "", "static_log1p"], [75, 3, 1, "", "static_log2"], [75, 3, 1, "", "static_logaddexp"], [75, 3, 1, "", "static_logical_and"], [75, 3, 1, "", "static_logical_not"], [75, 3, 1, "", "static_logical_or"], [75, 3, 1, "", "static_logical_xor"], [75, 3, 1, "", "static_logspace"], [75, 3, 1, "", "static_lstm_update"], [75, 3, 1, "", "static_match_kwargs"], [75, 3, 1, "", "static_matmul"], [75, 3, 1, "", "static_matrix_norm"], [75, 3, 1, "", "static_matrix_power"], [75, 3, 1, "", "static_matrix_rank"], [75, 3, 1, "", "static_matrix_transpose"], [75, 3, 1, "", "static_max"], [75, 3, 1, "", "static_maximum"], [75, 3, 1, "", "static_mean"], [75, 3, 1, "", "static_meshgrid"], [75, 3, 1, "", "static_min"], [75, 3, 1, "", "static_minimum"], [75, 3, 1, "", "static_multi_head_attention"], [75, 3, 1, "", "static_multinomial"], [75, 3, 1, "", "static_multiprocessing"], [75, 3, 1, "", "static_native_array"], [75, 3, 1, "", "static_negative"], [75, 3, 1, "", "static_nonzero"], [75, 3, 1, "", "static_not_equal"], [75, 3, 1, "", "static_num_arrays_in_memory"], [75, 3, 1, "", "static_num_cpu_cores"], [75, 3, 1, "", "static_num_gpus"], [75, 3, 1, "", "static_num_ivy_arrays_on_dev"], [75, 3, 1, "", "static_one_hot"], [75, 3, 1, "", "static_ones"], [75, 3, 1, "", "static_ones_like"], [75, 3, 1, "", "static_outer"], [75, 3, 1, "", "static_outputs_to_ivy_arrays"], [75, 3, 1, "", "static_percent_used_mem_on_dev"], [75, 3, 1, "", "static_permute_dims"], [75, 3, 1, "", "static_pinv"], [75, 3, 1, "", "static_positive"], [75, 3, 1, "", "static_pow"], [75, 3, 1, "", "static_print_all_arrays_in_memory"], [75, 3, 1, "", "static_print_all_ivy_arrays_on_dev"], [75, 3, 1, "", "static_prod"], [75, 3, 1, "", "static_promote_types"], [75, 3, 1, "", "static_qr"], [75, 3, 1, "", "static_queue_timeout"], [75, 3, 1, "", "static_random_normal"], [75, 3, 1, "", "static_relu"], [75, 3, 1, "", "static_remainder"], [75, 3, 1, "", "static_repeat"], [75, 3, 1, "", "static_reshape"], [75, 3, 1, "", "static_result_type"], [75, 3, 1, "", "static_round"], [75, 3, 1, "", "static_scaled_dot_product_attention"], [75, 3, 1, "", "static_scatter_flat"], [75, 3, 1, "", "static_scatter_nd"], [75, 3, 1, "", "static_seed"], [75, 3, 1, "", "static_set_default_device"], [75, 3, 1, "", "static_set_default_dtype"], [75, 3, 1, "", "static_set_default_float_dtype"], [75, 3, 1, "", "static_set_default_int_dtype"], [75, 3, 1, "", "static_set_min_base"], [75, 3, 1, "", "static_set_min_denominator"], [75, 3, 1, "", "static_set_queue_timeout"], [75, 3, 1, "", "static_set_split_factor"], [75, 3, 1, "", "static_set_tmp_dir"], [75, 3, 1, "", "static_set_with_grads"], [75, 3, 1, "", "static_shape"], [75, 3, 1, "", "static_shape_to_tuple"], [75, 3, 1, "", "static_shuffle"], [75, 3, 1, "", "static_sigmoid"], [75, 3, 1, "", "static_sign"], [75, 3, 1, "", "static_sin"], [75, 3, 1, "", "static_sinh"], [75, 3, 1, "", "static_slogdet"], [75, 3, 1, "", "static_softmax"], [75, 3, 1, "", "static_solve"], [75, 3, 1, "", "static_split"], [75, 3, 1, "", "static_split_factor"], [75, 3, 1, "", "static_split_func_call"], [75, 3, 1, "", "static_sqrt"], [75, 3, 1, "", "static_square"], [75, 3, 1, "", "static_squeeze"], [75, 3, 1, "", "static_stable_divide"], [75, 3, 1, "", "static_stable_pow"], [75, 3, 1, "", "static_stack"], [75, 3, 1, "", "static_std"], [75, 3, 1, "", "static_stop_gradient"], [75, 3, 1, "", "static_sum"], [75, 3, 1, "", "static_supports_inplace"], [75, 3, 1, "", "static_svd"], [75, 3, 1, "", "static_svdvals"], [75, 3, 1, "", "static_swapaxes"], [75, 3, 1, "", "static_tensordot"], [75, 3, 1, "", "static_tile"], [75, 3, 1, "", "static_tmp_dir"], [75, 3, 1, "", "static_to_device"], [75, 3, 1, "", "static_to_list"], [75, 3, 1, "", "static_to_native_arrays_and_back"], [75, 3, 1, "", "static_to_numpy"], [75, 3, 1, "", "static_to_scalar"], [75, 3, 1, "", "static_total_mem_on_dev"], [75, 3, 1, "", "static_tpu_is_available"], [75, 3, 1, "", "static_trace"], [75, 3, 1, "", "static_tril"], [75, 3, 1, "", "static_triu"], [75, 3, 1, "", "static_trunc"], [75, 3, 1, "", "static_try_else_none"], [75, 3, 1, "", "static_type_promote_arrays"], [75, 3, 1, "", "static_unique_all"], [75, 3, 1, "", "static_unique_inverse"], [75, 3, 1, "", "static_unique_values"], [75, 3, 1, "", "static_unset_default_device"], [75, 3, 1, "", "static_unset_default_dtype"], [75, 3, 1, "", "static_unset_default_float_dtype"], [75, 3, 1, "", "static_unset_default_int_dtype"], [75, 3, 1, "", "static_unset_with_grads"], [75, 3, 1, "", "static_unstack"], [75, 3, 1, "", "static_used_mem_on_dev"], [75, 3, 1, "", "static_valid_dtype"], [75, 3, 1, "", "static_value_is_nan"], [75, 3, 1, "", "static_var"], [75, 3, 1, "", "static_variable"], [75, 3, 1, "", "static_variable_data"], [75, 3, 1, "", "static_vecdot"], [75, 3, 1, "", "static_vector_norm"], [75, 3, 1, "", "static_vector_to_skew_symmetric_matrix"], [75, 3, 1, "", "static_where"], [75, 3, 1, "", "static_with_grads"], [75, 3, 1, "", "static_zero_pad"], [75, 3, 1, "", "static_zeros"], [75, 3, 1, "", "static_zeros_like"], [75, 3, 1, "", "stop_gradient"], [75, 3, 1, "", "supports_inplace"], [75, 3, 1, "", "svd"], [75, 3, 1, "", "svdvals"], [75, 3, 1, "", "tensordot"], [75, 3, 1, "", "tmp_dir"], [75, 3, 1, "", "to_native_arrays_and_back"], [75, 3, 1, "", "to_scalar"], [75, 3, 1, "", "total_mem_on_dev"], [75, 3, 1, "", "tpu_is_available"], [75, 3, 1, "", "trace"], [75, 3, 1, "", "tril"], [75, 3, 1, "", "triu"], [75, 3, 1, "", "try_else_none"], [75, 3, 1, "", "type_promote_arrays"], [75, 3, 1, "", "unique_all"], [75, 3, 1, "", "unique_inverse"], [75, 3, 1, "", "unique_values"], [75, 3, 1, "", "unset_default_device"], [75, 3, 1, "", "unset_default_dtype"], [75, 3, 1, "", "unset_default_float_dtype"], [75, 3, 1, "", "unset_default_int_dtype"], [75, 3, 1, "", "unset_with_grads"], [75, 3, 1, "", "used_mem_on_dev"], [75, 3, 1, "", "valid_dtype"], [75, 3, 1, "", "value_is_nan"], [75, 3, 1, "", "variable"], [75, 3, 1, "", "variable_data"], [75, 3, 1, "", "vecdot"], [75, 3, 1, "", "vector_to_skew_symmetric_matrix"], [75, 3, 1, "", "where"], [75, 3, 1, "", "with_grads"], [75, 3, 1, "", "zeros"], [75, 3, 1, "", "zeros_like"]], "ivy.container.container.MultiDevContainer": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "at_dev"], [76, 3, 1, "", "at_devs"]], "ivy.container.container_methods": [[303, 1, 1, "", "abs"], [308, 1, 1, "", "acos"], [312, 1, 1, "", "acosh"], [616, 1, 1, "", "adam_step"], [620, 1, 1, "", "adam_update"], [316, 1, 1, "", "add"], [909, 1, 1, "", "all"], [541, 1, 1, "", "all_equal"], [913, 1, 1, "", "any"], [865, 1, 1, "", "argsort"], [321, 1, 1, "", "asin"], [325, 1, 1, "", "asinh"], [329, 1, 1, "", "atan"], [333, 1, 1, "", "atan2"], [337, 1, 1, "", "atanh"], [736, 1, 1, "", "binary_cross_entropy"], [341, 1, 1, "", "bitwise_and"], [345, 1, 1, "", "bitwise_invert"], [349, 1, 1, "", "bitwise_left_shift"], [353, 1, 1, "", "bitwise_or"], [357, 1, 1, "", "bitwise_right_shift"], [361, 1, 1, "", "bitwise_xor"], [224, 1, 1, "", "can_cast"], [365, 1, 1, "", "ceil"], [752, 1, 1, "", "clip"], [552, 1, 1, "", "clip_vector_norm"], [757, 1, 1, "", "concat"], [761, 1, 1, "", "constant_pad"], [369, 1, 1, "", "cos"], [373, 1, 1, "", "cosh"], [741, 1, 1, "", "cross_entropy"], [377, 1, 1, "", "divide"], [876, 1, 1, "", "einsum"], [382, 1, 1, "", "equal"], [386, 1, 1, "", "erf"], [390, 1, 1, "", "exp"], [765, 1, 1, "", "expand_dims"], [394, 1, 1, "", "expm1"], [769, 1, 1, "", "flip"], [398, 1, 1, "", "floor"], [402, 1, 1, "", "floor_divide"], [569, 1, 1, "", "gather_nd"], [625, 1, 1, "", "gradient_descent_update"], [406, 1, 1, "", "greater"], [410, 1, 1, "", "greater_equal"], [629, 1, 1, "", "is_variable"], [414, 1, 1, "", "isfinite"], [418, 1, 1, "", "isinf"], [422, 1, 1, "", "isnan"], [633, 1, 1, "", "lamb_update"], [637, 1, 1, "", "lars_update"], [834, 1, 1, "", "layer_norm"], [426, 1, 1, "", "less"], [430, 1, 1, "", "less_equal"], [434, 1, 1, "", "log"], [438, 1, 1, "", "log10"], [442, 1, 1, "", "log1p"], [446, 1, 1, "", "log2"], [450, 1, 1, "", "logaddexp"], [454, 1, 1, "", "logical_and"], [458, 1, 1, "", "logical_not"], [462, 1, 1, "", "logical_or"], [466, 1, 1, "", "logical_xor"], [687, 1, 1, "", "matmul"], [880, 1, 1, "", "max"], [884, 1, 1, "", "mean"], [888, 1, 1, "", "min"], [472, 1, 1, "", "multiply"], [477, 1, 1, "", "negative"], [481, 1, 1, "", "not_equal"], [641, 1, 1, "", "optimizer_update"], [773, 1, 1, "", "permute_dims"], [485, 1, 1, "", "positive"], [489, 1, 1, "", "pow"], [892, 1, 1, "", "prod"], [843, 1, 1, "", "random_uniform"], [493, 1, 1, "", "remainder"], [777, 1, 1, "", "repeat"], [781, 1, 1, "", "reshape"], [785, 1, 1, "", "roll"], [497, 1, 1, "", "round"], [501, 1, 1, "", "sign"], [505, 1, 1, "", "sin"], [509, 1, 1, "", "sinh"], [167, 1, 1, "", "softplus"], [870, 1, 1, "", "sort"], [746, 1, 1, "", "sparse_cross_entropy"], [513, 1, 1, "", "sqrt"], [517, 1, 1, "", "square"], [791, 1, 1, "", "squeeze"], [795, 1, 1, "", "stack"], [305, 1, 1, "", "static_abs"], [618, 1, 1, "", "static_adam_step"], [622, 1, 1, "", "static_adam_update"], [318, 1, 1, "", "static_add"], [543, 1, 1, "", "static_all_equal"], [867, 1, 1, "", "static_argsort"], [738, 1, 1, "", "static_binary_cross_entropy"], [226, 1, 1, "", "static_can_cast"], [754, 1, 1, "", "static_clip"], [743, 1, 1, "", "static_cross_entropy"], [379, 1, 1, "", "static_divide"], [571, 1, 1, "", "static_gather_nd"], [627, 1, 1, "", "static_gradient_descent_update"], [631, 1, 1, "", "static_is_variable"], [635, 1, 1, "", "static_lamb_update"], [639, 1, 1, "", "static_lars_update"], [474, 1, 1, "", "static_multiply"], [643, 1, 1, "", "static_optimizer_update"], [840, 1, 1, "", "static_randint"], [845, 1, 1, "", "static_random_uniform"], [787, 1, 1, "", "static_roll"], [169, 1, 1, "", "static_softplus"], [872, 1, 1, "", "static_sort"], [748, 1, 1, "", "static_sparse_cross_entropy"], [520, 1, 1, "", "static_subtract"], [525, 1, 1, "", "static_tan"], [530, 1, 1, "", "static_tanh"], [856, 1, 1, "", "static_unique_counts"], [896, 1, 1, "", "std"], [522, 1, 1, "", "subtract"], [900, 1, 1, "", "sum"], [799, 1, 1, "", "swapaxes"], [527, 1, 1, "", "tan"], [532, 1, 1, "", "tanh"], [803, 1, 1, "", "tile"], [536, 1, 1, "", "trunc"], [858, 1, 1, "", "unique_counts"], [904, 1, 1, "", "var"], [807, 1, 1, "", "zero_pad"]], "ivy.container.creation": [[78, 2, 1, "", "ContainerWithCreation"]], "ivy.container.data_type": [[80, 2, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[80, 3, 1, "", "can_cast"], [80, 3, 1, "", "static_can_cast"]], "ivy.container.device": [[82, 2, 1, "", "ContainerWithDevice"]], "ivy.container.elementwise": [[84, 2, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[84, 3, 1, "", "abs"], [84, 3, 1, "", "acos"], [84, 3, 1, "", "acosh"], [84, 3, 1, "", "add"], [84, 3, 1, "", "asin"], [84, 3, 1, "", "asinh"], [84, 3, 1, "", "atan"], [84, 3, 1, "", "atan2"], [84, 3, 1, "", "atanh"], [84, 3, 1, "", "bitwise_and"], [84, 3, 1, "", "bitwise_invert"], [84, 3, 1, "", "bitwise_left_shift"], [84, 3, 1, "", "bitwise_or"], [84, 3, 1, "", "bitwise_right_shift"], [84, 3, 1, "", "bitwise_xor"], [84, 3, 1, "", "ceil"], [84, 3, 1, "", "cos"], [84, 3, 1, "", "cosh"], [84, 3, 1, "", "divide"], [84, 3, 1, "", "equal"], [84, 3, 1, "", "erf"], [84, 3, 1, "", "exp"], [84, 3, 1, "", "expm1"], [84, 3, 1, "", "floor"], [84, 3, 1, "", "floor_divide"], [84, 3, 1, "", "greater"], [84, 3, 1, "", "greater_equal"], [84, 3, 1, "", "isfinite"], [84, 3, 1, "", "isinf"], [84, 3, 1, "", "isnan"], [84, 3, 1, "", "less"], [84, 3, 1, "", "less_equal"], [84, 3, 1, "", "log"], [84, 3, 1, "", "log10"], [84, 3, 1, "", "log1p"], [84, 3, 1, "", "log2"], [84, 3, 1, "", "logaddexp"], [84, 3, 1, "", "logical_and"], [84, 3, 1, "", "logical_not"], [84, 3, 1, "", "logical_or"], [84, 3, 1, "", "logical_xor"], [84, 3, 1, "", "multiply"], [84, 3, 1, "", "negative"], [84, 3, 1, "", "not_equal"], [84, 3, 1, "", "positive"], [84, 3, 1, "", "pow"], [84, 3, 1, "", "remainder"], [84, 3, 1, "", "round"], [84, 3, 1, "", "sign"], [84, 3, 1, "", "sin"], [84, 3, 1, "", "sinh"], [84, 3, 1, "", "sqrt"], [84, 3, 1, "", "square"], [84, 3, 1, "", "static_abs"], [84, 3, 1, "", "static_add"], [84, 3, 1, "", "static_divide"], [84, 3, 1, "", "static_multiply"], [84, 3, 1, "", "static_subtract"], [84, 3, 1, "", "static_tan"], [84, 3, 1, "", "static_tanh"], [84, 3, 1, "", "subtract"], [84, 3, 1, "", "tan"], [84, 3, 1, "", "tanh"], [84, 3, 1, "", "trunc"]], "ivy.container.general": [[86, 2, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[86, 3, 1, "", "all_equal"], [86, 3, 1, "", "clip_vector_norm"], [86, 3, 1, "", "gather_nd"], [86, 3, 1, "", "static_all_equal"], [86, 3, 1, "", "static_gather_nd"]], "ivy.container.gradients": [[88, 2, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[88, 3, 1, "", "adam_step"], [88, 3, 1, "", "adam_update"], [88, 3, 1, "", "gradient_descent_update"], [88, 3, 1, "", "is_variable"], [88, 3, 1, "", "lamb_update"], [88, 3, 1, "", "lars_update"], [88, 3, 1, "", "optimizer_update"], [88, 3, 1, "", "static_adam_step"], [88, 3, 1, "", "static_adam_update"], [88, 3, 1, "", "static_gradient_descent_update"], [88, 3, 1, "", "static_is_variable"], [88, 3, 1, "", "static_lamb_update"], [88, 3, 1, "", "static_lars_update"], [88, 3, 1, "", "static_optimizer_update"]], "ivy.container.image": [[90, 2, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[92, 2, 1, "", "ContainerWithLayers"]], "ivy.container.linear_algebra": [[94, 2, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[94, 3, 1, "", "matmul"]], "ivy.container.losses": [[96, 2, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[96, 3, 1, "", "binary_cross_entropy"], [96, 3, 1, "", "cross_entropy"], [96, 3, 1, "", "sparse_cross_entropy"], [96, 3, 1, "", "static_binary_cross_entropy"], [96, 3, 1, "", "static_cross_entropy"], [96, 3, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[98, 2, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[98, 3, 1, "", "clip"], [98, 3, 1, "", "concat"], [98, 3, 1, "", "constant_pad"], [98, 3, 1, "", "expand_dims"], [98, 3, 1, "", "flip"], [98, 3, 1, "", "permute_dims"], [98, 3, 1, "", "repeat"], [98, 3, 1, "", "reshape"], [98, 3, 1, "", "roll"], [98, 3, 1, "", "squeeze"], [98, 3, 1, "", "stack"], [98, 3, 1, "", "static_clip"], [98, 3, 1, "", "static_roll"], [98, 3, 1, "", "swapaxes"], [98, 3, 1, "", "tile"], [98, 3, 1, "", "zero_pad"]], "ivy.container.norms": [[100, 2, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[100, 3, 1, "", "layer_norm"]], "ivy.container.random": [[102, 2, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[102, 3, 1, "", "random_uniform"], [102, 3, 1, "", "static_randint"], [102, 3, 1, "", "static_random_uniform"]], "ivy.container.searching": [[104, 2, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[106, 2, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[106, 3, 1, "", "static_unique_counts"], [106, 3, 1, "", "unique_counts"]], "ivy.container.sorting": [[108, 2, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[108, 3, 1, "", "argsort"], [108, 3, 1, "", "sort"], [108, 3, 1, "", "static_argsort"], [108, 3, 1, "", "static_sort"]], "ivy.container.statistical": [[110, 2, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[110, 3, 1, "", "einsum"], [110, 3, 1, "", "max"], [110, 3, 1, "", "mean"], [110, 3, 1, "", "min"], [110, 3, 1, "", "prod"], [110, 3, 1, "", "std"], [110, 3, 1, "", "sum"], [110, 3, 1, "", "var"]], "ivy.container.utility": [[112, 2, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[112, 3, 1, "", "all"], [112, 3, 1, "", "any"]], "ivy.container.wrapping": [[114, 1, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[150, 1, 1, "", "handle_nestable"], [151, 1, 1, "", "handle_out_argument"], [152, 1, 1, "", "infer_device"], [153, 1, 1, "", "infer_dtype"], [154, 1, 1, "", "inputs_to_ivy_arrays"], [155, 1, 1, "", "inputs_to_native_arrays"], [156, 1, 1, "", "outputs_to_ivy_arrays"], [157, 1, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[159, 0, 0, "-", "activations"], [171, 0, 0, "-", "compilation"], [173, 0, 0, "-", "constants"], [174, 0, 0, "-", "creation"], [213, 0, 0, "-", "data_type"], [250, 0, 0, "-", "device"], [300, 0, 0, "-", "elementwise"], [538, 0, 0, "-", "general"], [612, 0, 0, "-", "gradients"], [650, 0, 0, "-", "layers"], [663, 0, 0, "-", "linear_algebra"], [733, 0, 0, "-", "losses"], [749, 0, 0, "-", "manipulation"], [809, 0, 0, "-", "meta"], [813, 0, 0, "-", "nest"], [831, 0, 0, "-", "norms"], [836, 0, 0, "-", "random"], [848, 0, 0, "-", "searching"], [853, 0, 0, "-", "set"], [862, 0, 0, "-", "sorting"], [873, 0, 0, "-", "statistical"], [906, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[160, 1, 1, "", "gelu"], [161, 1, 1, "", "leaky_relu"], [162, 1, 1, "", "relu"], [163, 1, 1, "", "sigmoid"], [164, 1, 1, "", "softmax"], [168, 1, 1, "", "softplus"], [170, 1, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[172, 1, 1, "", "compile"]], "ivy.functional.ivy.constants": [[173, 5, 1, "", "e"], [173, 5, 1, "", "inf"], [173, 5, 1, "", "nan"], [173, 5, 1, "", "newaxis"], [173, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[175, 1, 1, "", "arange"], [174, 1, 1, "", "array"], [178, 1, 1, "", "asarray"], [179, 1, 1, "", "empty"], [182, 1, 1, "", "empty_like"], [183, 1, 1, "", "eye"], [186, 1, 1, "", "from_dlpack"], [187, 1, 1, "", "full"], [190, 1, 1, "", "full_like"], [191, 1, 1, "", "linspace"], [192, 1, 1, "", "logspace"], [195, 1, 1, "", "meshgrid"], [198, 1, 1, "", "native_array"], [199, 1, 1, "", "ones"], [202, 1, 1, "", "ones_like"], [205, 1, 1, "", "tril"], [208, 1, 1, "", "triu"], [209, 1, 1, "", "zeros"], [212, 1, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[213, 2, 1, "", "DefaultDtype"], [213, 2, 1, "", "DefaultFloatDtype"], [213, 2, 1, "", "DefaultIntDtype"], [217, 1, 1, "", "as_ivy_dtype"], [218, 1, 1, "", "as_native_dtype"], [219, 1, 1, "", "astype"], [220, 1, 1, "", "broadcast_arrays"], [221, 1, 1, "", "broadcast_to"], [225, 1, 1, "", "can_cast"], [227, 1, 1, "", "closest_valid_dtype"], [228, 1, 1, "", "default_dtype"], [229, 1, 1, "", "default_float_dtype"], [230, 1, 1, "", "default_int_dtype"], [231, 1, 1, "", "dtype"], [232, 1, 1, "", "dtype_bits"], [233, 1, 1, "", "finfo"], [234, 1, 1, "", "function_supported_dtypes"], [235, 1, 1, "", "function_unsupported_dtypes"], [236, 1, 1, "", "iinfo"], [237, 1, 1, "", "invalid_dtype"], [238, 1, 1, "", "is_float_dtype"], [239, 1, 1, "", "is_int_dtype"], [240, 1, 1, "", "promote_types"], [241, 1, 1, "", "result_type"], [242, 1, 1, "", "set_default_dtype"], [243, 1, 1, "", "set_default_float_dtype"], [244, 1, 1, "", "set_default_int_dtype"], [245, 1, 1, "", "type_promote_arrays"], [246, 1, 1, "", "unset_default_dtype"], [247, 1, 1, "", "unset_default_float_dtype"], [248, 1, 1, "", "unset_default_int_dtype"], [249, 1, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[213, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[213, 3, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[213, 3, 1, "", "__init__"]], "ivy.functional.ivy.device": [[250, 2, 1, "", "DefaultDevice"], [252, 2, 1, "", "DevClonedItem"], [253, 2, 1, "", "DevClonedIter"], [254, 2, 1, "", "DevClonedNest"], [255, 2, 1, "", "DevDistItem"], [256, 2, 1, "", "DevDistIter"], [257, 2, 1, "", "DevDistNest"], [250, 2, 1, "", "DevManager"], [259, 2, 1, "", "DevMapper"], [260, 2, 1, "", "DevMapperMultiProc"], [250, 2, 1, "", "MultiDev"], [262, 2, 1, "", "MultiDevItem"], [263, 2, 1, "", "MultiDevIter"], [264, 2, 1, "", "MultiDevNest"], [265, 2, 1, "", "Profiler"], [266, 1, 1, "", "as_ivy_dev"], [267, 1, 1, "", "as_native_dev"], [268, 1, 1, "", "clear_mem_on_dev"], [269, 1, 1, "", "default_device"], [270, 1, 1, "", "dev"], [271, 1, 1, "", "dev_clone"], [272, 1, 1, "", "dev_clone_array"], [273, 1, 1, "", "dev_clone_iter"], [274, 1, 1, "", "dev_clone_nest"], [275, 1, 1, "", "dev_dist"], [276, 1, 1, "", "dev_dist_array"], [277, 1, 1, "", "dev_dist_iter"], [278, 1, 1, "", "dev_dist_nest"], [279, 1, 1, "", "dev_unify"], [280, 1, 1, "", "dev_unify_array"], [281, 1, 1, "", "dev_unify_iter"], [282, 1, 1, "", "dev_unify_nest"], [283, 1, 1, "", "dev_util"], [284, 1, 1, "", "get_all_ivy_arrays_on_dev"], [285, 1, 1, "", "gpu_is_available"], [286, 1, 1, "", "num_cpu_cores"], [287, 1, 1, "", "num_gpus"], [288, 1, 1, "", "num_ivy_arrays_on_dev"], [289, 1, 1, "", "percent_used_mem_on_dev"], [290, 1, 1, "", "print_all_ivy_arrays_on_dev"], [291, 1, 1, "", "set_default_device"], [292, 1, 1, "", "set_split_factor"], [293, 1, 1, "", "split_factor"], [294, 1, 1, "", "split_func_call"], [295, 1, 1, "", "to_device"], [296, 1, 1, "", "total_mem_on_dev"], [297, 1, 1, "", "tpu_is_available"], [298, 1, 1, "", "unset_default_device"], [299, 1, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[250, 3, 1, "", "__enter__"], [250, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.DevManager": [[250, 3, 1, "", "__init__"], [250, 3, 1, "", "da_tune_step"], [250, 4, 1, "", "dim_size"], [250, 3, 1, "", "ds_tune_step"], [250, 3, 1, "", "map"], [250, 3, 1, "", "repeated_config_check"], [250, 4, 1, "", "tune_step"], [250, 4, 1, "", "tuned"]], "ivy.functional.ivy.device.DevMapper": [[259, 3, 1, "", "__init__"], [259, 3, 1, "", "map"]], "ivy.functional.ivy.device.DevMapperMultiProc": [[260, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDev": [[250, 3, 1, "", "__init__"]], "ivy.functional.ivy.device.MultiDevItem": [[262, 3, 1, "", "__init__"], [262, 3, 1, "", "items"], [262, 3, 1, "", "keys"], [262, 4, 1, "", "shape"], [262, 3, 1, "", "values"]], "ivy.functional.ivy.device.MultiDevIter": [[263, 3, 1, "", "__init__"], [263, 3, 1, "", "at_dev"], [263, 3, 1, "", "at_devs"]], "ivy.functional.ivy.device.MultiDevNest": [[264, 3, 1, "", "__init__"], [264, 3, 1, "", "at_dev"]], "ivy.functional.ivy.device.Profiler": [[265, 3, 1, "", "__init__"], [265, 3, 1, "", "start"], [265, 3, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[304, 1, 1, "", "abs"], [309, 1, 1, "", "acos"], [313, 1, 1, "", "acosh"], [317, 1, 1, "", "add"], [322, 1, 1, "", "asin"], [326, 1, 1, "", "asinh"], [330, 1, 1, "", "atan"], [334, 1, 1, "", "atan2"], [338, 1, 1, "", "atanh"], [342, 1, 1, "", "bitwise_and"], [346, 1, 1, "", "bitwise_invert"], [350, 1, 1, "", "bitwise_left_shift"], [354, 1, 1, "", "bitwise_or"], [358, 1, 1, "", "bitwise_right_shift"], [362, 1, 1, "", "bitwise_xor"], [366, 1, 1, "", "ceil"], [370, 1, 1, "", "cos"], [374, 1, 1, "", "cosh"], [378, 1, 1, "", "divide"], [383, 1, 1, "", "equal"], [387, 1, 1, "", "erf"], [391, 1, 1, "", "exp"], [395, 1, 1, "", "expm1"], [399, 1, 1, "", "floor"], [403, 1, 1, "", "floor_divide"], [407, 1, 1, "", "greater"], [411, 1, 1, "", "greater_equal"], [415, 1, 1, "", "isfinite"], [419, 1, 1, "", "isinf"], [423, 1, 1, "", "isnan"], [427, 1, 1, "", "less"], [431, 1, 1, "", "less_equal"], [435, 1, 1, "", "log"], [439, 1, 1, "", "log10"], [443, 1, 1, "", "log1p"], [447, 1, 1, "", "log2"], [451, 1, 1, "", "logaddexp"], [455, 1, 1, "", "logical_and"], [459, 1, 1, "", "logical_not"], [463, 1, 1, "", "logical_or"], [467, 1, 1, "", "logical_xor"], [468, 1, 1, "", "maximum"], [469, 1, 1, "", "minimum"], [473, 1, 1, "", "multiply"], [478, 1, 1, "", "negative"], [482, 1, 1, "", "not_equal"], [486, 1, 1, "", "positive"], [490, 1, 1, "", "pow"], [494, 1, 1, "", "remainder"], [498, 1, 1, "", "round"], [502, 1, 1, "", "sign"], [506, 1, 1, "", "sin"], [510, 1, 1, "", "sinh"], [514, 1, 1, "", "sqrt"], [518, 1, 1, "", "square"], [523, 1, 1, "", "subtract"], [528, 1, 1, "", "tan"], [533, 1, 1, "", "tanh"], [537, 1, 1, "", "trunc"]], "ivy.functional.ivy.general": [[542, 1, 1, "", "all_equal"], [544, 1, 1, "", "arg_info"], [545, 1, 1, "", "arg_names"], [546, 1, 1, "", "array_equal"], [547, 1, 1, "", "arrays_equal"], [548, 1, 1, "", "assert_supports_inplace"], [549, 1, 1, "", "cache_fn"], [550, 1, 1, "", "clip_matrix_norm"], [553, 1, 1, "", "clip_vector_norm"], [554, 1, 1, "", "container_types"], [555, 1, 1, "", "copy_array"], [556, 1, 1, "", "cumprod"], [557, 1, 1, "", "cumsum"], [558, 1, 1, "", "current_backend_str"], [559, 1, 1, "", "default"], [560, 1, 1, "", "einops_rearrange"], [561, 1, 1, "", "einops_reduce"], [562, 1, 1, "", "einops_repeat"], [563, 1, 1, "", "exists"], [564, 1, 1, "", "floormod"], [565, 1, 1, "", "fourier_encode"], [566, 1, 1, "", "gather"], [570, 1, 1, "", "gather_nd"], [572, 1, 1, "", "get_all_arrays_in_memory"], [573, 1, 1, "", "get_min_base"], [574, 1, 1, "", "get_min_denominator"], [575, 1, 1, "", "get_num_dims"], [576, 1, 1, "", "get_referrers_recursive"], [577, 1, 1, "", "has_nans"], [578, 1, 1, "", "indices_where"], [579, 1, 1, "", "inplace_arrays_supported"], [580, 1, 1, "", "inplace_decrement"], [581, 1, 1, "", "inplace_increment"], [582, 1, 1, "", "inplace_update"], [583, 1, 1, "", "inplace_variables_supported"], [584, 1, 1, "", "is_array"], [585, 1, 1, "", "is_ivy_array"], [586, 1, 1, "", "is_ivy_container"], [587, 1, 1, "", "is_native_array"], [588, 1, 1, "", "match_kwargs"], [589, 1, 1, "", "multiprocessing"], [590, 1, 1, "", "num_arrays_in_memory"], [591, 1, 1, "", "one_hot"], [592, 1, 1, "", "print_all_arrays_in_memory"], [593, 1, 1, "", "queue_timeout"], [594, 1, 1, "", "scatter_flat"], [595, 1, 1, "", "scatter_nd"], [596, 1, 1, "", "set_min_base"], [597, 1, 1, "", "set_min_denominator"], [598, 1, 1, "", "set_queue_timeout"], [599, 1, 1, "", "set_tmp_dir"], [600, 1, 1, "", "shape"], [601, 1, 1, "", "shape_to_tuple"], [602, 1, 1, "", "stable_divide"], [603, 1, 1, "", "stable_pow"], [604, 1, 1, "", "supports_inplace"], [605, 1, 1, "", "tmp_dir"], [606, 1, 1, "", "to_list"], [607, 1, 1, "", "to_numpy"], [608, 1, 1, "", "to_scalar"], [609, 1, 1, "", "try_else_none"], [610, 1, 1, "", "unstack"], [611, 1, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[612, 2, 1, "", "GradientTracking"], [617, 1, 1, "", "adam_step"], [621, 1, 1, "", "adam_update"], [623, 1, 1, "", "execute_with_gradients"], [626, 1, 1, "", "gradient_descent_update"], [630, 1, 1, "", "is_variable"], [634, 1, 1, "", "lamb_update"], [638, 1, 1, "", "lars_update"], [642, 1, 1, "", "optimizer_update"], [644, 1, 1, "", "set_with_grads"], [645, 1, 1, "", "stop_gradient"], [646, 1, 1, "", "unset_with_grads"], [647, 1, 1, "", "variable"], [648, 1, 1, "", "variable_data"], [649, 1, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[612, 3, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[651, 1, 1, "", "conv1d"], [652, 1, 1, "", "conv1d_transpose"], [653, 1, 1, "", "conv2d"], [654, 1, 1, "", "conv2d_transpose"], [655, 1, 1, "", "conv3d"], [656, 1, 1, "", "conv3d_transpose"], [657, 1, 1, "", "depthwise_conv2d"], [658, 1, 1, "", "dropout"], [659, 1, 1, "", "linear"], [660, 1, 1, "", "lstm_update"], [661, 1, 1, "", "multi_head_attention"], [662, 1, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[666, 1, 1, "", "cholesky"], [669, 1, 1, "", "cross"], [672, 1, 1, "", "det"], [675, 1, 1, "", "diagonal"], [678, 1, 1, "", "eigh"], [681, 1, 1, "", "eigvalsh"], [684, 1, 1, "", "inv"], [688, 1, 1, "", "matmul"], [691, 1, 1, "", "matrix_norm"], [692, 1, 1, "", "matrix_power"], [695, 1, 1, "", "matrix_rank"], [698, 1, 1, "", "matrix_transpose"], [701, 1, 1, "", "outer"], [704, 1, 1, "", "pinv"], [707, 1, 1, "", "qr"], [708, 1, 1, "", "slogdet"], [711, 1, 1, "", "solve"], [714, 1, 1, "", "svd"], [717, 1, 1, "", "svdvals"], [720, 1, 1, "", "tensordot"], [723, 1, 1, "", "trace"], [726, 1, 1, "", "vecdot"], [729, 1, 1, "", "vector_norm"], [732, 1, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[737, 1, 1, "", "binary_cross_entropy"], [742, 1, 1, "", "cross_entropy"], [747, 1, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[753, 1, 1, "", "clip"], [758, 1, 1, "", "concat"], [762, 1, 1, "", "constant_pad"], [766, 1, 1, "", "expand_dims"], [770, 1, 1, "", "flip"], [774, 1, 1, "", "permute_dims"], [778, 1, 1, "", "repeat"], [782, 1, 1, "", "reshape"], [786, 1, 1, "", "roll"], [788, 1, 1, "", "split"], [792, 1, 1, "", "squeeze"], [796, 1, 1, "", "stack"], [800, 1, 1, "", "swapaxes"], [804, 1, 1, "", "tile"], [808, 1, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[810, 1, 1, "", "fomaml_step"], [811, 1, 1, "", "maml_step"], [812, 1, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[814, 1, 1, "", "all_nested_indices"], [815, 1, 1, "", "copy_nest"], [816, 1, 1, "", "index_nest"], [817, 1, 1, "", "insert_into_nest_at_index"], [818, 1, 1, "", "insert_into_nest_at_indices"], [819, 1, 1, "", "map"], [820, 1, 1, "", "map_nest_at_index"], [821, 1, 1, "", "map_nest_at_indices"], [822, 1, 1, "", "multi_index_nest"], [823, 1, 1, "", "nested_any"], [824, 1, 1, "", "nested_indices_where"], [825, 1, 1, "", "nested_map"], [826, 1, 1, "", "nested_multi_map"], [827, 1, 1, "", "prune_nest_at_index"], [828, 1, 1, "", "prune_nest_at_indices"], [829, 1, 1, "", "set_nest_at_index"], [830, 1, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[835, 1, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[837, 1, 1, "", "multinomial"], [839, 1, 1, "", "randint"], [841, 1, 1, "", "random_normal"], [844, 1, 1, "", "random_uniform"], [846, 1, 1, "", "seed"], [847, 1, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[849, 1, 1, "", "argmax"], [850, 1, 1, "", "argmin"], [851, 1, 1, "", "nonzero"], [852, 1, 1, "", "where"]], "ivy.functional.ivy.set": [[854, 1, 1, "", "unique_all"], [859, 1, 1, "", "unique_counts"], [860, 1, 1, "", "unique_inverse"], [861, 1, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[866, 1, 1, "", "argsort"], [871, 1, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[877, 1, 1, "", "einsum"], [881, 1, 1, "", "max"], [885, 1, 1, "", "mean"], [889, 1, 1, "", "min"], [893, 1, 1, "", "prod"], [897, 1, 1, "", "std"], [901, 1, 1, "", "sum"], [905, 1, 1, "", "var"]], "ivy.functional.ivy.utility": [[910, 1, 1, "", "all"], [914, 1, 1, "", "any"]], "ivy.inspection": [[919, 1, 1, "", "add_array_specs"], [920, 1, 1, "", "fn_array_spec"]], "ivy.stateful": [[923, 0, 0, "-", "activations"], [926, 0, 0, "-", "converters"], [928, 0, 0, "-", "initializers"], [937, 0, 0, "-", "layers"], [949, 0, 0, "-", "module"], [951, 0, 0, "-", "norms"], [953, 0, 0, "-", "optimizers"], [959, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[924, 2, 1, "", "GEGLU"], [925, 2, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[924, 3, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[925, 3, 1, "", "__init__"]], "ivy.stateful.converters": [[927, 1, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[928, 2, 1, "", "Constant"], [930, 2, 1, "", "FirstLayerSiren"], [931, 2, 1, "", "GlorotUniform"], [928, 2, 1, "", "KaimingNormal"], [933, 2, 1, "", "Ones"], [934, 2, 1, "", "Siren"], [928, 2, 1, "", "Uniform"], [936, 2, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[928, 3, 1, "", "__init__"], [928, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[930, 3, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[931, 3, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[928, 3, 1, "", "__init__"], [928, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[933, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[934, 3, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[928, 3, 1, "", "__init__"], [928, 3, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[936, 3, 1, "", "__init__"]], "ivy.stateful.layers": [[938, 2, 1, "", "Conv1D"], [939, 2, 1, "", "Conv1DTranspose"], [940, 2, 1, "", "Conv2D"], [941, 2, 1, "", "Conv2DTranspose"], [942, 2, 1, "", "Conv3D"], [943, 2, 1, "", "Conv3DTranspose"], [944, 2, 1, "", "DepthwiseConv2D"], [945, 2, 1, "", "Dropout"], [946, 2, 1, "", "LSTM"], [947, 2, 1, "", "Linear"], [948, 2, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[938, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[939, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[940, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[941, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[942, 3, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[943, 3, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[944, 3, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[945, 3, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[946, 3, 1, "", "__init__"], [946, 3, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[947, 3, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[948, 3, 1, "", "__init__"]], "ivy.stateful.module": [[950, 2, 1, "", "Module"]], "ivy.stateful.module.Module": [[950, 3, 1, "", "__init__"], [950, 3, 1, "", "build"], [950, 4, 1, "", "build_mode"], [950, 4, 1, "", "built"], [950, 3, 1, "", "check_submod_rets"], [950, 3, 1, "", "get_mod_key"], [950, 3, 1, "", "mod_depth"], [950, 3, 1, "", "mod_height"], [950, 3, 1, "", "mod_with_top_mod_key_chain"], [950, 3, 1, "", "save_weights"], [950, 3, 1, "", "show_mod_in_top_mod"], [950, 3, 1, "", "show_structure"], [950, 3, 1, "", "show_v_in_top_v"], [950, 3, 1, "", "sub_mods"], [950, 3, 1, "", "track_submod_call_order"], [950, 3, 1, "", "track_submod_rets"], [950, 3, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[952, 2, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[952, 3, 1, "", "__init__"]], "ivy.stateful.optimizers": [[954, 2, 1, "", "Adam"], [955, 2, 1, "", "LAMB"], [956, 2, 1, "", "LARS"], [957, 2, 1, "", "Optimizer"], [958, 2, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[954, 3, 1, "", "__init__"], [954, 3, 1, "", "set_state"], [954, 4, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[955, 3, 1, "", "__init__"], [955, 3, 1, "", "set_state"], [955, 4, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[956, 3, 1, "", "__init__"], [956, 3, 1, "", "set_state"], [956, 4, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[957, 3, 1, "", "__init__"], [957, 3, 1, "", "set_state"], [957, 3, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[958, 3, 1, "", "__init__"], [958, 3, 1, "", "set_state"], [958, 4, 1, "", "state"]], "ivy.stateful.sequential": [[960, 2, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[960, 3, 1, "", "__init__"]], "ivy.verbosity": [[963, 1, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 116, 122, 131, 148], "handler": [0, 131], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 915], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 148], "competit": 15, "do": 15, "work": [15, 21], "The": [15, 19, 133, 148], "arrai": [15, 23, 119, 124, 129, 133, 166, 177, 181, 185, 189, 194, 197, 201, 204, 207, 211, 223, 302, 307, 311, 315, 320, 324, 328, 332, 336, 340, 344, 348, 352, 356, 360, 364, 368, 372, 376, 381, 385, 389, 393, 397, 401, 405, 409, 413, 417, 421, 425, 429, 433, 437, 441, 445, 449, 453, 457, 461, 465, 471, 476, 480, 484, 488, 492, 496, 500, 504, 508, 512, 516, 521, 526, 531, 535, 540, 568, 615, 665, 668, 671, 674, 677, 680, 683, 686, 690, 694, 697, 700, 703, 706, 710, 713, 716, 719, 722, 725, 728, 731, 735, 740, 745, 751, 756, 760, 764, 768, 772, 776, 780, 784, 790, 794, 798, 802, 806, 833, 857, 864, 869, 875, 879, 883, 887, 891, 895, 899, 903, 908, 912], "api": [15, 20, 116, 119, 125, 131, 133, 135, 136], "why": 16, "unifi": [16, 133], "No": [16, 18], "more": 16, "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 915], "set": [18, 59, 105, 122, 853], "up": 18, "clone": 18, "ivi": [18, 116, 118, 120, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 169, 177, 178, 181, 182, 185, 186, 189, 190, 194, 195, 197, 198, 201, 202, 204, 205, 207, 208, 211, 212, 223, 224, 225, 226, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 328, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 368, 369, 370, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 389, 390, 391, 393, 394, 395, 397, 398, 399, 401, 402, 403, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 457, 458, 459, 461, 462, 463, 465, 466, 467, 471, 472, 473, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 540, 541, 542, 543, 552, 553, 568, 569, 570, 571, 615, 616, 617, 618, 620, 621, 622, 625, 626, 627, 629, 630, 631, 633, 634, 635, 637, 638, 639, 641, 642, 643, 665, 666, 668, 669, 671, 672, 674, 675, 677, 678, 680, 681, 683, 684, 686, 687, 688, 690, 691, 694, 695, 697, 698, 700, 701, 703, 704, 706, 707, 710, 711, 713, 714, 716, 717, 719, 720, 722, 723, 725, 726, 728, 729, 731, 732, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 751, 752, 753, 754, 756, 757, 758, 760, 761, 762, 764, 765, 766, 768, 769, 770, 772, 773, 774, 776, 777, 778, 780, 781, 782, 784, 785, 786, 787, 790, 791, 792, 794, 795, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 833, 834, 835, 839, 840, 843, 844, 845, 856, 857, 858, 859, 864, 865, 866, 867, 869, 870, 871, 872, 875, 876, 877, 879, 880, 881, 883, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 899, 900, 901, 903, 904, 905, 908, 909, 910, 912, 913, 914], "pycharm": 18, "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 134], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "github": 18, "codespac": 18, "pre": 18, "commit": [18, 19], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "run": 19, "test": [19, 119, 120], "local": 19, "open": 20, "task": 20, "function": [20, 121, 123, 125, 126, 127, 129, 131, 136, 148], "format": 20, "frontend": [20, 136], "build": [21, 131], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 148], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 33, 79, 120, 126, 134, 148, 213, 853, 854, 855, 859, 861], "class": [22, 133, 922], "activ": [24, 70, 159, 923], "arraywithactiv": 25, "convers": 26, "args_to_ivi": 27, "args_to_n": 28, "to_ivi": 29, "to_n": 30, "creation": [31, 77, 174], "arraywithcr": 32, "type": [33, 79, 121, 126, 148, 213], "arraywithdatatyp": 34, "devic": [35, 81, 127, 129, 250], "arraywithdevic": 36, "elementwis": [37, 83, 300], "arraywithelementwis": 38, "gener": [39, 85, 120, 538], "arraywithgener": 40, "gradient": [41, 87, 612], "arraywithgradi": 42, "imag": [43, 89], "arraywithimag": 44, "layer": [45, 91, 650, 937], "arraywithlay": 46, "linear": [47, 93, 659, 663, 947], "algebra": [47, 93, 663], "arraywithlinearalgebra": 48, "loss": [49, 95, 733], "arraywithloss": 50, "manipul": [51, 97, 749], "arraywithmanipul": 52, "norm": [53, 99, 831, 951], "arraywithnorm": 54, "random": [55, 101, 836], "arraywithrandom": 56, "search": [57, 103, 848], "arraywithsearch": 58, "arraywithset": 60, "sort": [61, 107, 862, 868, 869, 870, 871], "arraywithsort": 62, "statist": [63, 109, 873], "arraywithstatist": 64, "util": [65, 111, 906], "arraywithutil": 66, "wrap": [67, 113, 123], "add_ivy_array_instance_method": 68, "contain": [69, 74, 75, 125, 134, 167, 169, 224, 226, 303, 305, 308, 312, 316, 318, 321, 325, 329, 333, 337, 341, 345, 349, 353, 357, 361, 365, 369, 373, 377, 379, 382, 386, 390, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 438, 442, 446, 450, 454, 458, 462, 466, 472, 474, 477, 481, 485, 489, 493, 497, 501, 505, 509, 513, 517, 520, 522, 525, 527, 530, 532, 536, 541, 543, 552, 569, 571, 616, 618, 620, 622, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 687, 736, 738, 741, 743, 746, 748, 752, 754, 757, 761, 765, 769, 773, 777, 781, 785, 787, 791, 795, 799, 803, 807, 834, 840, 843, 845, 856, 858, 865, 867, 870, 872, 876, 880, 884, 888, 892, 896, 900, 904, 909, 913], "containerwithactiv": 71, "base": 72, "containerbas": 73, "multidevcontain": 76, "containerwithcr": 78, "containerwithdatatyp": 80, "containerwithdevic": 82, "containerwithelementwis": 84, "containerwithgener": 86, "containerwithgradi": 88, "containerwithimag": 90, "containerwithlay": 92, "containerwithlinearalgebra": 94, "containerwithloss": 96, "containerwithmanipul": 98, "containerwithnorm": 100, "containerwithrandom": 102, "containerwithsearch": 104, "containerwithset": 106, "containerwithsort": 108, "containerwithstatist": 110, "containerwithutil": 112, "add_ivy_container_instance_method": 114, "deep": 115, "dive": 115, "navig": 116, "code": 116, "categor": 116, "submodul": 116, "design": [116, 130, 915], "docstr": [117, 118], "exampl": [118, 129], "tan": [118, 524, 526, 527, 528], "roll": [118, 783, 784, 785, 786], "add": [118, 314, 315, 316, 317], "hypothesi": 120, "self": 120, "consist": 120, "explicit": 120, "test_array_funct": 120, "primari": 121, "composit": 121, "mix": 121, "standalon": 121, "nestabl": [121, 125, 129], "conveni": 121, "nativ": 124, "handl": 124, "instanc": [125, 133], "method": [125, 133, 134], "static": 125, "special": 125, "modul": [126, 127, 135, 949, 950], "argument": [126, 127, 128, 129], "other": [126, 127], "inplac": 128, "updat": 128, "out": [128, 129], "copi": 128, "dtype": [129, 231], "number": 129, "oper": [129, 133, 148], "integ": 129, "sequenc": 129, "block": 131, "framework": [131, 132, 922], "graph": [131, 136], "compil": [131, 136, 171, 172], "monkei": 133, "patch": 133, "construct": 134, "represent": 134, "recurs": 134, "built": 134, "ins": 134, "access": 134, "save": 134, "load": 134, "comparison": 134, "custom": [134, 148], "case": 134, "compartment": 134, "configur": 134, "network": [134, 136], "weight": 134, "state": [135, 148], "initi": [135, 928], "optim": [135, 953, 957], "transpil": 136, "role": 136, "convert": [136, 926], "model": [136, 143, 148], "builder": 138, "ecosystem": 139, "gym": [140, 147], "mech": 141, "memori": [142, 147], "robot": [144, 147], "vision": [145, 147], "extens": [146, 915], "appli": 147, "librari": 147, "mechan": 147, "faq": 148, "maintain": 148, "version": 148, "dynam": 148, "size": 148, "shape": [148, 600, 853, 854, 855, 859, 861], "check": 148, "control": 148, "flow": 148, "auto": 148, "differenti": 148, "replica": 148, "parallel": 148, "support": 148, "altern": 148, "structur": 148, "func": 149, "wrapper": 149, "handle_nest": 150, "handle_out_argu": 151, "infer_devic": 152, "infer_dtyp": 153, "inputs_to_ivy_arrai": 154, "inputs_to_native_arrai": 155, "outputs_to_ivy_arrai": 156, "to_native_arrays_and_back": 157, "gelu": [160, 925], "leaky_relu": 161, "relu": 162, "sigmoid": 163, "softmax": 164, "softplu": [165, 166, 167, 168], "static_softplu": 169, "tanh": [170, 529, 531, 532, 533], "constant": 173, "note": [174, 184, 186], "arang": 175, "asarrai": [176, 177, 178], "empti": 179, "empty_lik": [180, 181, 182], "ey": 183, "from_dlpack": [184, 185, 186], "full": 187, "full_lik": [188, 189, 190], "linspac": 191, "logspac": 192, "meshgrid": [193, 194, 195], "native_arrai": [196, 197, 198], "ones": 199, "ones_lik": [200, 201, 202], "tril": [203, 204, 205], "triu": [206, 207, 208], "zero": [209, 936], "zeros_lik": [210, 211, 212], "as_ivy_dtyp": 217, "as_native_dtyp": 218, "astyp": 219, "broadcast_arrai": 220, "broadcast_to": 221, "can_cast": [222, 223, 224, 225], "static_can_cast": 226, "closest_valid_dtyp": 227, "default_dtyp": 228, "default_float_dtyp": 229, "default_int_dtyp": 230, "dtype_bit": 232, "finfo": 233, "function_supported_dtyp": 234, "function_unsupported_dtyp": 235, "iinfo": 236, "invalid_dtyp": 237, "is_float_dtyp": 238, "is_int_dtyp": 239, "promote_typ": 240, "result_typ": 241, "set_default_dtyp": 242, "set_default_float_dtyp": 243, "set_default_int_dtyp": 244, "type_promote_arrai": 245, "unset_default_dtyp": 246, "unset_default_float_dtyp": 247, "unset_default_int_dtyp": 248, "valid_dtyp": 249, "devcloneditem": 252, "devclonedit": 253, "devclonednest": 254, "devdistitem": 255, "devdistit": 256, "devdistnest": 257, "devmapp": 259, "devmappermultiproc": 260, "multidevitem": 262, "multidevit": 263, "multidevnest": 264, "profil": 265, "as_ivy_dev": 266, "as_native_dev": 267, "clear_mem_on_dev": 268, "default_devic": 269, "dev": 270, "dev_clon": 271, "dev_clone_arrai": 272, "dev_clone_it": 273, "dev_clone_nest": 274, "dev_dist": 275, "dev_dist_arrai": 276, "dev_dist_it": 277, "dev_dist_nest": 278, "dev_unifi": 279, "dev_unify_arrai": 280, "dev_unify_it": 281, "dev_unify_nest": 282, "dev_util": 283, "get_all_ivy_arrays_on_dev": 284, "gpu_is_avail": 285, "num_cpu_cor": 286, "num_gpu": 287, "num_ivy_arrays_on_dev": 288, "percent_used_mem_on_dev": 289, "print_all_ivy_arrays_on_dev": 290, "set_default_devic": 291, "set_split_factor": 292, "split_factor": 293, "split_func_cal": 294, "to_devic": 295, "total_mem_on_dev": 296, "tpu_is_avail": 297, "unset_default_devic": 298, "used_mem_on_dev": 299, "ab": [301, 302, 303, 304], "static_ab": 305, "aco": [306, 307, 308, 309], "acosh": [310, 311, 312, 313], "static_add": 318, "asin": [319, 320, 321, 322], "asinh": [323, 324, 325, 326], "atan": [327, 328, 329, 330], "atan2": [331, 332, 333, 334], "atanh": [335, 336, 337, 338], "bitwise_and": [339, 340, 341, 342], "bitwise_invert": [343, 344, 345, 346], "bitwise_left_shift": [347, 348, 349, 350], "bitwise_or": [351, 352, 353, 354], "bitwise_right_shift": [355, 356, 357, 358], "bitwise_xor": [359, 360, 361, 362], "ceil": [363, 364, 365, 366], "co": [367, 368, 369, 370], "cosh": [371, 372, 373, 374], "divid": [375, 376, 377, 378], "static_divid": 379, "equal": [380, 381, 382, 383], "erf": [384, 385, 386, 387], "exp": [388, 389, 390, 391], "expm1": [392, 393, 394, 395], "floor": [396, 397, 398, 399], "floor_divid": [400, 401, 402, 403], "greater": [404, 405, 406, 407], "greater_equ": [408, 409, 410, 411], "isfinit": [412, 413, 414, 415], "isinf": [416, 417, 418, 419], "isnan": [420, 421, 422, 423], "less": [424, 425, 426, 427], "less_equ": [428, 429, 430, 431], "log": [432, 433, 434, 435], "log10": [436, 437, 438, 439], "log1p": [440, 441, 442, 443], "log2": [444, 445, 446, 447], "logaddexp": [448, 449, 450, 451], "logical_and": [452, 453, 454, 455], "logical_not": [456, 457, 458, 459], "logical_or": [460, 461, 462, 463], "logical_xor": [464, 465, 466, 467], "maximum": 468, "minimum": 469, "multipli": [470, 471, 472, 473], "static_multipli": 474, "neg": [475, 476, 477, 478], "not_equ": [479, 480, 481, 482], "posit": [483, 484, 485, 486], "pow": [487, 488, 489, 490], "remaind": [491, 492, 493, 494], "round": [495, 496, 497, 498], "sign": [499, 500, 501, 502], "sin": [503, 504, 505, 506], "sinh": [507, 508, 509, 510], "sqrt": [511, 512, 513, 514], "squar": [515, 516, 517, 518], "subtract": [519, 521, 522, 523], "static_subtract": 520, "static_tan": 525, "static_tanh": 530, "trunc": [534, 535, 536, 537], "all_equ": [539, 540, 541, 542], "static_all_equ": 543, "arg_info": 544, "arg_nam": 545, "array_equ": 546, "arrays_equ": 547, "assert_supports_inplac": 548, "cache_fn": 549, "clip_matrix_norm": 550, "clip_vector_norm": [551, 552, 553], "container_typ": 554, "copy_arrai": 555, "cumprod": 556, "cumsum": 557, "current_backend_str": 558, "default": 559, "einops_rearrang": 560, "einops_reduc": 561, "einops_repeat": 562, "exist": 563, "floormod": 564, "fourier_encod": 565, "gather": 566, "gather_nd": [567, 568, 569, 570], "static_gather_nd": 571, "get_all_arrays_in_memori": 572, "get_min_bas": 573, "get_min_denomin": 574, "get_num_dim": 575, "get_referrers_recurs": 576, "has_nan": 577, "indices_wher": 578, "inplace_arrays_support": 579, "inplace_decr": 580, "inplace_incr": 581, "inplace_upd": 582, "inplace_variables_support": 583, "is_arrai": 584, "is_ivy_arrai": 585, "is_ivy_contain": 586, "is_native_arrai": 587, "match_kwarg": 588, "multiprocess": 589, "num_arrays_in_memori": 590, "one_hot": 591, "print_all_arrays_in_memori": 592, "queue_timeout": 593, "scatter_flat": 594, "scatter_nd": 595, "set_min_bas": 596, "set_min_denomin": 597, "set_queue_timeout": 598, "set_tmp_dir": 599, "shape_to_tupl": 601, "stable_divid": 602, "stable_pow": 603, "supports_inplac": 604, "tmp_dir": 605, "to_list": 606, "to_numpi": 607, "to_scalar": 608, "try_else_non": 609, "unstack": 610, "value_is_nan": 611, "adam_step": [614, 615, 616, 617], "static_adam_step": 618, "adam_upd": [619, 620, 621], "static_adam_upd": 622, "execute_with_gradi": 623, "gradient_descent_upd": [624, 625, 626], "static_gradient_descent_upd": 627, "is_vari": [628, 629, 630], "static_is_vari": 631, "lamb_upd": [632, 633, 634], "static_lamb_upd": 635, "lars_upd": [636, 637, 638], "static_lars_upd": 639, "optimizer_upd": [640, 641, 642], "static_optimizer_upd": 643, "set_with_grad": 644, "stop_gradi": 645, "unset_with_grad": 646, "variabl": 647, "variable_data": 648, "with_grad": 649, "conv1d": [651, 938], "conv1d_transpos": 652, "conv2d": [653, 940], "conv2d_transpos": 654, "conv3d": [655, 942], "conv3d_transpos": 656, "depthwise_conv2d": 657, "dropout": [658, 945], "lstm_updat": 660, "multi_head_attent": 661, "scaled_dot_product_attent": 662, "choleski": [664, 665, 666], "cross": [667, 668, 669], "det": [670, 671, 672], "diagon": [673, 674, 675], "eigh": [676, 677, 678], "eigvalsh": [679, 680, 681], "inv": [682, 683, 684], "matmul": [685, 686, 687, 688], "matrix_norm": [689, 690, 691], "matrix_pow": 692, "matrix_rank": [693, 694, 695], "matrix_transpos": [696, 697, 698], "outer": [699, 700, 701], "pinv": [702, 703, 704], "qr": [705, 706, 707], "slogdet": 708, "solv": [709, 710, 711], "svd": [712, 713, 714], "svdval": [715, 716, 717], "tensordot": [718, 719, 720], "trace": [721, 722, 723], "vecdot": [724, 725, 726], "vector_norm": [727, 728, 729], "vector_to_skew_symmetric_matrix": [730, 731, 732], "binary_cross_entropi": [734, 735, 736, 737], "static_binary_cross_entropi": 738, "cross_entropi": [739, 740, 741, 742], "static_cross_entropi": 743, "sparse_cross_entropi": [744, 745, 746, 747], "static_sparse_cross_entropi": 748, "clip": [750, 751, 752, 753], "static_clip": 754, "concat": [755, 756, 757, 758], "constant_pad": [759, 760, 761, 762], "expand_dim": [763, 764, 765, 766], "flip": [767, 768, 769, 770], "permute_dim": [771, 772, 773, 774], "repeat": [775, 776, 777, 778], "reshap": [779, 780, 781, 782], "static_rol": 787, "split": 788, "squeez": [789, 790, 791, 792], "stack": [793, 794, 795, 796], "swapax": [797, 798, 799, 800], "tile": [801, 802, 803, 804], "zero_pad": [805, 806, 807, 808], "meta": 809, "fomaml_step": 810, "maml_step": 811, "reptile_step": 812, "nest": 813, "all_nested_indic": 814, "copy_nest": 815, "index_nest": 816, "insert_into_nest_at_index": 817, "insert_into_nest_at_indic": 818, "map": 819, "map_nest_at_index": 820, "map_nest_at_indic": 821, "multi_index_nest": 822, "nested_ani": 823, "nested_indices_wher": 824, "nested_map": 825, "nested_multi_map": 826, "prune_nest_at_index": 827, "prune_nest_at_indic": 828, "set_nest_at_index": 829, "set_nest_at_indic": 830, "layer_norm": [832, 833, 834, 835], "multinomi": 837, "randint": [838, 839], "static_randint": 840, "random_norm": 841, "random_uniform": [842, 843, 844], "static_random_uniform": 845, "seed": 846, "shuffl": 847, "argmax": 849, "argmin": 850, "nonzero": 851, "where": 852, "depend": [853, 854, 855, 859, 861], "output": [853, 854, 855, 859, 861], "unique_al": 854, "unique_count": [855, 857, 858, 859], "static_unique_count": 856, "unique_invers": 860, "unique_valu": 861, "argsort": [863, 864, 865, 866], "static_argsort": 867, "static_sort": 872, "einsum": [874, 875, 876, 877], "max": [878, 879, 880, 881], "mean": [882, 883, 884, 885], "min": [886, 887, 888, 889], "prod": [890, 891, 892, 893], "std": [894, 895, 896, 897], "sum": [898, 899, 900, 901], "var": [902, 903, 904, 905], "all": [907, 908, 909, 910], "ani": [911, 912, 913, 914], "content": 915, "overview": 915, "quick": 915, "start": 915, "roadmap": [915, 921], "citat": 915, "inspect": 918, "add_array_spec": 919, "fn_array_spec": 920, "geglu": 924, "to_ivy_modul": 927, "firstlayersiren": 930, "glorotuniform": 931, "Ones": 933, "siren": 934, "conv1dtranspos": 939, "conv2dtranspos": 941, "conv3dtranspos": 943, "depthwiseconv2d": 944, "lstm": 946, "multiheadattent": 948, "layernorm": 952, "adam": 954, "lamb": 955, "lar": 956, "sgd": 958, "sequenti": [959, 960], "verbos": 962, "cprint": 963}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})